{"version":3,"sources":["../../../../../../../node_modules/acorn-jsx/node_modules/acorn/src/loose/state.js"],"names":["pluginsLoose","LooseParser","input","options","toks","tok","last","type","eof","start","end","locations","here","curPosition","loc","ahead","context","curIndent","curLineStart","nextLineStart","lineEnd","loadPlugins","pos","node","ranges","range","dummy","startNode","name","dummyNode","value","raw","next","eat","braceR","test","slice","semi","i","lookAhead","j","push","pop","length","charCodeAt","count","ch","tabSize","closeTok","indent","line","blockHeuristic","tokenStartsLine","indentationAfter","p","f","pluginConfigs","plugin","Error"],"mappings":"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","file":"state.js","sourcesContent":["import {tokenizer, SourceLocation, tokTypes as tt, Node, lineBreak, isNewLine} from \"acorn\"\n\n// Registered plugins\nexport const pluginsLoose = {}\n\nexport class LooseParser {\n  constructor(input, options = {}) {\n    this.toks = tokenizer(input, options)\n    this.options = this.toks.options\n    this.input = this.toks.input\n    this.tok = this.last = {type: tt.eof, start: 0, end: 0}\n    if (this.options.locations) {\n      let here = this.toks.curPosition()\n      this.tok.loc = new SourceLocation(this.toks, here, here)\n    }\n    this.ahead = [] // Tokens ahead\n    this.context = [] // Indentation contexted\n    this.curIndent = 0\n    this.curLineStart = 0\n    this.nextLineStart = this.lineEnd(this.curLineStart) + 1\n    // Load plugins\n    this.options.pluginsLoose = options.pluginsLoose || {}\n    this.loadPlugins(this.options.pluginsLoose)\n  }\n\n  startNode() {\n    return new Node(this.toks, this.tok.start, this.options.locations ? this.tok.loc.start : null)\n  }\n\n  storeCurrentPos() {\n    return this.options.locations ? [this.tok.start, this.tok.loc.start] : this.tok.start\n  }\n\n  startNodeAt(pos) {\n    if (this.options.locations) {\n      return new Node(this.toks, pos[0], pos[1])\n    } else {\n      return new Node(this.toks, pos)\n    }\n  }\n\n  finishNode(node, type) {\n    node.type = type\n    node.end = this.last.end\n    if (this.options.locations)\n      node.loc.end = this.last.loc.end\n    if (this.options.ranges)\n      node.range[1] = this.last.end\n    return node\n  }\n\n  dummyNode(type) {\n    let dummy = this.startNode()\n    dummy.type = type\n    dummy.end = dummy.start\n    if (this.options.locations)\n      dummy.loc.end = dummy.loc.start\n    if (this.options.ranges)\n      dummy.range[1] = dummy.start\n    this.last = {type: tt.name, start: dummy.start, end: dummy.start, loc: dummy.loc}\n    return dummy\n  }\n\n  dummyIdent() {\n    let dummy = this.dummyNode(\"Identifier\")\n    dummy.name = \"✖\"\n    return dummy\n  }\n\n  dummyString() {\n    let dummy = this.dummyNode(\"Literal\")\n    dummy.value = dummy.raw = \"✖\"\n    return dummy\n  }\n\n  eat(type) {\n    if (this.tok.type === type) {\n      this.next()\n      return true\n    } else {\n      return false\n    }\n  }\n\n  isContextual(name) {\n    return this.tok.type === tt.name && this.tok.value === name\n  }\n\n  eatContextual(name) {\n    return this.tok.value === name && this.eat(tt.name)\n  }\n\n  canInsertSemicolon() {\n    return this.tok.type === tt.eof || this.tok.type === tt.braceR ||\n      lineBreak.test(this.input.slice(this.last.end, this.tok.start))\n  }\n\n  semicolon() {\n    return this.eat(tt.semi)\n  }\n\n  expect(type) {\n    if (this.eat(type)) return true\n    for (let i = 1; i <= 2; i++) {\n      if (this.lookAhead(i).type == type) {\n        for (let j = 0; j < i; j++) this.next()\n        return true\n      }\n    }\n  }\n\n  pushCx() {\n    this.context.push(this.curIndent)\n  }\n\n  popCx() {\n    this.curIndent = this.context.pop()\n  }\n\n  lineEnd(pos) {\n    while (pos < this.input.length && !isNewLine(this.input.charCodeAt(pos))) ++pos\n    return pos\n  }\n\n  indentationAfter(pos) {\n    for (let count = 0;; ++pos) {\n      let ch = this.input.charCodeAt(pos)\n      if (ch === 32) ++count\n      else if (ch === 9) count += this.options.tabSize\n      else return count\n    }\n  }\n\n  closes(closeTok, indent, line, blockHeuristic) {\n    if (this.tok.type === closeTok || this.tok.type === tt.eof) return true\n    return line != this.curLineStart && this.curIndent < indent && this.tokenStartsLine() &&\n      (!blockHeuristic || this.nextLineStart >= this.input.length ||\n       this.indentationAfter(this.nextLineStart) < indent)\n  }\n\n  tokenStartsLine() {\n    for (let p = this.tok.start - 1; p >= this.curLineStart; --p) {\n      let ch = this.input.charCodeAt(p)\n      if (ch !== 9 && ch !== 32) return false\n    }\n    return true\n  }\n\n  extend(name, f) {\n    this[name] = f(this[name])\n  }\n\n  loadPlugins(pluginConfigs) {\n    for (let name in pluginConfigs) {\n      let plugin = pluginsLoose[name]\n      if (!plugin) throw new Error(\"Plugin '\" + name + \"' not found\")\n      plugin(this, pluginConfigs[name])\n    }\n  }\n}\n"]}