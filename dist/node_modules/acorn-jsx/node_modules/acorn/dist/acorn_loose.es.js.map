{"version":3,"sources":["../../../../../../node_modules/acorn-jsx/node_modules/acorn/dist/acorn_loose.es.js"],"names":["pluginsLoose","LooseParser","input","options","toks","tok","last","type","eof","start","end","locations","here","curPosition","loc","ahead","context","curIndent","curLineStart","nextLineStart","lineEnd","loadPlugins","prototype","startNode","storeCurrentPos","startNodeAt","pos","finishNode","node","ranges","range","dummyNode","dummy","name","dummyIdent","dummyString","value","raw","eat","next","isContextual","eatContextual","canInsertSemicolon","braceR","test","slice","semicolon","semi","expect","this$1","i","lookAhead","j","pushCx","push","popCx","pop","length","charCodeAt","indentationAfter","count","ch","tabSize","closes","closeTok","indent","line","blockHeuristic","tokenStartsLine","p","extend","f","pluginConfigs","plugin","Error","lp","isSpace","shift","readToken","dot","substr","ecmaVersion","ellipsis","e","SyntaxError","msg","message","raisedAt","replace","string","re","RegExp","regexp","template","resetTo","charAt","exprAllowed","curLine","lineStart","lastIndex","match","exec","index","n","isDummy","lp$1","parseTopLevel","body","parseStatement","sourceType","starttype","kind","isLet","_var","_break","_continue","isBreak","label","parseIdent","_debugger","_do","_while","parseParenExpression","_for","parenL","parseFor","_const","init$1","parseVar","declarations","_in","parseForIn","init","parseExpression","toAssignable","_function","parseFunction","_if","consequent","alternate","_else","_return","argument","_switch","blockIndent","discriminant","cases","braceL","cur","_case","_default","isCase","colon","_throw","_try","block","parseBlock","handler","_catch","clause","param","parseExprAtom","parenR","finalizer","_finally","_with","object","_class","parseClass","_import","parseImport","_export","parseExport","expr","expression","update","left","right","noIn","decl","id","eq","parseMaybeAssign","comma","decl$1","isStatement","superClass","_extends","method","isGenerator","static","star","parsePropertyName","key","computed","parseMethod","initFunction","generator","params","parseFunctionParams","source","declaration","keyword","specifiers","parseExportSpecifierList","elt","local","parseImportSpecifierList","unshift","elts","continuedLine","elt$1","imported","exported","lp$2","checkLVal","expressions","val","startsExpr","delegate","parseMaybeConditional","isAssign","node$1","operator","parseExprOps","question","parseExprOp","parseMaybeUnary","minPrec","prec","binop","rightStart","sawUnary","prefix","incDec","parseExprSubscripts","postfix","node$2","starstar","node$3","parseSubscripts","base","noCalls","startIndent","property","parsePropertyAccessor","bracketL","bracketR","callee","arguments","parseExprList","backQuote","tag","quasi","parseTemplate","_this","_super","arrow","parseArrowExpression","regex","pattern","flags","num","_null","_true","_false","parenStart","inner","preserveParens","par","elements","parseObj","_new","parseNew","meta","parseTemplateElement","elem","cooked","tail","curElt","quasis","properties","prop","shorthand","assign","binding","props","toAssignableList","exprList","close","allowEmpty","defaultOptions","parse_dammit"],"mappings":"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","file":"acorn_loose.es.js","sourcesContent":["import acorn, { SourceLocation, tokTypes, tokenizer, Node, lineBreak, isNewLine, getLineInfo, Token, lineBreakG } from './acorn.js';\n\n// Registered plugins\nvar pluginsLoose = {}\n\nvar LooseParser = function LooseParser(input, options) {\n  if ( options === void 0 ) options = {};\n\n  this.toks = tokenizer(input, options)\n  this.options = this.toks.options\n  this.input = this.toks.input\n  this.tok = this.last = {type: tokTypes.eof, start: 0, end: 0}\n  if (this.options.locations) {\n    var here = this.toks.curPosition()\n    this.tok.loc = new SourceLocation(this.toks, here, here)\n  }\n  this.ahead = [] // Tokens ahead\n  this.context = [] // Indentation contexted\n  this.curIndent = 0\n  this.curLineStart = 0\n  this.nextLineStart = this.lineEnd(this.curLineStart) + 1\n  // Load plugins\n  this.options.pluginsLoose = options.pluginsLoose || {}\n  this.loadPlugins(this.options.pluginsLoose)\n};\n\nLooseParser.prototype.startNode = function startNode () {\n  return new Node(this.toks, this.tok.start, this.options.locations ? this.tok.loc.start : null)\n};\n\nLooseParser.prototype.storeCurrentPos = function storeCurrentPos () {\n  return this.options.locations ? [this.tok.start, this.tok.loc.start] : this.tok.start\n};\n\nLooseParser.prototype.startNodeAt = function startNodeAt (pos) {\n  if (this.options.locations) {\n    return new Node(this.toks, pos[0], pos[1])\n  } else {\n    return new Node(this.toks, pos)\n  }\n};\n\nLooseParser.prototype.finishNode = function finishNode (node, type) {\n  node.type = type\n  node.end = this.last.end\n  if (this.options.locations)\n    node.loc.end = this.last.loc.end\n  if (this.options.ranges)\n    node.range[1] = this.last.end\n  return node\n};\n\nLooseParser.prototype.dummyNode = function dummyNode (type) {\n  var dummy = this.startNode()\n  dummy.type = type\n  dummy.end = dummy.start\n  if (this.options.locations)\n    dummy.loc.end = dummy.loc.start\n  if (this.options.ranges)\n    dummy.range[1] = dummy.start\n  this.last = {type: tokTypes.name, start: dummy.start, end: dummy.start, loc: dummy.loc}\n  return dummy\n};\n\nLooseParser.prototype.dummyIdent = function dummyIdent () {\n  var dummy = this.dummyNode(\"Identifier\")\n  dummy.name = \"✖\"\n  return dummy\n};\n\nLooseParser.prototype.dummyString = function dummyString () {\n  var dummy = this.dummyNode(\"Literal\")\n  dummy.value = dummy.raw = \"✖\"\n  return dummy\n};\n\nLooseParser.prototype.eat = function eat (type) {\n  if (this.tok.type === type) {\n    this.next()\n    return true\n  } else {\n    return false\n  }\n};\n\nLooseParser.prototype.isContextual = function isContextual (name) {\n  return this.tok.type === tokTypes.name && this.tok.value === name\n};\n\nLooseParser.prototype.eatContextual = function eatContextual (name) {\n  return this.tok.value === name && this.eat(tokTypes.name)\n};\n\nLooseParser.prototype.canInsertSemicolon = function canInsertSemicolon () {\n  return this.tok.type === tokTypes.eof || this.tok.type === tokTypes.braceR ||\n    lineBreak.test(this.input.slice(this.last.end, this.tok.start))\n};\n\nLooseParser.prototype.semicolon = function semicolon () {\n  return this.eat(tokTypes.semi)\n};\n\nLooseParser.prototype.expect = function expect (type) {\n    var this$1 = this;\n\n  if (this.eat(type)) return true\n  for (var i = 1; i <= 2; i++) {\n    if (this$1.lookAhead(i).type == type) {\n      for (var j = 0; j < i; j++) this$1.next()\n      return true\n    }\n  }\n};\n\nLooseParser.prototype.pushCx = function pushCx () {\n  this.context.push(this.curIndent)\n};\n\nLooseParser.prototype.popCx = function popCx () {\n  this.curIndent = this.context.pop()\n};\n\nLooseParser.prototype.lineEnd = function lineEnd (pos) {\n  while (pos < this.input.length && !isNewLine(this.input.charCodeAt(pos))) ++pos\n  return pos\n};\n\nLooseParser.prototype.indentationAfter = function indentationAfter (pos) {\n    var this$1 = this;\n\n  for (var count = 0;; ++pos) {\n    var ch = this$1.input.charCodeAt(pos)\n    if (ch === 32) ++count\n    else if (ch === 9) count += this$1.options.tabSize\n    else return count\n  }\n};\n\nLooseParser.prototype.closes = function closes (closeTok, indent, line, blockHeuristic) {\n  if (this.tok.type === closeTok || this.tok.type === tokTypes.eof) return true\n  return line != this.curLineStart && this.curIndent < indent && this.tokenStartsLine() &&\n    (!blockHeuristic || this.nextLineStart >= this.input.length ||\n     this.indentationAfter(this.nextLineStart) < indent)\n};\n\nLooseParser.prototype.tokenStartsLine = function tokenStartsLine () {\n    var this$1 = this;\n\n  for (var p = this.tok.start - 1; p >= this.curLineStart; --p) {\n    var ch = this$1.input.charCodeAt(p)\n    if (ch !== 9 && ch !== 32) return false\n  }\n  return true\n};\n\nLooseParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name])\n};\n\nLooseParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = pluginsLoose[name]\n    if (!plugin) throw new Error(\"Plugin '\" + name + \"' not found\")\n    plugin(this$1, pluginConfigs[name])\n  }\n};\n\nvar lp = LooseParser.prototype\n\nfunction isSpace(ch) {\n  return (ch < 14 && ch > 8) || ch === 32 || ch === 160 || isNewLine(ch)\n}\n\nlp.next = function() {\n  var this$1 = this;\n\n  this.last = this.tok\n  if (this.ahead.length)\n    this.tok = this.ahead.shift()\n  else\n    this.tok = this.readToken()\n\n  if (this.tok.start >= this.nextLineStart) {\n    while (this.tok.start >= this.nextLineStart) {\n      this$1.curLineStart = this$1.nextLineStart\n      this$1.nextLineStart = this$1.lineEnd(this$1.curLineStart) + 1\n    }\n    this.curIndent = this.indentationAfter(this.curLineStart)\n  }\n}\n\nlp.readToken = function() {\n  var this$1 = this;\n\n  for (;;) {\n    try {\n      this$1.toks.next()\n      if (this$1.toks.type === tokTypes.dot &&\n          this$1.input.substr(this$1.toks.end, 1) === \".\" &&\n          this$1.options.ecmaVersion >= 6) {\n        this$1.toks.end++\n        this$1.toks.type = tokTypes.ellipsis\n      }\n      return new Token(this$1.toks)\n    } catch(e) {\n      if (!(e instanceof SyntaxError)) throw e\n\n      // Try to skip some text, based on the error message, and then continue\n      var msg = e.message, pos = e.raisedAt, replace = true\n      if (/unterminated/i.test(msg)) {\n        pos = this$1.lineEnd(e.pos + 1)\n        if (/string/.test(msg)) {\n          replace = {start: e.pos, end: pos, type: tokTypes.string, value: this$1.input.slice(e.pos + 1, pos)}\n        } else if (/regular expr/i.test(msg)) {\n          var re = this$1.input.slice(e.pos, pos)\n          try { re = new RegExp(re) } catch(e) {}\n          replace = {start: e.pos, end: pos, type: tokTypes.regexp, value: re}\n        } else if (/template/.test(msg)) {\n          replace = {start: e.pos, end: pos,\n                     type: tokTypes.template,\n                     value: this$1.input.slice(e.pos, pos)}\n        } else {\n          replace = false\n        }\n      } else if (/invalid (unicode|regexp|number)|expecting unicode|octal literal|is reserved|directly after number|expected number in radix/i.test(msg)) {\n        while (pos < this.input.length && !isSpace(this.input.charCodeAt(pos))) ++pos\n      } else if (/character escape|expected hexadecimal/i.test(msg)) {\n        while (pos < this.input.length) {\n          var ch = this$1.input.charCodeAt(pos++)\n          if (ch === 34 || ch === 39 || isNewLine(ch)) break\n        }\n      } else if (/unexpected character/i.test(msg)) {\n        pos++\n        replace = false\n      } else if (/regular expression/i.test(msg)) {\n        replace = true\n      } else {\n        throw e\n      }\n      this$1.resetTo(pos)\n      if (replace === true) replace = {start: pos, end: pos, type: tokTypes.name, value: \"✖\"}\n      if (replace) {\n        if (this$1.options.locations)\n          replace.loc = new SourceLocation(\n            this$1.toks,\n            getLineInfo(this$1.input, replace.start),\n            getLineInfo(this$1.input, replace.end))\n        return replace\n      }\n    }\n  }\n}\n\nlp.resetTo = function(pos) {\n  var this$1 = this;\n\n  this.toks.pos = pos\n  var ch = this.input.charAt(pos - 1)\n  this.toks.exprAllowed = !ch || /[\\[\\{\\(,;:?\\/*=+\\-~!|&%^<>]/.test(ch) ||\n    /[enwfd]/.test(ch) &&\n    /\\b(keywords|case|else|return|throw|new|in|(instance|type)of|delete|void)$/.test(this.input.slice(pos - 10, pos))\n\n  if (this.options.locations) {\n    this.toks.curLine = 1\n    this.toks.lineStart = lineBreakG.lastIndex = 0\n    var match\n    while ((match = lineBreakG.exec(this.input)) && match.index < pos) {\n      ++this$1.toks.curLine\n      this$1.toks.lineStart = match.index + match[0].length\n    }\n  }\n}\n\nlp.lookAhead = function(n) {\n  var this$1 = this;\n\n  while (n > this.ahead.length)\n    this$1.ahead.push(this$1.readToken())\n  return this.ahead[n - 1]\n}\n\nfunction isDummy(node) { return node.name == \"✖\" }\n\nvar lp$1 = LooseParser.prototype\n\nlp$1.parseTopLevel = function() {\n  var this$1 = this;\n\n  var node = this.startNodeAt(this.options.locations ? [0, getLineInfo(this.input, 0)] : 0)\n  node.body = []\n  while (this.tok.type !== tokTypes.eof) node.body.push(this$1.parseStatement())\n  this.last = this.tok\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType\n  }\n  return this.finishNode(node, \"Program\")\n}\n\nlp$1.parseStatement = function() {\n  var this$1 = this;\n\n  var starttype = this.tok.type, node = this.startNode(), kind\n\n  if (this.toks.isLet()) {\n    starttype = tokTypes._var\n    kind = \"let\"\n  }\n\n  switch (starttype) {\n  case tokTypes._break: case tokTypes._continue:\n    this.next()\n    var isBreak = starttype === tokTypes._break\n    if (this.semicolon() || this.canInsertSemicolon()) {\n      node.label = null\n    } else {\n      node.label = this.tok.type === tokTypes.name ? this.parseIdent() : null\n      this.semicolon()\n    }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n\n  case tokTypes._debugger:\n    this.next()\n    this.semicolon()\n    return this.finishNode(node, \"DebuggerStatement\")\n\n  case tokTypes._do:\n    this.next()\n    node.body = this.parseStatement()\n    node.test = this.eat(tokTypes._while) ? this.parseParenExpression() : this.dummyIdent()\n    this.semicolon()\n    return this.finishNode(node, \"DoWhileStatement\")\n\n  case tokTypes._for:\n    this.next()\n    this.pushCx()\n    this.expect(tokTypes.parenL)\n    if (this.tok.type === tokTypes.semi) return this.parseFor(node, null)\n    var isLet = this.toks.isLet()\n    if (isLet || this.tok.type === tokTypes._var || this.tok.type === tokTypes._const) {\n      var init$1 = this.parseVar(true, isLet ? \"let\" : this.tok.value)\n      if (init$1.declarations.length === 1 && (this.tok.type === tokTypes._in || this.isContextual(\"of\"))) {\n        return this.parseForIn(node, init$1)\n      }\n      return this.parseFor(node, init$1)\n    }\n    var init = this.parseExpression(true)\n    if (this.tok.type === tokTypes._in || this.isContextual(\"of\"))\n      return this.parseForIn(node, this.toAssignable(init))\n    return this.parseFor(node, init)\n\n  case tokTypes._function:\n    this.next()\n    return this.parseFunction(node, true)\n\n  case tokTypes._if:\n    this.next()\n    node.test = this.parseParenExpression()\n    node.consequent = this.parseStatement()\n    node.alternate = this.eat(tokTypes._else) ? this.parseStatement() : null\n    return this.finishNode(node, \"IfStatement\")\n\n  case tokTypes._return:\n    this.next()\n    if (this.eat(tokTypes.semi) || this.canInsertSemicolon()) node.argument = null\n    else { node.argument = this.parseExpression(); this.semicolon() }\n    return this.finishNode(node, \"ReturnStatement\")\n\n  case tokTypes._switch:\n    var blockIndent = this.curIndent, line = this.curLineStart\n    this.next()\n    node.discriminant = this.parseParenExpression()\n    node.cases = []\n    this.pushCx()\n    this.expect(tokTypes.braceL)\n\n    var cur\n    while (!this.closes(tokTypes.braceR, blockIndent, line, true)) {\n      if (this$1.tok.type === tokTypes._case || this$1.tok.type === tokTypes._default) {\n        var isCase = this$1.tok.type === tokTypes._case\n        if (cur) this$1.finishNode(cur, \"SwitchCase\")\n        node.cases.push(cur = this$1.startNode())\n        cur.consequent = []\n        this$1.next()\n        if (isCase) cur.test = this$1.parseExpression()\n        else cur.test = null\n        this$1.expect(tokTypes.colon)\n      } else {\n        if (!cur) {\n          node.cases.push(cur = this$1.startNode())\n          cur.consequent = []\n          cur.test = null\n        }\n        cur.consequent.push(this$1.parseStatement())\n      }\n    }\n    if (cur) this.finishNode(cur, \"SwitchCase\")\n    this.popCx()\n    this.eat(tokTypes.braceR)\n    return this.finishNode(node, \"SwitchStatement\")\n\n  case tokTypes._throw:\n    this.next()\n    node.argument = this.parseExpression()\n    this.semicolon()\n    return this.finishNode(node, \"ThrowStatement\")\n\n  case tokTypes._try:\n    this.next()\n    node.block = this.parseBlock()\n    node.handler = null\n    if (this.tok.type === tokTypes._catch) {\n      var clause = this.startNode()\n      this.next()\n      this.expect(tokTypes.parenL)\n      clause.param = this.toAssignable(this.parseExprAtom(), true)\n      this.expect(tokTypes.parenR)\n      clause.body = this.parseBlock()\n      node.handler = this.finishNode(clause, \"CatchClause\")\n    }\n    node.finalizer = this.eat(tokTypes._finally) ? this.parseBlock() : null\n    if (!node.handler && !node.finalizer) return node.block\n    return this.finishNode(node, \"TryStatement\")\n\n  case tokTypes._var:\n  case tokTypes._const:\n    return this.parseVar(false, kind || this.tok.value)\n\n  case tokTypes._while:\n    this.next()\n    node.test = this.parseParenExpression()\n    node.body = this.parseStatement()\n    return this.finishNode(node, \"WhileStatement\")\n\n  case tokTypes._with:\n    this.next()\n    node.object = this.parseParenExpression()\n    node.body = this.parseStatement()\n    return this.finishNode(node, \"WithStatement\")\n\n  case tokTypes.braceL:\n    return this.parseBlock()\n\n  case tokTypes.semi:\n    this.next()\n    return this.finishNode(node, \"EmptyStatement\")\n\n  case tokTypes._class:\n    return this.parseClass(true)\n\n  case tokTypes._import:\n    return this.parseImport()\n\n  case tokTypes._export:\n    return this.parseExport()\n\n  default:\n    var expr = this.parseExpression()\n    if (isDummy(expr)) {\n      this.next()\n      if (this.tok.type === tokTypes.eof) return this.finishNode(node, \"EmptyStatement\")\n      return this.parseStatement()\n    } else if (starttype === tokTypes.name && expr.type === \"Identifier\" && this.eat(tokTypes.colon)) {\n      node.body = this.parseStatement()\n      node.label = expr\n      return this.finishNode(node, \"LabeledStatement\")\n    } else {\n      node.expression = expr\n      this.semicolon()\n      return this.finishNode(node, \"ExpressionStatement\")\n    }\n  }\n}\n\nlp$1.parseBlock = function() {\n  var this$1 = this;\n\n  var node = this.startNode()\n  this.pushCx()\n  this.expect(tokTypes.braceL)\n  var blockIndent = this.curIndent, line = this.curLineStart\n  node.body = []\n  while (!this.closes(tokTypes.braceR, blockIndent, line, true))\n    node.body.push(this$1.parseStatement())\n  this.popCx()\n  this.eat(tokTypes.braceR)\n  return this.finishNode(node, \"BlockStatement\")\n}\n\nlp$1.parseFor = function(node, init) {\n  node.init = init\n  node.test = node.update = null\n  if (this.eat(tokTypes.semi) && this.tok.type !== tokTypes.semi) node.test = this.parseExpression()\n  if (this.eat(tokTypes.semi) && this.tok.type !== tokTypes.parenR) node.update = this.parseExpression()\n  this.popCx()\n  this.expect(tokTypes.parenR)\n  node.body = this.parseStatement()\n  return this.finishNode(node, \"ForStatement\")\n}\n\nlp$1.parseForIn = function(node, init) {\n  var type = this.tok.type === tokTypes._in ? \"ForInStatement\" : \"ForOfStatement\"\n  this.next()\n  node.left = init\n  node.right = this.parseExpression()\n  this.popCx()\n  this.expect(tokTypes.parenR)\n  node.body = this.parseStatement()\n  return this.finishNode(node, type)\n}\n\nlp$1.parseVar = function(noIn, kind) {\n  var this$1 = this;\n\n  var node = this.startNode()\n  node.kind = kind\n  this.next()\n  node.declarations = []\n  do {\n    var decl = this$1.startNode()\n    decl.id = this$1.options.ecmaVersion >= 6 ? this$1.toAssignable(this$1.parseExprAtom(), true) : this$1.parseIdent()\n    decl.init = this$1.eat(tokTypes.eq) ? this$1.parseMaybeAssign(noIn) : null\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"))\n  } while (this.eat(tokTypes.comma))\n  if (!node.declarations.length) {\n    var decl$1 = this.startNode()\n    decl$1.id = this.dummyIdent()\n    node.declarations.push(this.finishNode(decl$1, \"VariableDeclarator\"))\n  }\n  if (!noIn) this.semicolon()\n  return this.finishNode(node, \"VariableDeclaration\")\n}\n\nlp$1.parseClass = function(isStatement) {\n  var this$1 = this;\n\n  var node = this.startNode()\n  this.next()\n  if (this.tok.type === tokTypes.name) node.id = this.parseIdent()\n  else if (isStatement) node.id = this.dummyIdent()\n  else node.id = null\n  node.superClass = this.eat(tokTypes._extends) ? this.parseExpression() : null\n  node.body = this.startNode()\n  node.body.body = []\n  this.pushCx()\n  var indent = this.curIndent + 1, line = this.curLineStart\n  this.eat(tokTypes.braceL)\n  if (this.curIndent + 1 < indent) { indent = this.curIndent; line = this.curLineStart }\n  while (!this.closes(tokTypes.braceR, indent, line)) {\n    if (this$1.semicolon()) continue\n    var method = this$1.startNode(), isGenerator\n    if (this$1.options.ecmaVersion >= 6) {\n      method.static = false\n      isGenerator = this$1.eat(tokTypes.star)\n    }\n    this$1.parsePropertyName(method)\n    if (isDummy(method.key)) { if (isDummy(this$1.parseMaybeAssign())) this$1.next(); this$1.eat(tokTypes.comma); continue }\n    if (method.key.type === \"Identifier\" && !method.computed && method.key.name === \"static\" &&\n        (this$1.tok.type != tokTypes.parenL && this$1.tok.type != tokTypes.braceL)) {\n      method.static = true\n      isGenerator = this$1.eat(tokTypes.star)\n      this$1.parsePropertyName(method)\n    } else {\n      method.static = false\n    }\n    if (this$1.options.ecmaVersion >= 5 && method.key.type === \"Identifier\" &&\n        !method.computed && (method.key.name === \"get\" || method.key.name === \"set\") &&\n        this$1.tok.type !== tokTypes.parenL && this$1.tok.type !== tokTypes.braceL) {\n      method.kind = method.key.name\n      this$1.parsePropertyName(method)\n      method.value = this$1.parseMethod(false)\n    } else {\n      if (!method.computed && !method.static && !isGenerator && (\n        method.key.type === \"Identifier\" && method.key.name === \"constructor\" ||\n          method.key.type === \"Literal\" && method.key.value === \"constructor\")) {\n        method.kind = \"constructor\"\n      } else {\n        method.kind =  \"method\"\n      }\n      method.value = this$1.parseMethod(isGenerator)\n    }\n    node.body.body.push(this$1.finishNode(method, \"MethodDefinition\"))\n  }\n  this.popCx()\n  if (!this.eat(tokTypes.braceR)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start\n    if (this.options.locations) this.last.loc.end = this.tok.loc.start\n  }\n  this.semicolon()\n  this.finishNode(node.body, \"ClassBody\")\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n}\n\nlp$1.parseFunction = function(node, isStatement) {\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = this.eat(tokTypes.star)\n  }\n  if (this.tok.type === tokTypes.name) node.id = this.parseIdent()\n  else if (isStatement) node.id = this.dummyIdent()\n  node.params = this.parseFunctionParams()\n  node.body = this.parseBlock()\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n}\n\nlp$1.parseExport = function() {\n  var node = this.startNode()\n  this.next()\n  if (this.eat(tokTypes.star)) {\n    node.source = this.eatContextual(\"from\") ? this.parseExprAtom() : this.dummyString()\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(tokTypes._default)) {\n    var expr = this.parseMaybeAssign()\n    if (expr.id) {\n      switch (expr.type) {\n      case \"FunctionExpression\": expr.type = \"FunctionDeclaration\"; break\n      case \"ClassExpression\": expr.type = \"ClassDeclaration\"; break\n      }\n    }\n    node.declaration = expr\n    this.semicolon()\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  if (this.tok.type.keyword || this.toks.isLet()) {\n    node.declaration = this.parseStatement()\n    node.specifiers = []\n    node.source = null\n  } else {\n    node.declaration = null\n    node.specifiers = this.parseExportSpecifierList()\n    node.source = this.eatContextual(\"from\") ? this.parseExprAtom() : null\n    this.semicolon()\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n}\n\nlp$1.parseImport = function() {\n  var node = this.startNode()\n  this.next()\n  if (this.tok.type === tokTypes.string) {\n    node.specifiers = []\n    node.source = this.parseExprAtom()\n    node.kind = ''\n  } else {\n    var elt\n    if (this.tok.type === tokTypes.name && this.tok.value !== \"from\") {\n      elt = this.startNode()\n      elt.local = this.parseIdent()\n      this.finishNode(elt, \"ImportDefaultSpecifier\")\n      this.eat(tokTypes.comma)\n    }\n    node.specifiers = this.parseImportSpecifierList()\n    node.source = this.eatContextual(\"from\") && this.tok.type == tokTypes.string ? this.parseExprAtom() : this.dummyString()\n    if (elt) node.specifiers.unshift(elt)\n  }\n  this.semicolon()\n  return this.finishNode(node, \"ImportDeclaration\")\n}\n\nlp$1.parseImportSpecifierList = function() {\n  var this$1 = this;\n\n  var elts = []\n  if (this.tok.type === tokTypes.star) {\n    var elt = this.startNode()\n    this.next()\n    elt.local = this.eatContextual(\"as\") ? this.parseIdent() : this.dummyIdent()\n    elts.push(this.finishNode(elt, \"ImportNamespaceSpecifier\"))\n  } else {\n    var indent = this.curIndent, line = this.curLineStart, continuedLine = this.nextLineStart\n    this.pushCx()\n    this.eat(tokTypes.braceL)\n    if (this.curLineStart > continuedLine) continuedLine = this.curLineStart\n    while (!this.closes(tokTypes.braceR, indent + (this.curLineStart <= continuedLine ? 1 : 0), line)) {\n      var elt$1 = this$1.startNode()\n      if (this$1.eat(tokTypes.star)) {\n        elt$1.local = this$1.eatContextual(\"as\") ? this$1.parseIdent() : this$1.dummyIdent()\n        this$1.finishNode(elt$1, \"ImportNamespaceSpecifier\")\n      } else {\n        if (this$1.isContextual(\"from\")) break\n        elt$1.imported = this$1.parseIdent()\n        if (isDummy(elt$1.imported)) break\n        elt$1.local = this$1.eatContextual(\"as\") ? this$1.parseIdent() : elt$1.imported\n        this$1.finishNode(elt$1, \"ImportSpecifier\")\n      }\n      elts.push(elt$1)\n      this$1.eat(tokTypes.comma)\n    }\n    this.eat(tokTypes.braceR)\n    this.popCx()\n  }\n  return elts\n}\n\nlp$1.parseExportSpecifierList = function() {\n  var this$1 = this;\n\n  var elts = []\n  var indent = this.curIndent, line = this.curLineStart, continuedLine = this.nextLineStart\n  this.pushCx()\n  this.eat(tokTypes.braceL)\n  if (this.curLineStart > continuedLine) continuedLine = this.curLineStart\n  while (!this.closes(tokTypes.braceR, indent + (this.curLineStart <= continuedLine ? 1 : 0), line)) {\n    if (this$1.isContextual(\"from\")) break\n    var elt = this$1.startNode()\n    elt.local = this$1.parseIdent()\n    if (isDummy(elt.local)) break\n    elt.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent() : elt.local\n    this$1.finishNode(elt, \"ExportSpecifier\")\n    elts.push(elt)\n    this$1.eat(tokTypes.comma)\n  }\n  this.eat(tokTypes.braceR)\n  this.popCx()\n  return elts\n}\n\nvar lp$2 = LooseParser.prototype\n\nlp$2.checkLVal = function(expr) {\n  if (!expr) return expr\n  switch (expr.type) {\n  case \"Identifier\":\n  case \"MemberExpression\":\n    return expr\n\n  case \"ParenthesizedExpression\":\n    expr.expression = this.checkLVal(expr.expression)\n    return expr\n\n  default:\n    return this.dummyIdent()\n  }\n}\n\nlp$2.parseExpression = function(noIn) {\n  var this$1 = this;\n\n  var start = this.storeCurrentPos()\n  var expr = this.parseMaybeAssign(noIn)\n  if (this.tok.type === tokTypes.comma) {\n    var node = this.startNodeAt(start)\n    node.expressions = [expr]\n    while (this.eat(tokTypes.comma)) node.expressions.push(this$1.parseMaybeAssign(noIn))\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n}\n\nlp$2.parseParenExpression = function() {\n  this.pushCx()\n  this.expect(tokTypes.parenL)\n  var val = this.parseExpression()\n  this.popCx()\n  this.expect(tokTypes.parenR)\n  return val\n}\n\nlp$2.parseMaybeAssign = function(noIn) {\n  if (this.toks.isContextual(\"yield\")) {\n    var node = this.startNode()\n    this.next()\n    if (this.semicolon() || this.canInsertSemicolon() || (this.tok.type != tokTypes.star && !this.tok.type.startsExpr)) {\n      node.delegate = false\n      node.argument = null\n    } else {\n      node.delegate = this.eat(tokTypes.star)\n      node.argument = this.parseMaybeAssign()\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  }\n\n  var start = this.storeCurrentPos()\n  var left = this.parseMaybeConditional(noIn)\n  if (this.tok.type.isAssign) {\n    var node$1 = this.startNodeAt(start)\n    node$1.operator = this.tok.value\n    node$1.left = this.tok.type === tokTypes.eq ? this.toAssignable(left) : this.checkLVal(left)\n    this.next()\n    node$1.right = this.parseMaybeAssign(noIn)\n    return this.finishNode(node$1, \"AssignmentExpression\")\n  }\n  return left\n}\n\nlp$2.parseMaybeConditional = function(noIn) {\n  var start = this.storeCurrentPos()\n  var expr = this.parseExprOps(noIn)\n  if (this.eat(tokTypes.question)) {\n    var node = this.startNodeAt(start)\n    node.test = expr\n    node.consequent = this.parseMaybeAssign()\n    node.alternate = this.expect(tokTypes.colon) ? this.parseMaybeAssign(noIn) : this.dummyIdent()\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n}\n\nlp$2.parseExprOps = function(noIn) {\n  var start = this.storeCurrentPos()\n  var indent = this.curIndent, line = this.curLineStart\n  return this.parseExprOp(this.parseMaybeUnary(false), start, -1, noIn, indent, line)\n}\n\nlp$2.parseExprOp = function(left, start, minPrec, noIn, indent, line) {\n  if (this.curLineStart != line && this.curIndent < indent && this.tokenStartsLine()) return left\n  var prec = this.tok.type.binop\n  if (prec != null && (!noIn || this.tok.type !== tokTypes._in)) {\n    if (prec > minPrec) {\n      var node = this.startNodeAt(start)\n      node.left = left\n      node.operator = this.tok.value\n      this.next()\n      if (this.curLineStart != line && this.curIndent < indent && this.tokenStartsLine()) {\n        node.right = this.dummyIdent()\n      } else {\n        var rightStart = this.storeCurrentPos()\n        node.right = this.parseExprOp(this.parseMaybeUnary(false), rightStart, prec, noIn, indent, line)\n      }\n      this.finishNode(node, /&&|\\|\\|/.test(node.operator) ? \"LogicalExpression\" : \"BinaryExpression\")\n      return this.parseExprOp(node, start, minPrec, noIn, indent, line)\n    }\n  }\n  return left\n}\n\nlp$2.parseMaybeUnary = function(sawUnary) {\n  var this$1 = this;\n\n  var start = this.storeCurrentPos(), expr\n  if (this.tok.type.prefix) {\n    var node = this.startNode(), update = this.tok.type === tokTypes.incDec\n    if (!update) sawUnary = true\n    node.operator = this.tok.value\n    node.prefix = true\n    this.next()\n    node.argument = this.parseMaybeUnary(true)\n    if (update) node.argument = this.checkLVal(node.argument)\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\")\n  } else if (this.tok.type === tokTypes.ellipsis) {\n    var node$1 = this.startNode()\n    this.next()\n    node$1.argument = this.parseMaybeUnary(sawUnary)\n    expr = this.finishNode(node$1, \"SpreadElement\")\n  } else {\n    expr = this.parseExprSubscripts()\n    while (this.tok.type.postfix && !this.canInsertSemicolon()) {\n      var node$2 = this$1.startNodeAt(start)\n      node$2.operator = this$1.tok.value\n      node$2.prefix = false\n      node$2.argument = this$1.checkLVal(expr)\n      this$1.next()\n      expr = this$1.finishNode(node$2, \"UpdateExpression\")\n    }\n  }\n\n  if (!sawUnary && this.eat(tokTypes.starstar)) {\n    var node$3 = this.startNodeAt(start)\n    node$3.operator = \"**\"\n    node$3.left = expr\n    node$3.right = this.parseMaybeUnary(false)\n    return this.finishNode(node$3, \"BinaryExpression\")\n  }\n\n  return expr\n}\n\nlp$2.parseExprSubscripts = function() {\n  var start = this.storeCurrentPos()\n  return this.parseSubscripts(this.parseExprAtom(), start, false, this.curIndent, this.curLineStart)\n}\n\nlp$2.parseSubscripts = function(base, start, noCalls, startIndent, line) {\n  var this$1 = this;\n\n  for (;;) {\n    if (this$1.curLineStart != line && this$1.curIndent <= startIndent && this$1.tokenStartsLine()) {\n      if (this$1.tok.type == tokTypes.dot && this$1.curIndent == startIndent)\n        --startIndent\n      else\n        return base\n    }\n\n    if (this$1.eat(tokTypes.dot)) {\n      var node = this$1.startNodeAt(start)\n      node.object = base\n      if (this$1.curLineStart != line && this$1.curIndent <= startIndent && this$1.tokenStartsLine())\n        node.property = this$1.dummyIdent()\n      else\n        node.property = this$1.parsePropertyAccessor() || this$1.dummyIdent()\n      node.computed = false\n      base = this$1.finishNode(node, \"MemberExpression\")\n    } else if (this$1.tok.type == tokTypes.bracketL) {\n      this$1.pushCx()\n      this$1.next()\n      var node$1 = this$1.startNodeAt(start)\n      node$1.object = base\n      node$1.property = this$1.parseExpression()\n      node$1.computed = true\n      this$1.popCx()\n      this$1.expect(tokTypes.bracketR)\n      base = this$1.finishNode(node$1, \"MemberExpression\")\n    } else if (!noCalls && this$1.tok.type == tokTypes.parenL) {\n      var node$2 = this$1.startNodeAt(start)\n      node$2.callee = base\n      node$2.arguments = this$1.parseExprList(tokTypes.parenR)\n      base = this$1.finishNode(node$2, \"CallExpression\")\n    } else if (this$1.tok.type == tokTypes.backQuote) {\n      var node$3 = this$1.startNodeAt(start)\n      node$3.tag = base\n      node$3.quasi = this$1.parseTemplate()\n      base = this$1.finishNode(node$3, \"TaggedTemplateExpression\")\n    } else {\n      return base\n    }\n  }\n}\n\nlp$2.parseExprAtom = function() {\n  var node\n  switch (this.tok.type) {\n  case tokTypes._this:\n  case tokTypes._super:\n    var type = this.tok.type === tokTypes._this ? \"ThisExpression\" : \"Super\"\n    node = this.startNode()\n    this.next()\n    return this.finishNode(node, type)\n\n  case tokTypes.name:\n    var start = this.storeCurrentPos()\n    var id = this.parseIdent()\n    return this.eat(tokTypes.arrow) ? this.parseArrowExpression(this.startNodeAt(start), [id]) : id\n\n  case tokTypes.regexp:\n    node = this.startNode()\n    var val = this.tok.value\n    node.regex = {pattern: val.pattern, flags: val.flags}\n    node.value = val.value\n    node.raw = this.input.slice(this.tok.start, this.tok.end)\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case tokTypes.num: case tokTypes.string:\n    node = this.startNode()\n    node.value = this.tok.value\n    node.raw = this.input.slice(this.tok.start, this.tok.end)\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case tokTypes._null: case tokTypes._true: case tokTypes._false:\n    node = this.startNode()\n    node.value = this.tok.type === tokTypes._null ? null : this.tok.type === tokTypes._true\n    node.raw = this.tok.type.keyword\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case tokTypes.parenL:\n    var parenStart = this.storeCurrentPos()\n    this.next()\n    var inner = this.parseExpression()\n    this.expect(tokTypes.parenR)\n    if (this.eat(tokTypes.arrow)) {\n      return this.parseArrowExpression(this.startNodeAt(parenStart), inner.expressions || (isDummy(inner) ? [] : [inner]))\n    }\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(parenStart)\n      par.expression = inner\n      inner = this.finishNode(par, \"ParenthesizedExpression\")\n    }\n    return inner\n\n  case tokTypes.bracketL:\n    node = this.startNode()\n    node.elements = this.parseExprList(tokTypes.bracketR, true)\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case tokTypes.braceL:\n    return this.parseObj()\n\n  case tokTypes._class:\n    return this.parseClass()\n\n  case tokTypes._function:\n    node = this.startNode()\n    this.next()\n    return this.parseFunction(node, false)\n\n  case tokTypes._new:\n    return this.parseNew()\n\n  case tokTypes.backQuote:\n    return this.parseTemplate()\n\n  default:\n    return this.dummyIdent()\n  }\n}\n\nlp$2.parseNew = function() {\n  var node = this.startNode(), startIndent = this.curIndent, line = this.curLineStart\n  var meta = this.parseIdent(true)\n  if (this.options.ecmaVersion >= 6 && this.eat(tokTypes.dot)) {\n    node.meta = meta\n    node.property = this.parseIdent(true)\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var start = this.storeCurrentPos()\n  node.callee = this.parseSubscripts(this.parseExprAtom(), start, true, startIndent, line)\n  if (this.tok.type == tokTypes.parenL) {\n    node.arguments = this.parseExprList(tokTypes.parenR)\n  } else {\n    node.arguments = []\n  }\n  return this.finishNode(node, \"NewExpression\")\n}\n\nlp$2.parseTemplateElement = function() {\n  var elem = this.startNode()\n  elem.value = {\n    raw: this.input.slice(this.tok.start, this.tok.end).replace(/\\r\\n?/g, '\\n'),\n    cooked: this.tok.value\n  }\n  this.next()\n  elem.tail = this.tok.type === tokTypes.backQuote\n  return this.finishNode(elem, \"TemplateElement\")\n}\n\nlp$2.parseTemplate = function() {\n  var this$1 = this;\n\n  var node = this.startNode()\n  this.next()\n  node.expressions = []\n  var curElt = this.parseTemplateElement()\n  node.quasis = [curElt]\n  while (!curElt.tail) {\n    this$1.next()\n    node.expressions.push(this$1.parseExpression())\n    if (this$1.expect(tokTypes.braceR)) {\n      curElt = this$1.parseTemplateElement()\n    } else {\n      curElt = this$1.startNode()\n      curElt.value = {cooked: '', raw: ''}\n      curElt.tail = true\n      this$1.finishNode(curElt, \"TemplateElement\")\n    }\n    node.quasis.push(curElt)\n  }\n  this.expect(tokTypes.backQuote)\n  return this.finishNode(node, \"TemplateLiteral\")\n}\n\nlp$2.parseObj = function() {\n  var this$1 = this;\n\n  var node = this.startNode()\n  node.properties = []\n  this.pushCx()\n  var indent = this.curIndent + 1, line = this.curLineStart\n  this.eat(tokTypes.braceL)\n  if (this.curIndent + 1 < indent) { indent = this.curIndent; line = this.curLineStart }\n  while (!this.closes(tokTypes.braceR, indent, line)) {\n    var prop = this$1.startNode(), isGenerator, start\n    if (this$1.options.ecmaVersion >= 6) {\n      start = this$1.storeCurrentPos()\n      prop.method = false\n      prop.shorthand = false\n      isGenerator = this$1.eat(tokTypes.star)\n    }\n    this$1.parsePropertyName(prop)\n    if (isDummy(prop.key)) { if (isDummy(this$1.parseMaybeAssign())) this$1.next(); this$1.eat(tokTypes.comma); continue }\n    if (this$1.eat(tokTypes.colon)) {\n      prop.kind = \"init\"\n      prop.value = this$1.parseMaybeAssign()\n    } else if (this$1.options.ecmaVersion >= 6 && (this$1.tok.type === tokTypes.parenL || this$1.tok.type === tokTypes.braceL)) {\n      prop.kind = \"init\"\n      prop.method = true\n      prop.value = this$1.parseMethod(isGenerator)\n    } else if (this$1.options.ecmaVersion >= 5 && prop.key.type === \"Identifier\" &&\n               !prop.computed && (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this$1.tok.type != tokTypes.comma && this$1.tok.type != tokTypes.braceR)) {\n      prop.kind = prop.key.name\n      this$1.parsePropertyName(prop)\n      prop.value = this$1.parseMethod(false)\n    } else {\n      prop.kind = \"init\"\n      if (this$1.options.ecmaVersion >= 6) {\n        if (this$1.eat(tokTypes.eq)) {\n          var assign = this$1.startNodeAt(start)\n          assign.operator = \"=\"\n          assign.left = prop.key\n          assign.right = this$1.parseMaybeAssign()\n          prop.value = this$1.finishNode(assign, \"AssignmentExpression\")\n        } else {\n          prop.value = prop.key\n        }\n      } else {\n        prop.value = this$1.dummyIdent()\n      }\n      prop.shorthand = true\n    }\n    node.properties.push(this$1.finishNode(prop, \"Property\"))\n    this$1.eat(tokTypes.comma)\n  }\n  this.popCx()\n  if (!this.eat(tokTypes.braceR)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start\n    if (this.options.locations) this.last.loc.end = this.tok.loc.start\n  }\n  return this.finishNode(node, \"ObjectExpression\")\n}\n\nlp$2.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(tokTypes.bracketL)) {\n      prop.computed = true\n      prop.key = this.parseExpression()\n      this.expect(tokTypes.bracketR)\n      return\n    } else {\n      prop.computed = false\n    }\n  }\n  var key = (this.tok.type === tokTypes.num || this.tok.type === tokTypes.string) ? this.parseExprAtom() : this.parseIdent()\n  prop.key = key || this.dummyIdent()\n}\n\nlp$2.parsePropertyAccessor = function() {\n  if (this.tok.type === tokTypes.name || this.tok.type.keyword) return this.parseIdent()\n}\n\nlp$2.parseIdent = function() {\n  var name = this.tok.type === tokTypes.name ? this.tok.value : this.tok.type.keyword\n  if (!name) return this.dummyIdent()\n  var node = this.startNode()\n  this.next()\n  node.name = name\n  return this.finishNode(node, \"Identifier\")\n}\n\nlp$2.initFunction = function(node) {\n  node.id = null\n  node.params = []\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false\n    node.expression = false\n  }\n}\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\nlp$2.toAssignable = function(node, binding) {\n  var this$1 = this;\n\n  if (!node || node.type == \"Identifier\" || (node.type == \"MemberExpression\" && !binding)) {\n    // Okay\n  } else if (node.type == \"ParenthesizedExpression\") {\n    node.expression = this.toAssignable(node.expression, binding)\n  } else if (this.options.ecmaVersion < 6) {\n    return this.dummyIdent()\n  } else if (node.type == \"ObjectExpression\") {\n    node.type = \"ObjectPattern\"\n    var props = node.properties\n    for (var i = 0; i < props.length; i++)\n      props[i].value = this$1.toAssignable(props[i].value, binding)\n  } else if (node.type == \"ArrayExpression\") {\n    node.type = \"ArrayPattern\"\n    this.toAssignableList(node.elements, binding)\n  } else if (node.type == \"SpreadElement\") {\n    node.type = \"RestElement\"\n    node.argument = this.toAssignable(node.argument, binding)\n  } else if (node.type == \"AssignmentExpression\") {\n    node.type = \"AssignmentPattern\"\n    delete node.operator\n  } else {\n    return this.dummyIdent()\n  }\n  return node\n}\n\nlp$2.toAssignableList = function(exprList, binding) {\n  var this$1 = this;\n\n  for (var i = 0; i < exprList.length; i++)\n    exprList[i] = this$1.toAssignable(exprList[i], binding)\n  return exprList\n}\n\nlp$2.parseFunctionParams = function(params) {\n  params = this.parseExprList(tokTypes.parenR)\n  return this.toAssignableList(params, true)\n}\n\nlp$2.parseMethod = function(isGenerator) {\n  var node = this.startNode()\n  this.initFunction(node)\n  node.params = this.parseFunctionParams()\n  node.generator = isGenerator || false\n  node.expression = this.options.ecmaVersion >= 6 && this.tok.type !== tokTypes.braceL\n  node.body = node.expression ? this.parseMaybeAssign() : this.parseBlock()\n  return this.finishNode(node, \"FunctionExpression\")\n}\n\nlp$2.parseArrowExpression = function(node, params) {\n  this.initFunction(node)\n  node.params = this.toAssignableList(params, true)\n  node.expression = this.tok.type !== tokTypes.braceL\n  node.body = node.expression ? this.parseMaybeAssign() : this.parseBlock()\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n}\n\nlp$2.parseExprList = function(close, allowEmpty) {\n  var this$1 = this;\n\n  this.pushCx()\n  var indent = this.curIndent, line = this.curLineStart, elts = []\n  this.next() // Opening bracket\n  while (!this.closes(close, indent + 1, line)) {\n    if (this$1.eat(tokTypes.comma)) {\n      elts.push(allowEmpty ? null : this$1.dummyIdent())\n      continue\n    }\n    var elt = this$1.parseMaybeAssign()\n    if (isDummy(elt)) {\n      if (this$1.closes(close, indent, line)) break\n      this$1.next()\n    } else {\n      elts.push(elt)\n    }\n    this$1.eat(tokTypes.comma)\n  }\n  this.popCx()\n  if (!this.eat(close)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start\n    if (this.options.locations) this.last.loc.end = this.tok.loc.start\n  }\n  return elts\n}\n\nacorn.defaultOptions.tabSize = 4\n\nfunction parse_dammit(input, options) {\n  var p = new LooseParser(input, options)\n  p.next()\n  return p.parseTopLevel()\n}\n\nacorn.parse_dammit = parse_dammit\nacorn.LooseParser = LooseParser\nacorn.pluginsLoose = pluginsLoose\n\nexport { parse_dammit, LooseParser, pluginsLoose };"]}