{"version":3,"sources":["../../../../node_modules/acorn/src/tokencontext.js"],"names":["TokContext","token","isExpr","preserveSpace","override","generator","types","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","p","readTmplToken","f_expr","f_expr_gen","f_gen","pp","prototype","initialContext","braceIsBlock","prevType","colon","parent","curContext","_return","test","input","slice","lastTokEnd","start","_else","semi","eof","parenR","arrow","braceL","exprAllowed","inGeneratorContext","i","context","length","updateContext","update","type","keyword","dot","call","beforeExpr","braceR","out","pop","cur","push","dollarBraceL","parenL","statementParens","_if","_for","_with","_while","incDec","_function","backQuote","star","name","allowed","options","ecmaVersion","value"],"mappings":"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","file":"tokencontext.js","sourcesContent":["// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport {Parser} from \"./state\"\nimport {types as tt} from \"./tokentype\"\nimport {lineBreak} from \"./whitespace\"\n\nexport class TokContext {\n  constructor(token, isExpr, preserveSpace, override, generator) {\n    this.token = token\n    this.isExpr = !!isExpr\n    this.preserveSpace = !!preserveSpace\n    this.override = override\n    this.generator = !!generator\n  }\n}\n\nexport const types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", true),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n}\n\nconst pp = Parser.prototype\n\npp.initialContext = function() {\n  return [types.b_stat]\n}\n\npp.braceIsBlock = function(prevType) {\n  if (prevType === tt.colon) {\n    let parent = this.curContext()\n    if (parent === types.b_stat || parent === types.b_expr)\n      return !parent.isExpr\n  }\n  if (prevType === tt._return)\n    return lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  if (prevType === tt._else || prevType === tt.semi || prevType === tt.eof || prevType === tt.parenR || prevType == tt.arrow)\n    return true\n  if (prevType == tt.braceL)\n    return this.curContext() === types.b_stat\n  return !this.exprAllowed\n}\n\npp.inGeneratorContext = function() {\n  for (let i = this.context.length - 1; i >= 0; i--)\n    if (this.context[i].generator) return true\n  return false\n}\n\npp.updateContext = function(prevType) {\n  let update, type = this.type\n  if (type.keyword && prevType == tt.dot)\n    this.exprAllowed = false\n  else if (update = type.updateContext)\n    update.call(this, prevType)\n  else\n    this.exprAllowed = type.beforeExpr\n}\n\n// Token-specific context update code\n\ntt.parenR.updateContext = tt.braceR.updateContext = function() {\n  if (this.context.length == 1) {\n    this.exprAllowed = true\n    return\n  }\n  let out = this.context.pop(), cur\n  if (out === types.b_stat && (cur = this.curContext()) && cur.token === \"function\") {\n    this.context.pop()\n    this.exprAllowed = false\n  } else if (out === types.b_tmpl) {\n    this.exprAllowed = true\n  } else {\n    this.exprAllowed = !out.isExpr\n  }\n}\n\ntt.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr)\n  this.exprAllowed = true\n}\n\ntt.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl)\n  this.exprAllowed = true\n}\n\ntt.parenL.updateContext = function(prevType) {\n  let statementParens = prevType === tt._if || prevType === tt._for || prevType === tt._with || prevType === tt._while\n  this.context.push(statementParens ? types.p_stat : types.p_expr)\n  this.exprAllowed = true\n}\n\ntt.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n}\n\ntt._function.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== tt.semi && prevType !== tt._else &&\n      !((prevType === tt.colon || prevType === tt.braceL) && this.curContext() === types.b_stat))\n    this.context.push(types.f_expr)\n  this.exprAllowed = false\n}\n\ntt.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    this.context.pop()\n  else\n    this.context.push(types.q_tmpl)\n  this.exprAllowed = false\n}\n\ntt.star.updateContext = function(prevType) {\n  if (prevType == tt._function) {\n    if (this.curContext() === types.f_expr)\n      this.context[this.context.length - 1] = types.f_expr_gen\n    else\n      this.context.push(types.f_gen)\n  }\n  this.exprAllowed = true\n}\n\ntt.name.updateContext = function(prevType) {\n  let allowed = false\n  if (this.options.ecmaVersion >= 6) {\n    if (this.value == \"of\" && !this.exprAllowed ||\n        this.value == \"yield\" && this.inGeneratorContext())\n      allowed = true\n  }\n  this.exprAllowed = allowed\n}\n"]}