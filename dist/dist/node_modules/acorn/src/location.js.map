{"version":3,"sources":["../../../../node_modules/acorn/src/location.js"],"names":["pp","prototype","raise","pos","message","loc","input","line","column","err","SyntaxError","raisedAt","raiseRecoverable","curPosition","options","locations","curLine","lineStart"],"mappings":";;AAAA;;AACA;;AAEA,IAAMA,KAAK,cAAOC,SAAlB;;AAEA;AACA;AACA;AACA;AACA;;AAEAD,GAAGE,KAAH,GAAW,UAASC,GAAT,EAAcC,OAAd,EAAuB;AAChC,MAAIC,MAAM,0BAAY,KAAKC,KAAjB,EAAwBH,GAAxB,CAAV;AACAC,aAAW,OAAOC,IAAIE,IAAX,GAAkB,GAAlB,GAAwBF,IAAIG,MAA5B,GAAqC,GAAhD;AACA,MAAIC,MAAM,IAAIC,WAAJ,CAAgBN,OAAhB,CAAV;AACAK,MAAIN,GAAJ,GAAUA,GAAV,CAAeM,IAAIJ,GAAJ,GAAUA,GAAV,CAAeI,IAAIE,QAAJ,GAAe,KAAKR,GAApB;AAC9B,QAAMM,GAAN;AACD,CAND;;AAQAT,GAAGY,gBAAH,GAAsBZ,GAAGE,KAAzB;;AAEAF,GAAGa,WAAH,GAAiB,YAAW;AAC1B,MAAI,KAAKC,OAAL,CAAaC,SAAjB,EAA4B;AAC1B,WAAO,sBAAa,KAAKC,OAAlB,EAA2B,KAAKb,GAAL,GAAW,KAAKc,SAA3C,CAAP;AACD;AACF,CAJD","file":"location.js","sourcesContent":["import {Parser} from \"./state\"\nimport {Position, getLineInfo} from \"./locutil\"\n\nconst pp = Parser.prototype\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp.raise = function(pos, message) {\n  let loc = getLineInfo(this.input, pos)\n  message += \" (\" + loc.line + \":\" + loc.column + \")\"\n  let err = new SyntaxError(message)\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos\n  throw err\n}\n\npp.raiseRecoverable = pp.raise\n\npp.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n}\n"]}