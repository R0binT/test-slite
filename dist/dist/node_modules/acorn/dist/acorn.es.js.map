{"version":3,"sources":["../../../../node_modules/acorn/dist/acorn.es.js"],"names":["reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","i","length","isIdentifierStart","astral","test","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywordTypes","kw","options","tt","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","ellipsis","backQuote","dollarBraceL","eq","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","nonASCIIwhitespace","skipWhiteSpace","ref","Object","prototype","hasOwnProperty","toString","has","obj","propName","call","isArray","Array","Position","line","col","column","offset","n","SourceLocation","p","start","end","sourceFile","getLineInfo","input","cur","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","plugins","getOptions","opts","opt","tokens","token","push","pushComment","array","block","text","startLoc","endLoc","comment","type","value","loc","range","keywordRegexp","words","replace","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","loadPlugins","lineStart","lastIndexOf","curLine","slice","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","inFunction","inGenerator","inAsync","yieldPos","awaitPos","labels","skipLineComment","scopeStack","enterFunctionScope","isKeyword","word","isReservedWord","extend","f","pluginConfigs","this$1","plugin","Error","parse","node","startNode","nextToken","parseTopLevel","pp","literal","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","exports","body","stmt","parseStatement","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","declaration","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseImport","parseExport","maybeName","parseExpression","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","pop","parseParenExpression","enterLexicalScope","parseFor","init$1","parseVar","declarations","init","parseForIn","toAssignable","checkLVal","isAsync","parseFunction","isFunction","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitLexicalScope","empty","handler","clause","param","parseBindingAtom","finalizer","object","i$1","statementStart","generator","createNewLexicalScope","update","left","right","isFor","decl","parseVarId","parseMaybeAssign","id","isStatement","allowExpressionBody","initFunction","async","oldInGen","oldInAsync","oldYieldPos","oldAwaitPos","oldInFunc","parseFunctionParams","parseFunctionBody","params","parseBindingList","parseClassId","parseClassSuper","classBody","hadConstructor","method","isGenerator","isMaybeStatic","parsePropertyName","static","computed","key","isGetSet","parseClassMethod","paramCount","parseMethod","superClass","parseExprSubscripts","parseExprAtom","checkExport","fNode","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","local","checkPatternExport","pat","properties","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","pp$2","isBinding","prop","toAssignableList","operator","exprList","last","arg","parseSpread","parseRest","allowNonIdent","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","startNodeAt","bindingType","checkClashes","canDeclareVarName","canDeclareLexicalName","declareVarName","declareLexicalName","pp$3","checkPropClash","propHash","shorthand","proto","other","redefinition","get","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","result","parseSubscripts","base","noCalls","maybeAsyncArrow","property","parseExprList","parseArrowExpression","callee","arguments","tag","quasi","parseTemplate","canBeArrow","parseLiteral","regex","pattern","flags","raw","parseParenAndDistinguishExpression","parseNew","val","innerStartPos","innerStartLoc","lastIsComma","spreadStart","innerParenStart","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","parseTemplateElement","cooked","tail","curElt","quasis","isPattern","parsePropertyValue","isArrowFunction","isExpression","oldStrict","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","exitFunctionScope","allowDuplicates","nameHash","liberal","indexOf","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","target","sources","len","var","lexical","childVar","parentLexical","parentScope","childScope","currentScope","Node","parser","pp$6","TokContext","isExpr","preserveSpace","override","types","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","readTmplToken","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","Token","pp$8","isRhino","Packages","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","ch","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","codePointToString","str","tryCreateRegexp","src","throwErrorAt","e","undefined","regexpUnicodeSupport","escaped","inClass","content","mods","readWord1","tmp","tmpFlags","validFlags","_match","Number","readInt","radix","total","Infinity","startsWithDot","isFloat","octal","parseFloat","parseInt","readCodePoint","codePos","readHexChar","quote","chunkStart","readEscapedChar","inTemplate","octalStr","substr","escStart","esc","version","parseExpressionAt","tokenizer","addLooseExports","parse_dammit","LooseParser","pluginsLoose","tokTypes","tokContexts"],"mappings":"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","file":"acorn.es.js","sourcesContent":["// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n}\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n}\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fd5\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ae\\ua7b0-\\ua7b7\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\"\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d4-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d01-\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf8\\u1cf9\\u1dc0-\\u1df5\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\"\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\")\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\")\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,17,26,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,26,45,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,785,52,76,44,33,24,27,35,42,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,25,391,63,32,0,449,56,264,8,2,36,18,0,50,29,881,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,881,68,12,0,67,12,65,0,32,6124,20,754,9486,1,3071,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,10591,541]\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,1306,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,52,0,13,2,49,13,10,2,4,9,83,11,7,0,161,11,6,9,7,3,57,0,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,87,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,423,9,838,7,2,7,17,9,57,21,2,13,19882,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239]\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i]\n    if (pos > code) return false\n    pos += set[i + 1]\n    if (pos >= code) return true\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) return code === 36\n  if (code < 91) return true\n  if (code < 97) return code === 95\n  if (code < 123) return true\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n  if (astral === false) return false\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) return code === 36\n  if (code < 58) return true\n  if (code < 65) return false\n  if (code < 91) return true\n  if (code < 97) return code === 95\n  if (code < 123) return true\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code))\n  if (astral === false) return false\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label\n  this.keyword = conf.keyword\n  this.beforeExpr = !!conf.beforeExpr\n  this.startsExpr = !!conf.startsExpr\n  this.isLoop = !!conf.isLoop\n  this.isAssign = !!conf.isAssign\n  this.prefix = !!conf.prefix\n  this.postfix = !!conf.postfix\n  this.binop = conf.binop || null\n  this.updateContext = null\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n// Map keyword names to token types.\n\nvar keywordTypes = {}\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name\n  return keywordTypes[name] = new TokenType(name, options)\n}\n\nvar tt = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"prefix\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=\", 6),\n  relational: binop(\"</>\", 7),\n  bitShift: binop(\"<</>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\"),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n}\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/\nvar lineBreakG = new RegExp(lineBreak.source, \"g\")\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); })\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line\n  this.column = col\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start\n  this.end = end\n  if (p.sourceFile !== null) this.source = p.sourceFile\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur\n    var match = lineBreakG.exec(input)\n    if (match && match.index < offset) {\n      ++line\n      cur = match.index + match[0].length\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n}\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {}\n\n  for (var opt in defaultOptions)\n    options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]\n\n  if (options.ecmaVersion >= 2015)\n    options.ecmaVersion -= 2009\n\n  if (options.allowReserved == null)\n    options.allowReserved = options.ecmaVersion < 5\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken\n    options.onToken = function (token) { return tokens.push(token); }\n  }\n  if (isArray(options.onComment))\n    options.onComment = pushComment(options, options.onComment)\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    }\n    if (options.locations)\n      comment.loc = new SourceLocation(this, startLoc, endLoc)\n    if (options.ranges)\n      comment.range = [start, end]\n    array.push(comment)\n  }\n}\n\n// Registered plugins\nvar plugins = {}\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options)\n  this.sourceFile = options.sourceFile\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5])\n  var reserved = \"\"\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      if (reserved = reservedWords[v]) break\n    if (options.sourceType == \"module\") reserved += \" await\"\n  }\n  this.reservedWords = keywordRegexp(reserved)\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict\n  this.reservedWordsStrict = keywordRegexp(reservedStrict)\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind)\n  this.input = String(input)\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false\n\n  // Load plugins\n  this.loadPlugins(options.plugins)\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length\n  } else {\n    this.pos = this.lineStart = 0\n    this.curLine = 1\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = tt.eof\n  // For tokens that include more information than their type, the value\n  this.value = null\n  // Its start and end offset\n  this.start = this.end = this.pos\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition()\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null\n  this.lastTokStart = this.lastTokEnd = this.pos\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext()\n  this.exprAllowed = true\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\"\n  this.strict = this.inModule || this.strictDirective(this.pos)\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0\n  // Labels in scope.\n  this.labels = []\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    this.skipLineComment(2)\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = []\n  this.enterFunctionScope()\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name])\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name]\n    if (!plugin) throw new Error(\"Plugin '\" + name + \"' not found\")\n    plugin(this$1, pluginConfigs[name])\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode()\n  this.nextToken()\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:[^']|\\.)*)'|\"((?:[^\"]|\\.)*)\"|;)/\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start\n    start += skipWhiteSpace.exec(this$1.input)[0].length\n    var match = literal.exec(this$1.input.slice(start))\n    if (!match) return false\n    if ((match[1] || match[2]) == \"use strict\") return true\n    start += match[0].length\n  }\n}\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next()\n    return true\n  } else {\n    return false\n  }\n}\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === tt.name && this.value === name\n}\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  return this.value === name && this.eat(tt.name)\n}\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) this.unexpected()\n}\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === tt.eof ||\n    this.type === tt.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n}\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc)\n    return true\n  }\n}\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(tt.semi) && !this.insertSemicolon()) this.unexpected()\n}\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type == tokType) {\n    if (this.options.onTrailingComma)\n      this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc)\n    if (!notNext)\n      this.next()\n    return true\n  }\n}\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected()\n}\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\")\n}\n\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = -1\n};\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) return\n  if (refDestructuringErrors.trailingComma > -1)\n    this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\")\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind\n  if (parens > -1) this.raiseRecoverable(parens, \"Parenthesized pattern\")\n}\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  var pos = refDestructuringErrors ? refDestructuringErrors.shorthandAssign : -1\n  if (!andThrow) return pos >= 0\n  if (pos > -1) this.raise(pos, \"Shorthand property assignments are valid only in destructuring patterns\")\n}\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    this.raise(this.yieldPos, \"Yield expression cannot be a default value\")\n  if (this.awaitPos)\n    this.raise(this.awaitPos, \"Await expression cannot be a default value\")\n}\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    return this.isSimpleAssignTarget(expr.expression)\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n}\n\nvar pp$1 = Parser.prototype\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {}\n  if (!node.body) node.body = []\n  while (this.type !== tt.eof) {\n    var stmt = this$1.parseStatement(true, true, exports)\n    node.body.push(stmt)\n  }\n  this.next()\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType\n  }\n  return this.finishNode(node, \"Program\")\n}\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\npp$1.isLet = function() {\n  if (this.type !== tt.name || this.options.ecmaVersion < 6 || this.value != \"let\") return false\n  skipWhiteSpace.lastIndex = this.pos\n  var skip = skipWhiteSpace.exec(this.input)\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next)\n  if (nextCh === 91 || nextCh == 123) return true // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) ++pos\n    var ident = this.input.slice(next, pos)\n    if (!this.isKeyword(ident)) return true\n  }\n  return false\n}\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.type !== tt.name || this.options.ecmaVersion < 8 || this.value != \"async\")\n    return false\n\n  skipWhiteSpace.lastIndex = this.pos\n  var skip = skipWhiteSpace.exec(this.input)\n  var next = this.pos + skip[0].length\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 == this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n}\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind\n\n  if (this.isLet()) {\n    starttype = tt._var\n    kind = \"let\"\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case tt._break: case tt._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case tt._debugger: return this.parseDebuggerStatement(node)\n  case tt._do: return this.parseDoStatement(node)\n  case tt._for: return this.parseForStatement(node)\n  case tt._function:\n    if (!declaration && this.options.ecmaVersion >= 6) this.unexpected()\n    return this.parseFunctionStatement(node, false)\n  case tt._class:\n    if (!declaration) this.unexpected()\n    return this.parseClass(node, true)\n  case tt._if: return this.parseIfStatement(node)\n  case tt._return: return this.parseReturnStatement(node)\n  case tt._switch: return this.parseSwitchStatement(node)\n  case tt._throw: return this.parseThrowStatement(node)\n  case tt._try: return this.parseTryStatement(node)\n  case tt._const: case tt._var:\n    kind = kind || this.value\n    if (!declaration && kind != \"var\") this.unexpected()\n    return this.parseVarStatement(node, kind)\n  case tt._while: return this.parseWhileStatement(node)\n  case tt._with: return this.parseWithStatement(node)\n  case tt.braceL: return this.parseBlock()\n  case tt.semi: return this.parseEmptyStatement(node)\n  case tt._export:\n  case tt._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        this.raise(this.start, \"'import' and 'export' may only appear at the top level\")\n      if (!this.inModule)\n        this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\")\n    }\n    return starttype === tt._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction() && declaration) {\n      this.next()\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression()\n    if (starttype === tt.name && expr.type === \"Identifier\" && this.eat(tt.colon))\n      return this.parseLabeledStatement(node, maybeName, expr)\n    else return this.parseExpressionStatement(node, expr)\n  }\n}\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword == \"break\"\n  this.next()\n  if (this.eat(tt.semi) || this.insertSemicolon()) node.label = null\n  else if (this.type !== tt.name) this.unexpected()\n  else {\n    node.label = this.parseIdent()\n    this.semicolon()\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i]\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break\n      if (node.label && isBreak) break\n    }\n  }\n  if (i === this.labels.length) this.raise(node.start, \"Unsyntactic \" + keyword)\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n}\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next()\n  this.semicolon()\n  return this.finishNode(node, \"DebuggerStatement\")\n}\n\npp$1.parseDoStatement = function(node) {\n  this.next()\n  this.labels.push(loopLabel)\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  this.expect(tt._while)\n  node.test = this.parseParenExpression()\n  if (this.options.ecmaVersion >= 6)\n    this.eat(tt.semi)\n  else\n    this.semicolon()\n  return this.finishNode(node, \"DoWhileStatement\")\n}\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next()\n  this.labels.push(loopLabel)\n  this.enterLexicalScope()\n  this.expect(tt.parenL)\n  if (this.type === tt.semi) return this.parseFor(node, null)\n  var isLet = this.isLet()\n  if (this.type === tt._var || this.type === tt._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value\n    this.next()\n    this.parseVar(init$1, true, kind)\n    this.finishNode(init$1, \"VariableDeclaration\")\n    if ((this.type === tt._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init))\n      return this.parseForIn(node, init$1)\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors\n  var init = this.parseExpression(true, refDestructuringErrors)\n  if (this.type === tt._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    this.toAssignable(init)\n    this.checkLVal(init)\n    this.checkPatternErrors(refDestructuringErrors, true)\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true)\n  }\n  return this.parseFor(node, init)\n}\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next()\n  return this.parseFunction(node, true, false, isAsync)\n}\n\npp$1.isFunction = function() {\n  return this.type === tt._function || this.isAsyncFunction()\n}\n\npp$1.parseIfStatement = function(node) {\n  this.next()\n  node.test = this.parseParenExpression()\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.isFunction())\n  node.alternate = this.eat(tt._else) ? this.parseStatement(!this.strict && this.isFunction()) : null\n  return this.finishNode(node, \"IfStatement\")\n}\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    this.raise(this.start, \"'return' outside of function\")\n  this.next()\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(tt.semi) || this.insertSemicolon()) node.argument = null\n  else { node.argument = this.parseExpression(); this.semicolon() }\n  return this.finishNode(node, \"ReturnStatement\")\n}\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next()\n  node.discriminant = this.parseParenExpression()\n  node.cases = []\n  this.expect(tt.braceL)\n  this.labels.push(switchLabel)\n  this.enterLexicalScope()\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur\n  for (var sawDefault = false; this.type != tt.braceR;) {\n    if (this$1.type === tt._case || this$1.type === tt._default) {\n      var isCase = this$1.type === tt._case\n      if (cur) this$1.finishNode(cur, \"SwitchCase\")\n      node.cases.push(cur = this$1.startNode())\n      cur.consequent = []\n      this$1.next()\n      if (isCase) {\n        cur.test = this$1.parseExpression()\n      } else {\n        if (sawDefault) this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\")\n        sawDefault = true\n        cur.test = null\n      }\n      this$1.expect(tt.colon)\n    } else {\n      if (!cur) this$1.unexpected()\n      cur.consequent.push(this$1.parseStatement(true))\n    }\n  }\n  this.exitLexicalScope()\n  if (cur) this.finishNode(cur, \"SwitchCase\")\n  this.next() // Closing brace\n  this.labels.pop()\n  return this.finishNode(node, \"SwitchStatement\")\n}\n\npp$1.parseThrowStatement = function(node) {\n  this.next()\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    this.raise(this.lastTokEnd, \"Illegal newline after throw\")\n  node.argument = this.parseExpression()\n  this.semicolon()\n  return this.finishNode(node, \"ThrowStatement\")\n}\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = []\n\npp$1.parseTryStatement = function(node) {\n  this.next()\n  node.block = this.parseBlock()\n  node.handler = null\n  if (this.type === tt._catch) {\n    var clause = this.startNode()\n    this.next()\n    this.expect(tt.parenL)\n    clause.param = this.parseBindingAtom()\n    this.enterLexicalScope()\n    this.checkLVal(clause.param, \"let\")\n    this.expect(tt.parenR)\n    clause.body = this.parseBlock(false)\n    this.exitLexicalScope()\n    node.handler = this.finishNode(clause, \"CatchClause\")\n  }\n  node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null\n  if (!node.handler && !node.finalizer)\n    this.raise(node.start, \"Missing catch or finally clause\")\n  return this.finishNode(node, \"TryStatement\")\n}\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next()\n  this.parseVar(node, false, kind)\n  this.semicolon()\n  return this.finishNode(node, \"VariableDeclaration\")\n}\n\npp$1.parseWhileStatement = function(node) {\n  this.next()\n  node.test = this.parseParenExpression()\n  this.labels.push(loopLabel)\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  return this.finishNode(node, \"WhileStatement\")\n}\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) this.raise(this.start, \"'with' in strict mode\")\n  this.next()\n  node.object = this.parseParenExpression()\n  node.body = this.parseStatement(false)\n  return this.finishNode(node, \"WithStatement\")\n}\n\npp$1.parseEmptyStatement = function(node) {\n  this.next()\n  return this.finishNode(node, \"EmptyStatement\")\n}\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i = 0; i < this.labels.length; ++i)\n    if (this$1.labels[i].name === maybeName) this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\")\n  var kind = this.type.isLoop ? \"loop\" : this.type === tt._switch ? \"switch\" : null\n  for (var i$1 = this.labels.length - 1; i$1 >= 0; i$1--) {\n    var label = this$1.labels[i$1]\n    if (label.statementStart == node.start) {\n      label.statementStart = this$1.start\n      label.kind = kind\n    } else break\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start})\n  node.body = this.parseStatement(true)\n  if (node.body.type == \"ClassDeclaration\" ||\n      node.body.type == \"VariableDeclaration\" && node.body.kind != \"var\" ||\n      node.body.type == \"FunctionDeclaration\" && (this.strict || node.body.generator))\n    this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\")\n  this.labels.pop()\n  node.label = expr\n  return this.finishNode(node, \"LabeledStatement\")\n}\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr\n  this.semicolon()\n  return this.finishNode(node, \"ExpressionStatement\")\n}\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode()\n  node.body = []\n  this.expect(tt.braceL)\n  if (createNewLexicalScope) {\n    this.enterLexicalScope()\n  }\n  while (!this.eat(tt.braceR)) {\n    var stmt = this$1.parseStatement(true)\n    node.body.push(stmt)\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope()\n  }\n  return this.finishNode(node, \"BlockStatement\")\n}\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init\n  this.expect(tt.semi)\n  node.test = this.type === tt.semi ? null : this.parseExpression()\n  this.expect(tt.semi)\n  node.update = this.type === tt.parenR ? null : this.parseExpression()\n  this.expect(tt.parenR)\n  this.exitLexicalScope()\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  return this.finishNode(node, \"ForStatement\")\n}\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === tt._in ? \"ForInStatement\" : \"ForOfStatement\"\n  this.next()\n  node.left = init\n  node.right = this.parseExpression()\n  this.expect(tt.parenR)\n  this.exitLexicalScope()\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  return this.finishNode(node, type)\n}\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = []\n  node.kind = kind\n  for (;;) {\n    var decl = this$1.startNode()\n    this$1.parseVarId(decl, kind)\n    if (this$1.eat(tt.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor)\n    } else if (kind === \"const\" && !(this$1.type === tt._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected()\n    } else if (decl.id.type != \"Identifier\" && !(isFor && (this$1.type === tt._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\")\n    } else {\n      decl.init = null\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"))\n    if (!this$1.eat(tt.comma)) break\n  }\n  return node\n}\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind)\n  this.checkLVal(decl.id, kind, false)\n}\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 6 && !isAsync)\n    node.generator = this.eat(tt.star)\n  if (this.options.ecmaVersion >= 8)\n    node.async = !!isAsync\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type != tt.name ? null : this.parseIdent()\n    if (node.id) {\n      this.checkLVal(node.id, \"var\")\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction\n  this.inGenerator = node.generator\n  this.inAsync = node.async\n  this.yieldPos = 0\n  this.awaitPos = 0\n  this.inFunction = true\n  this.enterFunctionScope()\n\n  if (!isStatement)\n    node.id = this.type == tt.name ? this.parseIdent() : null\n\n  this.parseFunctionParams(node)\n  this.parseFunctionBody(node, allowExpressionBody)\n\n  this.inGenerator = oldInGen\n  this.inAsync = oldInAsync\n  this.yieldPos = oldYieldPos\n  this.awaitPos = oldAwaitPos\n  this.inFunction = oldInFunc\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n}\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(tt.parenL)\n  node.params = this.parseBindingList(tt.parenR, false, this.options.ecmaVersion >= 8, true)\n  this.checkYieldAwaitInDefaultParams()\n}\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next()\n\n  this.parseClassId(node, isStatement)\n  this.parseClassSuper(node)\n  var classBody = this.startNode()\n  var hadConstructor = false\n  classBody.body = []\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    if (this$1.eat(tt.semi)) continue\n    var method = this$1.startNode()\n    var isGenerator = this$1.eat(tt.star)\n    var isAsync = false\n    var isMaybeStatic = this$1.type === tt.name && this$1.value === \"static\"\n    this$1.parsePropertyName(method)\n    method.static = isMaybeStatic && this$1.type !== tt.parenL\n    if (method.static) {\n      if (isGenerator) this$1.unexpected()\n      isGenerator = this$1.eat(tt.star)\n      this$1.parsePropertyName(method)\n    }\n    if (this$1.options.ecmaVersion >= 8 && !isGenerator && !method.computed &&\n        method.key.type === \"Identifier\" && method.key.name === \"async\" && this$1.type !== tt.parenL &&\n        !this$1.canInsertSemicolon()) {\n      isAsync = true\n      this$1.parsePropertyName(method)\n    }\n    method.kind = \"method\"\n    var isGetSet = false\n    if (!method.computed) {\n      var key = method.key;\n      if (!isGenerator && !isAsync && key.type === \"Identifier\" && this$1.type !== tt.parenL && (key.name === \"get\" || key.name === \"set\")) {\n        isGetSet = true\n        method.kind = key.name\n        key = this$1.parsePropertyName(method)\n      }\n      if (!method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n          key.type === \"Literal\" && key.value === \"constructor\")) {\n        if (hadConstructor) this$1.raise(key.start, \"Duplicate constructor in the same class\")\n        if (isGetSet) this$1.raise(key.start, \"Constructor can't have get/set modifier\")\n        if (isGenerator) this$1.raise(key.start, \"Constructor can't be a generator\")\n        if (isAsync) this$1.raise(key.start, \"Constructor can't be an async method\")\n        method.kind = \"constructor\"\n        hadConstructor = true\n      }\n    }\n    this$1.parseClassMethod(classBody, method, isGenerator, isAsync)\n    if (isGetSet) {\n      var paramCount = method.kind === \"get\" ? 0 : 1\n      if (method.value.params.length !== paramCount) {\n        var start = method.value.start\n        if (method.kind === \"get\")\n          this$1.raiseRecoverable(start, \"getter should have no params\")\n        else\n          this$1.raiseRecoverable(start, \"setter should have exactly one param\")\n      } else {\n        if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n          this$1.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\")\n      }\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\")\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n}\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync)\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"))\n}\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === tt.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null\n}\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null\n}\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next()\n  // export * from '...'\n  if (this.eat(tt.star)) {\n    this.expectContextual(\"from\")\n    node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()\n    this.semicolon()\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(tt._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart)\n    var isAsync\n    if (this.type === tt._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode()\n      this.next()\n      if (isAsync) this.next()\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync)\n    } else if (this.type === tt._class) {\n      var cNode = this.startNode()\n      node.declaration = this.parseClass(cNode, \"nullableID\")\n    } else {\n      node.declaration = this.parseMaybeAssign()\n      this.semicolon()\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true)\n    if (node.declaration.type === \"VariableDeclaration\")\n      this.checkVariableExport(exports, node.declaration.declarations)\n    else\n      this.checkExport(exports, node.declaration.id.name, node.declaration.id.start)\n    node.specifiers = []\n    node.source = null\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null\n    node.specifiers = this.parseExportSpecifiers(exports)\n    if (this.eatContextual(\"from\")) {\n      node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()\n    } else {\n      // check for keywords used as local names\n      for (var i = 0; i < node.specifiers.length; i++) {\n        if (this$1.keywords.test(node.specifiers[i].local.name) || this$1.reservedWords.test(node.specifiers[i].local.name)) {\n          this$1.unexpected(node.specifiers[i].local.start)\n        }\n      }\n\n      node.source = null\n    }\n    this.semicolon()\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n}\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) return\n  if (has(exports, name))\n    this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\")\n  exports[name] = true\n}\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type\n  if (type == \"Identifier\")\n    this.checkExport(exports, pat.name, pat.start)\n  else if (type == \"ObjectPattern\")\n    for (var i = 0; i < pat.properties.length; ++i)\n      this$1.checkPatternExport(exports, pat.properties[i].value)\n  else if (type == \"ArrayPattern\")\n    for (var i$1 = 0; i$1 < pat.elements.length; ++i$1) {\n      var elt = pat.elements[i$1]\n      if (elt) this$1.checkPatternExport(exports, elt)\n    }\n  else if (type == \"AssignmentPattern\")\n    this.checkPatternExport(exports, pat.left)\n  else if (type == \"ParenthesizedExpression\")\n    this.checkPatternExport(exports, pat.expression)\n}\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) return\n  for (var i = 0; i < decls.length; i++)\n    this$1.checkPatternExport(exports, decls[i].id)\n}\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n}\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true\n  // export { x, y as z } [from '...']\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this$1.expect(tt.comma)\n      if (this$1.afterTrailingComma(tt.braceR)) break\n    } else first = false\n\n    var node = this$1.startNode()\n    node.local = this$1.parseIdent(true)\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local\n    this$1.checkExport(exports, node.exported.name, node.exported.start)\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"))\n  }\n  return nodes\n}\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next()\n  // import '...'\n  if (this.type === tt.string) {\n    node.specifiers = empty\n    node.source = this.parseExprAtom()\n  } else {\n    node.specifiers = this.parseImportSpecifiers()\n    this.expectContextual(\"from\")\n    node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()\n  }\n  this.semicolon()\n  return this.finishNode(node, \"ImportDeclaration\")\n}\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true\n  if (this.type === tt.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode()\n    node.local = this.parseIdent()\n    this.checkLVal(node.local, \"let\")\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"))\n    if (!this.eat(tt.comma)) return nodes\n  }\n  if (this.type === tt.star) {\n    var node$1 = this.startNode()\n    this.next()\n    this.expectContextual(\"as\")\n    node$1.local = this.parseIdent()\n    this.checkLVal(node$1.local, \"let\")\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"))\n    return nodes\n  }\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this$1.expect(tt.comma)\n      if (this$1.afterTrailingComma(tt.braceR)) break\n    } else first = false\n\n    var node$2 = this$1.startNode()\n    node$2.imported = this$1.parseIdent(true)\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent()\n    } else {\n      node$2.local = node$2.imported\n      if (this$1.isKeyword(node$2.local.name)) this$1.unexpected(node$2.local.start)\n      if (this$1.reservedWordsStrict.test(node$2.local.name)) this$1.raiseRecoverable(node$2.local.start, \"The keyword '\" + node$2.local.name + \"' is reserved\")\n    }\n    this$1.checkLVal(node$2.local, \"let\")\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"))\n  }\n  return nodes\n}\n\nvar pp$2 = Parser.prototype\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        this.raise(node.start, \"Can not use 'await' as identifier inside an async function\")\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\"\n      for (var i = 0; i < node.properties.length; i++) {\n        var prop = node.properties[i]\n        if (prop.kind !== \"init\") this$1.raise(prop.key.start, \"Object pattern can't contain getter or setter\")\n        this$1.toAssignable(prop.value, isBinding)\n      }\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\"\n      this.toAssignableList(node.elements, isBinding)\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator === \"=\") {\n        node.type = \"AssignmentPattern\"\n        delete node.operator\n        this.toAssignable(node.left, isBinding)\n        // falls through to AssignmentPattern\n      } else {\n        this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\")\n        break\n      }\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      node.expression = this.toAssignable(node.expression, isBinding)\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) break\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\")\n    }\n  }\n  return node\n}\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length\n  if (end) {\n    var last = exprList[end - 1]\n    if (last && last.type == \"RestElement\") {\n      --end\n    } else if (last && last.type == \"SpreadElement\") {\n      last.type = \"RestElement\"\n      var arg = last.argument\n      this.toAssignable(arg, isBinding)\n      if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\")\n        this.unexpected(arg.start)\n      --end\n    }\n\n    if (isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      this.unexpected(last.argument.start)\n  }\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i]\n    if (elt) this$1.toAssignable(elt, isBinding)\n  }\n  return exprList\n}\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode()\n  this.next()\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors)\n  return this.finishNode(node, \"SpreadElement\")\n}\n\npp$2.parseRest = function(allowNonIdent) {\n  var node = this.startNode()\n  this.next()\n\n  // RestElement inside of a function parameter must be an identifier\n  if (allowNonIdent) node.argument = this.type === tt.name ? this.parseIdent() : this.unexpected()\n  else node.argument = this.type === tt.name || this.type === tt.bracketL ? this.parseBindingAtom() : this.unexpected()\n\n  return this.finishNode(node, \"RestElement\")\n}\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion < 6) return this.parseIdent()\n  switch (this.type) {\n  case tt.name:\n    return this.parseIdent()\n\n  case tt.bracketL:\n    var node = this.startNode()\n    this.next()\n    node.elements = this.parseBindingList(tt.bracketR, true, true)\n    return this.finishNode(node, \"ArrayPattern\")\n\n  case tt.braceL:\n    return this.parseObj(true)\n\n  default:\n    this.unexpected()\n  }\n}\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowNonIdent) {\n  var this$1 = this;\n\n  var elts = [], first = true\n  while (!this.eat(close)) {\n    if (first) first = false\n    else this$1.expect(tt.comma)\n    if (allowEmpty && this$1.type === tt.comma) {\n      elts.push(null)\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === tt.ellipsis) {\n      var rest = this$1.parseRest(allowNonIdent)\n      this$1.parseBindingListItem(rest)\n      elts.push(rest)\n      if (this$1.type === tt.comma) this$1.raise(this$1.start, \"Comma is not permitted after the rest element\")\n      this$1.expect(close)\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc)\n      this$1.parseBindingListItem(elem)\n      elts.push(elem)\n    }\n  }\n  return elts\n}\n\npp$2.parseBindingListItem = function(param) {\n  return param\n}\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom()\n  if (this.options.ecmaVersion < 6 || !this.eat(tt.eq)) return left\n  var node = this.startNodeAt(startPos, startLoc)\n  node.left = left\n  node.right = this.parseMaybeAssign()\n  return this.finishNode(node, \"AssignmentPattern\")\n}\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\")\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        this.raiseRecoverable(expr.start, \"Argument name clash\")\n      checkClashes[expr.name] = true\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"))\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name)\n      } else {\n        this.declareLexicalName(expr.name)\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) this.raiseRecoverable(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" member expression\")\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0; i < expr.properties.length; i++)\n      this$1.checkLVal(expr.properties[i].value, bindingType, checkClashes)\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0; i$1 < expr.elements.length; i$1++) {\n      var elem = expr.elements[i$1]\n      if (elem) this$1.checkLVal(elem, bindingType, checkClashes)\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes)\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes)\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes)\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\")\n  }\n}\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash) {\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    return\n  var key = prop.key;\n  var name\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\")\n      propHash.proto = true\n    }\n    return\n  }\n  name = \"$\" + name\n  var other = propHash[name]\n  if (other) {\n    var redefinition\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set\n    } else {\n      redefinition = other.init || other[kind]\n    }\n    if (redefinition)\n      this.raiseRecoverable(key.start, \"Redefinition of property\")\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    }\n  }\n  other[kind] = true\n}\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors)\n  if (this.type === tt.comma) {\n    var node = this.startNodeAt(startPos, startLoc)\n    node.expressions = [expr]\n    while (this.eat(tt.comma)) node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors))\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n}\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) return this.parseYield()\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign\n    oldTrailingComma = refDestructuringErrors.trailingComma\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1\n  } else {\n    refDestructuringErrors = new DestructuringErrors\n    ownDestructuringErrors = true\n  }\n\n  var startPos = this.start, startLoc = this.startLoc\n  if (this.type == tt.parenL || this.type == tt.name)\n    this.potentialArrowAt = this.start\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors)\n  if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc)\n  if (this.type.isAssign) {\n    this.checkPatternErrors(refDestructuringErrors, true)\n    if (!ownDestructuringErrors) DestructuringErrors.call(refDestructuringErrors)\n    var node = this.startNodeAt(startPos, startLoc)\n    node.operator = this.value\n    node.left = this.type === tt.eq ? this.toAssignable(left) : left\n    refDestructuringErrors.shorthandAssign = -1 // reset because shorthand default was used correctly\n    this.checkLVal(left)\n    this.next()\n    node.right = this.parseMaybeAssign(noIn)\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) this.checkExpressionErrors(refDestructuringErrors, true)\n  }\n  if (oldParenAssign > -1) refDestructuringErrors.parenthesizedAssign = oldParenAssign\n  if (oldTrailingComma > -1) refDestructuringErrors.trailingComma = oldTrailingComma\n  return left\n}\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc\n  var expr = this.parseExprOps(noIn, refDestructuringErrors)\n  if (this.checkExpressionErrors(refDestructuringErrors)) return expr\n  if (this.eat(tt.question)) {\n    var node = this.startNodeAt(startPos, startLoc)\n    node.test = expr\n    node.consequent = this.parseMaybeAssign()\n    this.expect(tt.colon)\n    node.alternate = this.parseMaybeAssign(noIn)\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n}\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false)\n  if (this.checkExpressionErrors(refDestructuringErrors)) return expr\n  return expr.start == startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n}\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop\n  if (prec != null && (!noIn || this.type !== tt._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === tt.logicalOR || this.type === tt.logicalAND\n      var op = this.value\n      this.next()\n      var startPos = this.start, startLoc = this.startLoc\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn)\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical)\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n}\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc)\n  node.left = left\n  node.operator = op\n  node.right = right\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n}\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr\n  if (this.inAsync && this.isContextual(\"await\")) {\n    expr = this.parseAwait(refDestructuringErrors)\n    sawUnary = true\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === tt.incDec\n    node.operator = this.value\n    node.prefix = true\n    this.next()\n    node.argument = this.parseMaybeUnary(null, true)\n    this.checkExpressionErrors(refDestructuringErrors, true)\n    if (update) this.checkLVal(node.argument)\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\")\n    else sawUnary = true\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\")\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors)\n    if (this.checkExpressionErrors(refDestructuringErrors)) return expr\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc)\n      node$1.operator = this$1.value\n      node$1.prefix = false\n      node$1.argument = expr\n      this$1.checkLVal(expr)\n      this$1.next()\n      expr = this$1.finishNode(node$1, \"UpdateExpression\")\n    }\n  }\n\n  if (!sawUnary && this.eat(tt.starstar))\n    return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false)\n  else\n    return expr\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc\n  var expr = this.parseExprAtom(refDestructuringErrors)\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\"\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) return expr\n  var result = this.parseSubscripts(expr, startPos, startLoc)\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) refDestructuringErrors.parenthesizedAssign = -1\n    if (refDestructuringErrors.parenthesizedBind >= result.start) refDestructuringErrors.parenthesizedBind = -1\n  }\n  return result\n}\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd == base.end && !this.canInsertSemicolon()\n  for (var computed;;) {\n    if ((computed = this$1.eat(tt.bracketL)) || this$1.eat(tt.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc)\n      node.object = base\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true)\n      node.computed = !!computed\n      if (computed) this$1.expect(tt.bracketR)\n      base = this$1.finishNode(node, \"MemberExpression\")\n    } else if (!noCalls && this$1.eat(tt.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos\n      this$1.yieldPos = 0\n      this$1.awaitPos = 0\n      var exprList = this$1.parseExprList(tt.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors)\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(tt.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false)\n        this$1.checkYieldAwaitInDefaultParams()\n        this$1.yieldPos = oldYieldPos\n        this$1.awaitPos = oldAwaitPos\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true)\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos\n      var node$1 = this$1.startNodeAt(startPos, startLoc)\n      node$1.callee = base\n      node$1.arguments = exprList\n      base = this$1.finishNode(node$1, \"CallExpression\")\n    } else if (this$1.type === tt.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc)\n      node$2.tag = base\n      node$2.quasi = this$1.parseTemplate()\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\")\n    } else {\n      return base\n    }\n  }\n}\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt == this.start\n  switch (this.type) {\n  case tt._super:\n    if (!this.inFunction)\n      this.raise(this.start, \"'super' outside of function or class\")\n\n  case tt._this:\n    var type = this.type === tt._this ? \"ThisExpression\" : \"Super\"\n    node = this.startNode()\n    this.next()\n    return this.finishNode(node, type)\n\n  case tt.name:\n    var startPos = this.start, startLoc = this.startLoc\n    var id = this.parseIdent(this.type !== tt.name)\n    if (this.options.ecmaVersion >= 8 && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(tt._function))\n      return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true)\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(tt.arrow))\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false)\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === tt.name) {\n        id = this.parseIdent()\n        if (this.canInsertSemicolon() || !this.eat(tt.arrow))\n          this.unexpected()\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case tt.regexp:\n    var value = this.value\n    node = this.parseLiteral(value.value)\n    node.regex = {pattern: value.pattern, flags: value.flags}\n    return node\n\n  case tt.num: case tt.string:\n    return this.parseLiteral(this.value)\n\n  case tt._null: case tt._true: case tt._false:\n    node = this.startNode()\n    node.value = this.type === tt._null ? null : this.type === tt._true\n    node.raw = this.type.keyword\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case tt.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow)\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        refDestructuringErrors.parenthesizedAssign = start\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        refDestructuringErrors.parenthesizedBind = start\n    }\n    return expr\n\n  case tt.bracketL:\n    node = this.startNode()\n    this.next()\n    node.elements = this.parseExprList(tt.bracketR, true, true, refDestructuringErrors)\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case tt.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case tt._function:\n    node = this.startNode()\n    this.next()\n    return this.parseFunction(node, false)\n\n  case tt._class:\n    return this.parseClass(this.startNode(), false)\n\n  case tt._new:\n    return this.parseNew()\n\n  case tt.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected()\n  }\n}\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode()\n  node.value = value\n  node.raw = this.input.slice(this.start, this.end)\n  this.next()\n  return this.finishNode(node, \"Literal\")\n}\n\npp$3.parseParenExpression = function() {\n  this.expect(tt.parenL)\n  var val = this.parseExpression()\n  this.expect(tt.parenR)\n  return val\n}\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8\n  if (this.options.ecmaVersion >= 6) {\n    this.next()\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc\n    var exprList = [], first = true, lastIsComma = false\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart, innerParenStart\n    this.yieldPos = 0\n    this.awaitPos = 0\n    while (this.type !== tt.parenR) {\n      first ? first = false : this$1.expect(tt.comma)\n      if (allowTrailingComma && this$1.afterTrailingComma(tt.parenR, true)) {\n        lastIsComma = true\n        break\n      } else if (this$1.type === tt.ellipsis) {\n        spreadStart = this$1.start\n        exprList.push(this$1.parseParenItem(this$1.parseRest()))\n        if (this$1.type === tt.comma) this$1.raise(this$1.start, \"Comma is not permitted after the rest element\")\n        break\n      } else {\n        if (this$1.type === tt.parenL && !innerParenStart) {\n          innerParenStart = this$1.start\n        }\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem))\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc\n    this.expect(tt.parenR)\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(tt.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false)\n      this.checkYieldAwaitInDefaultParams()\n      if (innerParenStart) this.unexpected(innerParenStart)\n      this.yieldPos = oldYieldPos\n      this.awaitPos = oldAwaitPos\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) this.unexpected(this.lastTokStart)\n    if (spreadStart) this.unexpected(spreadStart)\n    this.checkExpressionErrors(refDestructuringErrors, true)\n    this.yieldPos = oldYieldPos || this.yieldPos\n    this.awaitPos = oldAwaitPos || this.awaitPos\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc)\n      val.expressions = exprList\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc)\n    } else {\n      val = exprList[0]\n    }\n  } else {\n    val = this.parseParenExpression()\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc)\n    par.expression = val\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n}\n\npp$3.parseParenItem = function(item) {\n  return item\n}\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n}\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = []\n\npp$3.parseNew = function() {\n  var node = this.startNode()\n  var meta = this.parseIdent(true)\n  if (this.options.ecmaVersion >= 6 && this.eat(tt.dot)) {\n    node.meta = meta\n    node.property = this.parseIdent(true)\n    if (node.property.name !== \"target\")\n      this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\")\n    if (!this.inFunction)\n      this.raiseRecoverable(node.start, \"new.target can only be used in functions\")\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true)\n  if (this.eat(tt.parenL)) node.arguments = this.parseExprList(tt.parenR, this.options.ecmaVersion >= 8, false)\n  else node.arguments = empty$1\n  return this.finishNode(node, \"NewExpression\")\n}\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function() {\n  var elem = this.startNode()\n  elem.value = {\n    raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n    cooked: this.value\n  }\n  this.next()\n  elem.tail = this.type === tt.backQuote\n  return this.finishNode(elem, \"TemplateElement\")\n}\n\npp$3.parseTemplate = function() {\n  var this$1 = this;\n\n  var node = this.startNode()\n  this.next()\n  node.expressions = []\n  var curElt = this.parseTemplateElement()\n  node.quasis = [curElt]\n  while (!curElt.tail) {\n    this$1.expect(tt.dollarBraceL)\n    node.expressions.push(this$1.parseExpression())\n    this$1.expect(tt.braceR)\n    node.quasis.push(curElt = this$1.parseTemplateElement())\n  }\n  this.next()\n  return this.finishNode(node, \"TemplateLiteral\")\n}\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {}\n  node.properties = []\n  this.next()\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this$1.expect(tt.comma)\n      if (this$1.afterTrailingComma(tt.braceR)) break\n    } else first = false\n\n    var prop = this$1.startNode(), isGenerator, isAsync, startPos, startLoc\n    if (this$1.options.ecmaVersion >= 6) {\n      prop.method = false\n      prop.shorthand = false\n      if (isPattern || refDestructuringErrors) {\n        startPos = this$1.start\n        startLoc = this$1.startLoc\n      }\n      if (!isPattern)\n        isGenerator = this$1.eat(tt.star)\n    }\n    this$1.parsePropertyName(prop)\n    if (!isPattern && this$1.options.ecmaVersion >= 8 && !isGenerator && !prop.computed &&\n        prop.key.type === \"Identifier\" && prop.key.name === \"async\" && this$1.type !== tt.parenL &&\n        this$1.type !== tt.colon && !this$1.canInsertSemicolon()) {\n      isAsync = true\n      this$1.parsePropertyName(prop, refDestructuringErrors)\n    } else {\n      isAsync = false\n    }\n    this$1.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors)\n    this$1.checkPropClash(prop, propHash)\n    node.properties.push(this$1.finishNode(prop, \"Property\"))\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n}\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors) {\n  if ((isGenerator || isAsync) && this.type === tt.colon)\n    this.unexpected()\n\n  if (this.eat(tt.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors)\n    prop.kind = \"init\"\n  } else if (this.options.ecmaVersion >= 6 && this.type === tt.parenL) {\n    if (isPattern) this.unexpected()\n    prop.kind = \"init\"\n    prop.method = true\n    prop.value = this.parseMethod(isGenerator, isAsync)\n  } else if (this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type != tt.comma && this.type != tt.braceR)) {\n    if (isGenerator || isAsync || isPattern) this.unexpected()\n    prop.kind = prop.key.name\n    this.parsePropertyName(prop)\n    prop.value = this.parseMethod(false)\n    var paramCount = prop.kind === \"get\" ? 0 : 1\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start\n      if (prop.kind === \"get\")\n        this.raiseRecoverable(start, \"getter should have no params\")\n      else\n        this.raiseRecoverable(start, \"setter should have exactly one param\")\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\")\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (this.keywords.test(prop.key.name) ||\n        (this.strict ? this.reservedWordsStrict : this.reservedWords).test(prop.key.name) ||\n        (this.inGenerator && prop.key.name == \"yield\") ||\n        (this.inAsync && prop.key.name == \"await\"))\n      this.raiseRecoverable(prop.key.start, \"'\" + prop.key.name + \"' can not be used as shorthand property\")\n    prop.kind = \"init\"\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key)\n    } else if (this.type === tt.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        refDestructuringErrors.shorthandAssign = this.start\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key)\n    } else {\n      prop.value = prop.key\n    }\n    prop.shorthand = true\n  } else this.unexpected()\n}\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(tt.bracketL)) {\n      prop.computed = true\n      prop.key = this.parseMaybeAssign()\n      this.expect(tt.bracketR)\n      return prop.key\n    } else {\n      prop.computed = false\n    }\n  }\n  return prop.key = this.type === tt.num || this.type === tt.string ? this.parseExprAtom() : this.parseIdent(true)\n}\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false\n    node.expression = false\n  }\n  if (this.options.ecmaVersion >= 8)\n    node.async = false\n}\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction\n\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 6)\n    node.generator = isGenerator\n  if (this.options.ecmaVersion >= 8)\n    node.async = !!isAsync\n\n  this.inGenerator = node.generator\n  this.inAsync = node.async\n  this.yieldPos = 0\n  this.awaitPos = 0\n  this.inFunction = true\n  this.enterFunctionScope()\n\n  this.expect(tt.parenL)\n  node.params = this.parseBindingList(tt.parenR, false, this.options.ecmaVersion >= 8)\n  this.checkYieldAwaitInDefaultParams()\n  this.parseFunctionBody(node, false)\n\n  this.inGenerator = oldInGen\n  this.inAsync = oldInAsync\n  this.yieldPos = oldYieldPos\n  this.awaitPos = oldAwaitPos\n  this.inFunction = oldInFunc\n  return this.finishNode(node, \"FunctionExpression\")\n}\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction\n\n  this.enterFunctionScope()\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 8)\n    node.async = !!isAsync\n\n  this.inGenerator = false\n  this.inAsync = node.async\n  this.yieldPos = 0\n  this.awaitPos = 0\n  this.inFunction = true\n\n  node.params = this.toAssignableList(params, true)\n  this.parseFunctionBody(node, true)\n\n  this.inGenerator = oldInGen\n  this.inAsync = oldInAsync\n  this.yieldPos = oldYieldPos\n  this.awaitPos = oldAwaitPos\n  this.inFunction = oldInFunc\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n}\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== tt.braceL\n  var oldStrict = this.strict, useStrict = false\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign()\n    node.expression = true\n    this.checkParams(node, false)\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params)\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end)\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\")\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels\n    this.labels = []\n    if (useStrict) this.strict = true\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params))\n    node.body = this.parseBlock(false)\n    node.expression = false\n    this.labels = oldLabels\n  }\n  this.exitFunctionScope()\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\")\n  }\n  this.strict = oldStrict\n}\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0; i < params.length; i++)\n    if (params[i].type !== \"Identifier\") return false\n  return true\n}\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {}\n  for (var i = 0; i < node.params.length; i++) this$1.checkLVal(node.params[i], \"var\", allowDuplicates ? null : nameHash)\n}\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(tt.comma)\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) break\n    } else first = false\n\n    var elt\n    if (allowEmpty && this$1.type === tt.comma)\n      elt = null\n    else if (this$1.type === tt.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors)\n      if (refDestructuringErrors && this$1.type === tt.comma && refDestructuringErrors.trailingComma < 0)\n        refDestructuringErrors.trailingComma = this$1.start\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors)\n    }\n    elts.push(elt)\n  }\n  return elts\n}\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal) {\n  var node = this.startNode()\n  if (liberal && this.options.allowReserved == \"never\") liberal = false\n  if (this.type === tt.name) {\n    if (!liberal && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(this.value) &&\n        (this.options.ecmaVersion >= 6 ||\n         this.input.slice(this.start, this.end).indexOf(\"\\\\\") == -1))\n      this.raiseRecoverable(this.start, \"The keyword '\" + this.value + \"' is reserved\")\n    if (this.inGenerator && this.value === \"yield\")\n      this.raiseRecoverable(this.start, \"Can not use 'yield' as identifier inside a generator\")\n    if (this.inAsync && this.value === \"await\")\n      this.raiseRecoverable(this.start, \"Can not use 'await' as identifier inside an async function\")\n    node.name = this.value\n  } else if (liberal && this.type.keyword) {\n    node.name = this.type.keyword\n  } else {\n    this.unexpected()\n  }\n  this.next()\n  return this.finishNode(node, \"Identifier\")\n}\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) this.yieldPos = this.start\n\n  var node = this.startNode()\n  this.next()\n  if (this.type == tt.semi || this.canInsertSemicolon() || (this.type != tt.star && !this.type.startsExpr)) {\n    node.delegate = false\n    node.argument = null\n  } else {\n    node.delegate = this.eat(tt.star)\n    node.argument = this.parseMaybeAssign()\n  }\n  return this.finishNode(node, \"YieldExpression\")\n}\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) this.awaitPos = this.start\n\n  var node = this.startNode()\n  this.next()\n  node.argument = this.parseMaybeUnary(null, true)\n  return this.finishNode(node, \"AwaitExpression\")\n}\n\nvar pp$4 = Parser.prototype\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos)\n  message += \" (\" + loc.line + \":\" + loc.column + \")\"\n  var err = new SyntaxError(message)\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos\n  throw err\n}\n\npp$4.raiseRecoverable = pp$4.raise\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n}\n\nvar pp$5 = Parser.prototype\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0; i < sources.length; i++) {\n    var source = sources[i]\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key]\n      }\n    }\n  }\n  return target\n}\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}})\n}\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop()\n}\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1]\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}}\n\n  this.scopeStack.push(childScope)\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical)\n}\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop()\n  var parentScope = this.scopeStack[this.scopeStack.length - 1]\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar)\n}\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1]\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n}\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1]\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n}\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true\n}\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true\n}\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\"\n  this.start = pos\n  this.end = 0\n  if (parser.options.locations)\n    this.loc = new SourceLocation(parser, loc)\n  if (parser.options.directSourceFile)\n    this.sourceFile = parser.options.directSourceFile\n  if (parser.options.ranges)\n    this.range = [pos, 0]\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n}\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n}\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type\n  node.end = pos\n  if (this.options.locations)\n    node.loc.end = loc\n  if (this.options.ranges)\n    node.range[1] = pos\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n}\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n}\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token\n  this.isExpr = !!isExpr\n  this.preserveSpace = !!preserveSpace\n  this.override = override\n  this.generator = !!generator\n};\n\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", true),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.readTmplToken(); }),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n}\n\nvar pp$7 = Parser.prototype\n\npp$7.initialContext = function() {\n  return [types.b_stat]\n}\n\npp$7.braceIsBlock = function(prevType) {\n  if (prevType === tt.colon) {\n    var parent = this.curContext()\n    if (parent === types.b_stat || parent === types.b_expr)\n      return !parent.isExpr\n  }\n  if (prevType === tt._return)\n    return lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  if (prevType === tt._else || prevType === tt.semi || prevType === tt.eof || prevType === tt.parenR || prevType == tt.arrow)\n    return true\n  if (prevType == tt.braceL)\n    return this.curContext() === types.b_stat\n  return !this.exprAllowed\n}\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 0; i--)\n    if (this$1.context[i].generator) return true\n  return false\n}\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type\n  if (type.keyword && prevType == tt.dot)\n    this.exprAllowed = false\n  else if (update = type.updateContext)\n    update.call(this, prevType)\n  else\n    this.exprAllowed = type.beforeExpr\n}\n\n// Token-specific context update code\n\ntt.parenR.updateContext = tt.braceR.updateContext = function() {\n  if (this.context.length == 1) {\n    this.exprAllowed = true\n    return\n  }\n  var out = this.context.pop(), cur\n  if (out === types.b_stat && (cur = this.curContext()) && cur.token === \"function\") {\n    this.context.pop()\n    this.exprAllowed = false\n  } else if (out === types.b_tmpl) {\n    this.exprAllowed = true\n  } else {\n    this.exprAllowed = !out.isExpr\n  }\n}\n\ntt.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr)\n  this.exprAllowed = true\n}\n\ntt.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl)\n  this.exprAllowed = true\n}\n\ntt.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === tt._if || prevType === tt._for || prevType === tt._with || prevType === tt._while\n  this.context.push(statementParens ? types.p_stat : types.p_expr)\n  this.exprAllowed = true\n}\n\ntt.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n}\n\ntt._function.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== tt.semi && prevType !== tt._else &&\n      !((prevType === tt.colon || prevType === tt.braceL) && this.curContext() === types.b_stat))\n    this.context.push(types.f_expr)\n  this.exprAllowed = false\n}\n\ntt.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    this.context.pop()\n  else\n    this.context.push(types.q_tmpl)\n  this.exprAllowed = false\n}\n\ntt.star.updateContext = function(prevType) {\n  if (prevType == tt._function) {\n    if (this.curContext() === types.f_expr)\n      this.context[this.context.length - 1] = types.f_expr_gen\n    else\n      this.context.push(types.f_gen)\n  }\n  this.exprAllowed = true\n}\n\ntt.name.updateContext = function(prevType) {\n  var allowed = false\n  if (this.options.ecmaVersion >= 6) {\n    if (this.value == \"of\" && !this.exprAllowed ||\n        this.value == \"yield\" && this.inGeneratorContext())\n      allowed = true\n  }\n  this.exprAllowed = allowed\n}\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type\n  this.value = p.value\n  this.start = p.start\n  this.end = p.end\n  if (p.options.locations)\n    this.loc = new SourceLocation(p, p.startLoc, p.endLoc)\n  if (p.options.ranges)\n    this.range = [p.start, p.end]\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype\n\n// Are we running under Rhino?\nvar isRhino = typeof Packages == \"object\" && Object.prototype.toString.call(Packages) == \"[object JavaPackage]\"\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    this.options.onToken(new Token(this))\n\n  this.lastTokEnd = this.end\n  this.lastTokStart = this.start\n  this.lastTokEndLoc = this.endLoc\n  this.lastTokStartLoc = this.startLoc\n  this.nextToken()\n}\n\npp$8.getToken = function() {\n  this.next()\n  return new Token(this)\n}\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken()\n        return {\n          done: token.type === tt.eof,\n          value: token\n        }\n      }\n    }\n  }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n}\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext()\n  if (!curContext || !curContext.preserveSpace) this.skipSpace()\n\n  this.start = this.pos\n  if (this.options.locations) this.startLoc = this.curPosition()\n  if (this.pos >= this.input.length) return this.finishToken(tt.eof)\n\n  if (curContext.override) return curContext.override(this)\n  else this.readToken(this.fullCharCodeAtPos())\n}\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    return this.readWord()\n\n  return this.getTokenFromCode(code)\n}\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos)\n  if (code <= 0xd7ff || code >= 0xe000) return code\n  var next = this.input.charCodeAt(this.pos + 1)\n  return (code << 10) + next - 0x35fdc00\n}\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition()\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2)\n  if (end === -1) this.raise(this.pos - 2, \"Unterminated comment\")\n  this.pos = end + 2\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start\n    var match\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine\n      this$1.lineStart = match.index + match[0].length\n    }\n  }\n  if (this.options.onComment)\n    this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition())\n}\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos\n  var startLoc = this.options.onComment && this.curPosition()\n  var ch = this.input.charCodeAt(this.pos += startSkip)\n  while (this.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n    ++this$1.pos\n    ch = this$1.input.charCodeAt(this$1.pos)\n  }\n  if (this.options.onComment)\n    this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition())\n}\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos)\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos\n      if (this$1.options.locations) {\n        ++this$1.curLine\n        this$1.lineStart = this$1.pos\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment()\n        break\n      case 47:\n        this$1.skipLineComment(2)\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos\n      } else {\n        break loop\n      }\n    }\n  }\n}\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos\n  if (this.options.locations) this.endLoc = this.curPosition()\n  var prevType = this.type\n  this.type = type\n  this.value = val\n\n  this.updateContext(prevType)\n}\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next >= 48 && next <= 57) return this.readNumber(true)\n  var next2 = this.input.charCodeAt(this.pos + 2)\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3\n    return this.finishToken(tt.ellipsis)\n  } else {\n    ++this.pos\n    return this.finishToken(tt.dot)\n  }\n}\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.slash, 1)\n}\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1)\n  var size = 1\n  var tokentype = code === 42 ? tt.star : tt.modulo\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && next === 42) {\n    ++size\n    tokentype = tt.starstar\n    next = this.input.charCodeAt(this.pos + 2)\n  }\n\n  if (next === 61) return this.finishOp(tt.assign, size + 1)\n  return this.finishOp(tokentype, size)\n}\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next === code) return this.finishOp(code === 124 ? tt.logicalOR : tt.logicalAND, 2)\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(code === 124 ? tt.bitwiseOR : tt.bitwiseAND, 1)\n}\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.bitwiseXOR, 1)\n}\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next === code) {\n    if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 &&\n        lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {\n      // A `-->` line comment\n      this.skipLineComment(3)\n      this.skipSpace()\n      return this.nextToken()\n    }\n    return this.finishOp(tt.incDec, 2)\n  }\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.plusMin, 1)\n}\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1)\n  var size = 1\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2\n    if (this.input.charCodeAt(this.pos + size) === 61) return this.finishOp(tt.assign, size + 1)\n    return this.finishOp(tt.bitShift, size)\n  }\n  if (next == 33 && code == 60 && this.input.charCodeAt(this.pos + 2) == 45 &&\n      this.input.charCodeAt(this.pos + 3) == 45) {\n    if (this.inModule) this.unexpected()\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4)\n    this.skipSpace()\n    return this.nextToken()\n  }\n  if (next === 61) size = 2\n  return this.finishOp(tt.relational, size)\n}\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next === 61) return this.finishOp(tt.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2)\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2\n    return this.finishToken(tt.arrow)\n  }\n  return this.finishOp(code === 61 ? tt.eq : tt.prefix, 1)\n}\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n    // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(tt.parenL)\n  case 41: ++this.pos; return this.finishToken(tt.parenR)\n  case 59: ++this.pos; return this.finishToken(tt.semi)\n  case 44: ++this.pos; return this.finishToken(tt.comma)\n  case 91: ++this.pos; return this.finishToken(tt.bracketL)\n  case 93: ++this.pos; return this.finishToken(tt.bracketR)\n  case 123: ++this.pos; return this.finishToken(tt.braceL)\n  case 125: ++this.pos; return this.finishToken(tt.braceR)\n  case 58: ++this.pos; return this.finishToken(tt.colon)\n  case 63: ++this.pos; return this.finishToken(tt.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) break\n    ++this.pos\n    return this.finishToken(tt.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1)\n    if (next === 120 || next === 88) return this.readRadixNumber(16) // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) return this.readRadixNumber(8) // '0o', '0O' - octal number\n      if (next === 98 || next === 66) return this.readRadixNumber(2) // '0b', '0B' - binary number\n    }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n    // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(tt.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\")\n}\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size)\n  this.pos += size\n  return this.finishToken(type, str)\n}\n\n// Parse a regular expression. Some context-awareness is necessary,\n// since a '/' inside a '[]' set does not end the expression.\n\nfunction tryCreateRegexp(src, flags, throwErrorAt, parser) {\n  try {\n    return new RegExp(src, flags)\n  } catch (e) {\n    if (throwErrorAt !== undefined) {\n      if (e instanceof SyntaxError) parser.raise(throwErrorAt, \"Error parsing regular expression: \" + e.message)\n      throw e\n    }\n  }\n}\n\nvar regexpUnicodeSupport = !!tryCreateRegexp(\"\\uffff\", \"u\")\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) this$1.raise(start, \"Unterminated regular expression\")\n    var ch = this$1.input.charAt(this$1.pos)\n    if (lineBreak.test(ch)) this$1.raise(start, \"Unterminated regular expression\")\n    if (!escaped) {\n      if (ch === \"[\") inClass = true\n      else if (ch === \"]\" && inClass) inClass = false\n      else if (ch === \"/\" && !inClass) break\n      escaped = ch === \"\\\\\"\n    } else escaped = false\n    ++this$1.pos\n  }\n  var content = this.input.slice(start, this.pos)\n  ++this.pos\n  // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n  // here (don't ask).\n  var mods = this.readWord1()\n  var tmp = content, tmpFlags = \"\"\n  if (mods) {\n    var validFlags = /^[gim]*$/\n    if (this.options.ecmaVersion >= 6) validFlags = /^[gimuy]*$/\n    if (!validFlags.test(mods)) this.raise(start, \"Invalid regular expression flag\")\n    if (mods.indexOf(\"u\") >= 0) {\n      if (regexpUnicodeSupport) {\n        tmpFlags = \"u\"\n      } else {\n        // Replace each astral symbol and every Unicode escape sequence that\n        // possibly represents an astral symbol or a paired surrogate with a\n        // single ASCII symbol to avoid throwing on regular expressions that\n        // are only valid in combination with the `/u` flag.\n        // Note: replacing with the ASCII symbol `x` might cause false\n        // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n        // perfectly valid pattern that is equivalent to `[a-b]`, but it would\n        // be replaced by `[x-b]` which throws an error.\n        tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function (_match, code, offset) {\n          code = Number(\"0x\" + code)\n          if (code > 0x10FFFF) this$1.raise(start + offset + 3, \"Code point out of bounds\")\n          return \"x\"\n        })\n        tmp = tmp.replace(/\\\\u([a-fA-F0-9]{4})|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \"x\")\n        tmpFlags = tmpFlags.replace(\"u\", \"\")\n      }\n    }\n  }\n  // Detect invalid regular expressions.\n  var value = null\n  // Rhino's regular expression parser is flaky and throws uncatchable exceptions,\n  // so don't do detection if we are running under Rhino\n  if (!isRhino) {\n    tryCreateRegexp(tmp, tmpFlags, start, this)\n    // Get a regular expression object for this pattern-flag pair, or `null` in\n    // case the current environment doesn't support the flags it uses.\n    value = tryCreateRegexp(content, mods)\n  }\n  return this.finishToken(tt.regexp, {pattern: content, flags: mods, value: value})\n}\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val\n    if (code >= 97) val = code - 97 + 10 // a\n    else if (code >= 65) val = code - 65 + 10 // A\n    else if (code >= 48 && code <= 57) val = code - 48 // 0-9\n    else val = Infinity\n    if (val >= radix) break\n    ++this$1.pos\n    total = total * radix + val\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) return null\n\n  return total\n}\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2 // 0x\n  var val = this.readInt(radix)\n  if (val == null) this.raise(this.start + 2, \"Expected number in radix \" + radix)\n  if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\")\n  return this.finishToken(tt.num, val)\n}\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos, isFloat = false, octal = this.input.charCodeAt(this.pos) === 48\n  if (!startsWithDot && this.readInt(10) === null) this.raise(start, \"Invalid number\")\n  if (octal && this.pos == start + 1) octal = false\n  var next = this.input.charCodeAt(this.pos)\n  if (next === 46 && !octal) { // '.'\n    ++this.pos\n    this.readInt(10)\n    isFloat = true\n    next = this.input.charCodeAt(this.pos)\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos)\n    if (next === 43 || next === 45) ++this.pos // '+-'\n    if (this.readInt(10) === null) this.raise(start, \"Invalid number\")\n    isFloat = true\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\")\n\n  var str = this.input.slice(start, this.pos), val\n  if (isFloat) val = parseFloat(str)\n  else if (!octal || str.length === 1) val = parseInt(str, 10)\n  else if (/[89]/.test(str) || this.strict) this.raise(start, \"Invalid number\")\n  else val = parseInt(str, 8)\n  return this.finishToken(tt.num, val)\n}\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code\n\n  if (ch === 123) {\n    if (this.options.ecmaVersion < 6) this.unexpected()\n    var codePos = ++this.pos\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos)\n    ++this.pos\n    if (code > 0x10FFFF) this.raise(codePos, \"Code point out of bounds\")\n  } else {\n    code = this.readHexChar(4)\n  }\n  return code\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) return String.fromCharCode(code)\n  code -= 0x10000\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) this$1.raise(this$1.start, \"Unterminated string constant\")\n    var ch = this$1.input.charCodeAt(this$1.pos)\n    if (ch === quote) break\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos)\n      out += this$1.readEscapedChar(false)\n      chunkStart = this$1.pos\n    } else {\n      if (isNewLine(ch)) this$1.raise(this$1.start, \"Unterminated string constant\")\n      ++this$1.pos\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++)\n  return this.finishToken(tt.string, out)\n}\n\n// Reads template string tokens.\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) this$1.raise(this$1.start, \"Unterminated template\")\n    var ch = this$1.input.charCodeAt(this$1.pos)\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && this$1.type === tt.template) {\n        if (ch === 36) {\n          this$1.pos += 2\n          return this$1.finishToken(tt.dollarBraceL)\n        } else {\n          ++this$1.pos\n          return this$1.finishToken(tt.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos)\n      return this$1.finishToken(tt.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos)\n      out += this$1.readEscapedChar(true)\n      chunkStart = this$1.pos\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos)\n      ++this$1.pos\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) ++this$1.pos\n      case 10:\n        out += \"\\n\"\n        break\n      default:\n        out += String.fromCharCode(ch)\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine\n        this$1.lineStart = this$1.pos\n      }\n      chunkStart = this$1.pos\n    } else {\n      ++this$1.pos\n    }\n  }\n}\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos)\n  ++this.pos\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) ++this.pos // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0]\n      var octal = parseInt(octalStr, 8)\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1)\n        octal = parseInt(octalStr, 8)\n      }\n      if (octalStr !== \"0\" && (this.strict || inTemplate)) {\n        this.raise(this.pos - 2, \"Octal literal in strict mode\")\n      }\n      this.pos += octalStr.length - 1\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n}\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos\n  var n = this.readInt(16, len)\n  if (n === null) this.raise(codePos, \"Bad character escape sequence\")\n  return n\n}\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false\n  var word = \"\", first = true, chunkStart = this.pos\n  var astral = this.options.ecmaVersion >= 6\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos()\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true\n      word += this$1.input.slice(chunkStart, this$1.pos)\n      var escStart = this$1.pos\n      if (this$1.input.charCodeAt(++this$1.pos) != 117) // \"u\"\n        this$1.raise(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\")\n      ++this$1.pos\n      var esc = this$1.readCodePoint()\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        this$1.raise(escStart, \"Invalid Unicode escape\")\n      word += codePointToString(esc)\n      chunkStart = this$1.pos\n    } else {\n      break\n    }\n    first = false\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n}\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1()\n  var type = tt.name\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word)\n    type = keywordTypes[word]\n  }\n  return this.finishToken(type, word)\n}\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/ternjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/ternjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.0.3\"\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos)\n  p.nextToken()\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\n// eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser, plugins) {\n  parse_dammit = parse // eslint-disable-line camelcase\n  LooseParser = Parser\n  pluginsLoose = plugins\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, parse_dammit, LooseParser, pluginsLoose, addLooseExports, Parser, plugins, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, tt as tokTypes, keywordTypes, TokContext, types as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };"]}