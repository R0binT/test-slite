{"version":3,"sources":["../../../../node_modules/acorn/dist/acorn_loose.es.js"],"names":["pluginsLoose","LooseParser","input","options","toks","tok","last","type","eof","start","end","locations","here","curPosition","loc","ahead","context","curIndent","curLineStart","nextLineStart","lineEnd","inAsync","loadPlugins","prototype","startNode","storeCurrentPos","startNodeAt","pos","finishNode","node","ranges","range","dummyNode","dummy","name","dummyIdent","dummyString","value","raw","eat","next","isContextual","eatContextual","canInsertSemicolon","braceR","test","slice","semicolon","semi","expect","this$1","i","lookAhead","j","pushCx","push","popCx","pop","length","charCodeAt","indentationAfter","count","ch","tabSize","closes","closeTok","indent","line","blockHeuristic","tokenStartsLine","p","extend","f","pluginConfigs","plugin","Error","lp","isSpace","shift","readToken","dot","substr","ecmaVersion","ellipsis","e","SyntaxError","msg","message","raisedAt","replace","string","re","RegExp","regexp","template","resetTo","charAt","exprAllowed","curLine","lineStart","lastIndex","match","exec","index","n","isDummy","lp$1","parseTopLevel","body","parseStatement","sourceType","starttype","kind","isLet","_var","_break","_continue","isBreak","label","parseIdent","_debugger","_do","_while","parseParenExpression","_for","parenL","parseFor","_const","init$1","parseVar","declarations","_in","parseForIn","init","parseExpression","toAssignable","_function","parseFunction","_if","consequent","alternate","_else","_return","argument","_switch","blockIndent","discriminant","cases","braceL","cur","_case","_default","isCase","colon","_throw","_try","block","parseBlock","handler","_catch","clause","param","parseExprAtom","parenR","finalizer","_finally","_with","object","_class","parseClass","_import","parseImport","_export","parseExport","isAsyncFunction","expr","expression","update","left","right","noIn","decl","id","eq","parseMaybeAssign","comma","decl$1","isStatement","superClass","_extends","method","isGenerator","isAsync","static","star","parsePropertyName","key","computed","parseMethod","oldInAsync","initFunction","generator","async","params","parseFunctionParams","source","fNode","declaration","keyword","specifiers","parseExportSpecifierList","elt","local","parseImportSpecifierList","unshift","elts","continuedLine","elt$1","imported","exported","lp$2","checkLVal","expressions","val","startsExpr","delegate","parseMaybeConditional","isAssign","node$1","operator","parseExprOps","question","parseExprOp","parseMaybeUnary","minPrec","prec","binop","rightStart","sawUnary","parseAwait","prefix","incDec","parseExprSubscripts","postfix","node$2","starstar","node$3","parseSubscripts","base","noCalls","startIndent","maybeAsyncArrow","property","parsePropertyAccessor","bracketL","bracketR","exprList","parseExprList","arrow","parseArrowExpression","callee","arguments","backQuote","tag","quasi","parseTemplate","_this","_super","regex","pattern","flags","num","_null","_true","_false","parenStart","inner","preserveParens","par","elements","parseObj","_new","parseNew","meta","parseTemplateElement","elem","cooked","tail","curElt","quasis","properties","prop","shorthand","assign","binding","props","toAssignableList","close","allowEmpty","parse_dammit"],"mappings":"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","file":"acorn_loose.es.js","sourcesContent":["import { defaultOptions, addLooseExports, SourceLocation, tokTypes, tokenizer, Node, lineBreak, isNewLine, getLineInfo, Token, lineBreakG } from './acorn';\n\n// Registered plugins\nvar pluginsLoose = {}\n\nvar LooseParser = function LooseParser(input, options) {\n  if ( options === void 0 ) options = {};\n\n  this.toks = tokenizer(input, options)\n  this.options = this.toks.options\n  this.input = this.toks.input\n  this.tok = this.last = {type: tokTypes.eof, start: 0, end: 0}\n  if (this.options.locations) {\n    var here = this.toks.curPosition()\n    this.tok.loc = new SourceLocation(this.toks, here, here)\n  }\n  this.ahead = [] // Tokens ahead\n  this.context = [] // Indentation contexted\n  this.curIndent = 0\n  this.curLineStart = 0\n  this.nextLineStart = this.lineEnd(this.curLineStart) + 1\n  this.inAsync = false\n  // Load plugins\n  this.options.pluginsLoose = options.pluginsLoose || {}\n  this.loadPlugins(this.options.pluginsLoose)\n};\n\nLooseParser.prototype.startNode = function startNode () {\n  return new Node(this.toks, this.tok.start, this.options.locations ? this.tok.loc.start : null)\n};\n\nLooseParser.prototype.storeCurrentPos = function storeCurrentPos () {\n  return this.options.locations ? [this.tok.start, this.tok.loc.start] : this.tok.start\n};\n\nLooseParser.prototype.startNodeAt = function startNodeAt (pos) {\n  if (this.options.locations) {\n    return new Node(this.toks, pos[0], pos[1])\n  } else {\n    return new Node(this.toks, pos)\n  }\n};\n\nLooseParser.prototype.finishNode = function finishNode (node, type) {\n  node.type = type\n  node.end = this.last.end\n  if (this.options.locations)\n    node.loc.end = this.last.loc.end\n  if (this.options.ranges)\n    node.range[1] = this.last.end\n  return node\n};\n\nLooseParser.prototype.dummyNode = function dummyNode (type) {\n  var dummy = this.startNode()\n  dummy.type = type\n  dummy.end = dummy.start\n  if (this.options.locations)\n    dummy.loc.end = dummy.loc.start\n  if (this.options.ranges)\n    dummy.range[1] = dummy.start\n  this.last = {type: tokTypes.name, start: dummy.start, end: dummy.start, loc: dummy.loc}\n  return dummy\n};\n\nLooseParser.prototype.dummyIdent = function dummyIdent () {\n  var dummy = this.dummyNode(\"Identifier\")\n  dummy.name = \"✖\"\n  return dummy\n};\n\nLooseParser.prototype.dummyString = function dummyString () {\n  var dummy = this.dummyNode(\"Literal\")\n  dummy.value = dummy.raw = \"✖\"\n  return dummy\n};\n\nLooseParser.prototype.eat = function eat (type) {\n  if (this.tok.type === type) {\n    this.next()\n    return true\n  } else {\n    return false\n  }\n};\n\nLooseParser.prototype.isContextual = function isContextual (name) {\n  return this.tok.type === tokTypes.name && this.tok.value === name\n};\n\nLooseParser.prototype.eatContextual = function eatContextual (name) {\n  return this.tok.value === name && this.eat(tokTypes.name)\n};\n\nLooseParser.prototype.canInsertSemicolon = function canInsertSemicolon () {\n  return this.tok.type === tokTypes.eof || this.tok.type === tokTypes.braceR ||\n    lineBreak.test(this.input.slice(this.last.end, this.tok.start))\n};\n\nLooseParser.prototype.semicolon = function semicolon () {\n  return this.eat(tokTypes.semi)\n};\n\nLooseParser.prototype.expect = function expect (type) {\n    var this$1 = this;\n\n  if (this.eat(type)) return true\n  for (var i = 1; i <= 2; i++) {\n    if (this$1.lookAhead(i).type == type) {\n      for (var j = 0; j < i; j++) this$1.next()\n      return true\n    }\n  }\n};\n\nLooseParser.prototype.pushCx = function pushCx () {\n  this.context.push(this.curIndent)\n};\n\nLooseParser.prototype.popCx = function popCx () {\n  this.curIndent = this.context.pop()\n};\n\nLooseParser.prototype.lineEnd = function lineEnd (pos) {\n  while (pos < this.input.length && !isNewLine(this.input.charCodeAt(pos))) ++pos\n  return pos\n};\n\nLooseParser.prototype.indentationAfter = function indentationAfter (pos) {\n    var this$1 = this;\n\n  for (var count = 0;; ++pos) {\n    var ch = this$1.input.charCodeAt(pos)\n    if (ch === 32) ++count\n    else if (ch === 9) count += this$1.options.tabSize\n    else return count\n  }\n};\n\nLooseParser.prototype.closes = function closes (closeTok, indent, line, blockHeuristic) {\n  if (this.tok.type === closeTok || this.tok.type === tokTypes.eof) return true\n  return line != this.curLineStart && this.curIndent < indent && this.tokenStartsLine() &&\n    (!blockHeuristic || this.nextLineStart >= this.input.length ||\n     this.indentationAfter(this.nextLineStart) < indent)\n};\n\nLooseParser.prototype.tokenStartsLine = function tokenStartsLine () {\n    var this$1 = this;\n\n  for (var p = this.tok.start - 1; p >= this.curLineStart; --p) {\n    var ch = this$1.input.charCodeAt(p)\n    if (ch !== 9 && ch !== 32) return false\n  }\n  return true\n};\n\nLooseParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name])\n};\n\nLooseParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = pluginsLoose[name]\n    if (!plugin) throw new Error(\"Plugin '\" + name + \"' not found\")\n    plugin(this$1, pluginConfigs[name])\n  }\n};\n\nvar lp = LooseParser.prototype\n\nfunction isSpace(ch) {\n  return (ch < 14 && ch > 8) || ch === 32 || ch === 160 || isNewLine(ch)\n}\n\nlp.next = function() {\n  var this$1 = this;\n\n  this.last = this.tok\n  if (this.ahead.length)\n    this.tok = this.ahead.shift()\n  else\n    this.tok = this.readToken()\n\n  if (this.tok.start >= this.nextLineStart) {\n    while (this.tok.start >= this.nextLineStart) {\n      this$1.curLineStart = this$1.nextLineStart\n      this$1.nextLineStart = this$1.lineEnd(this$1.curLineStart) + 1\n    }\n    this.curIndent = this.indentationAfter(this.curLineStart)\n  }\n}\n\nlp.readToken = function() {\n  var this$1 = this;\n\n  for (;;) {\n    try {\n      this$1.toks.next()\n      if (this$1.toks.type === tokTypes.dot &&\n          this$1.input.substr(this$1.toks.end, 1) === \".\" &&\n          this$1.options.ecmaVersion >= 6) {\n        this$1.toks.end++\n        this$1.toks.type = tokTypes.ellipsis\n      }\n      return new Token(this$1.toks)\n    } catch (e) {\n      if (!(e instanceof SyntaxError)) throw e\n\n      // Try to skip some text, based on the error message, and then continue\n      var msg = e.message, pos = e.raisedAt, replace = true\n      if (/unterminated/i.test(msg)) {\n        pos = this$1.lineEnd(e.pos + 1)\n        if (/string/.test(msg)) {\n          replace = {start: e.pos, end: pos, type: tokTypes.string, value: this$1.input.slice(e.pos + 1, pos)}\n        } else if (/regular expr/i.test(msg)) {\n          var re = this$1.input.slice(e.pos, pos)\n          try { re = new RegExp(re) } catch (e) { /* ignore compilation error due to new syntax */ }\n          replace = {start: e.pos, end: pos, type: tokTypes.regexp, value: re}\n        } else if (/template/.test(msg)) {\n          replace = {\n            start: e.pos,\n            end: pos,\n            type: tokTypes.template,\n            value: this$1.input.slice(e.pos, pos)\n          }\n        } else {\n          replace = false\n        }\n      } else if (/invalid (unicode|regexp|number)|expecting unicode|octal literal|is reserved|directly after number|expected number in radix/i.test(msg)) {\n        while (pos < this.input.length && !isSpace(this.input.charCodeAt(pos))) ++pos\n      } else if (/character escape|expected hexadecimal/i.test(msg)) {\n        while (pos < this.input.length) {\n          var ch = this$1.input.charCodeAt(pos++)\n          if (ch === 34 || ch === 39 || isNewLine(ch)) break\n        }\n      } else if (/unexpected character/i.test(msg)) {\n        pos++\n        replace = false\n      } else if (/regular expression/i.test(msg)) {\n        replace = true\n      } else {\n        throw e\n      }\n      this$1.resetTo(pos)\n      if (replace === true) replace = {start: pos, end: pos, type: tokTypes.name, value: \"✖\"}\n      if (replace) {\n        if (this$1.options.locations)\n          replace.loc = new SourceLocation(\n            this$1.toks,\n            getLineInfo(this$1.input, replace.start),\n            getLineInfo(this$1.input, replace.end))\n        return replace\n      }\n    }\n  }\n}\n\nlp.resetTo = function(pos) {\n  var this$1 = this;\n\n  this.toks.pos = pos\n  var ch = this.input.charAt(pos - 1)\n  this.toks.exprAllowed = !ch || /[[{(,;:?/*=+\\-~!|&%^<>]/.test(ch) ||\n    /[enwfd]/.test(ch) &&\n    /\\b(keywords|case|else|return|throw|new|in|(instance|type)of|delete|void)$/.test(this.input.slice(pos - 10, pos))\n\n  if (this.options.locations) {\n    this.toks.curLine = 1\n    this.toks.lineStart = lineBreakG.lastIndex = 0\n    var match\n    while ((match = lineBreakG.exec(this.input)) && match.index < pos) {\n      ++this$1.toks.curLine\n      this$1.toks.lineStart = match.index + match[0].length\n    }\n  }\n}\n\nlp.lookAhead = function(n) {\n  var this$1 = this;\n\n  while (n > this.ahead.length)\n    this$1.ahead.push(this$1.readToken())\n  return this.ahead[n - 1]\n}\n\nfunction isDummy(node) { return node.name == \"✖\" }\n\nvar lp$1 = LooseParser.prototype\n\nlp$1.parseTopLevel = function() {\n  var this$1 = this;\n\n  var node = this.startNodeAt(this.options.locations ? [0, getLineInfo(this.input, 0)] : 0)\n  node.body = []\n  while (this.tok.type !== tokTypes.eof) node.body.push(this$1.parseStatement())\n  this.last = this.tok\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType\n  }\n  return this.finishNode(node, \"Program\")\n}\n\nlp$1.parseStatement = function() {\n  var this$1 = this;\n\n  var starttype = this.tok.type, node = this.startNode(), kind\n\n  if (this.toks.isLet()) {\n    starttype = tokTypes._var\n    kind = \"let\"\n  }\n\n  switch (starttype) {\n  case tokTypes._break: case tokTypes._continue:\n    this.next()\n    var isBreak = starttype === tokTypes._break\n    if (this.semicolon() || this.canInsertSemicolon()) {\n      node.label = null\n    } else {\n      node.label = this.tok.type === tokTypes.name ? this.parseIdent() : null\n      this.semicolon()\n    }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n\n  case tokTypes._debugger:\n    this.next()\n    this.semicolon()\n    return this.finishNode(node, \"DebuggerStatement\")\n\n  case tokTypes._do:\n    this.next()\n    node.body = this.parseStatement()\n    node.test = this.eat(tokTypes._while) ? this.parseParenExpression() : this.dummyIdent()\n    this.semicolon()\n    return this.finishNode(node, \"DoWhileStatement\")\n\n  case tokTypes._for:\n    this.next()\n    this.pushCx()\n    this.expect(tokTypes.parenL)\n    if (this.tok.type === tokTypes.semi) return this.parseFor(node, null)\n    var isLet = this.toks.isLet()\n    if (isLet || this.tok.type === tokTypes._var || this.tok.type === tokTypes._const) {\n      var init$1 = this.parseVar(true, isLet ? \"let\" : this.tok.value)\n      if (init$1.declarations.length === 1 && (this.tok.type === tokTypes._in || this.isContextual(\"of\"))) {\n        return this.parseForIn(node, init$1)\n      }\n      return this.parseFor(node, init$1)\n    }\n    var init = this.parseExpression(true)\n    if (this.tok.type === tokTypes._in || this.isContextual(\"of\"))\n      return this.parseForIn(node, this.toAssignable(init))\n    return this.parseFor(node, init)\n\n  case tokTypes._function:\n    this.next()\n    return this.parseFunction(node, true)\n\n  case tokTypes._if:\n    this.next()\n    node.test = this.parseParenExpression()\n    node.consequent = this.parseStatement()\n    node.alternate = this.eat(tokTypes._else) ? this.parseStatement() : null\n    return this.finishNode(node, \"IfStatement\")\n\n  case tokTypes._return:\n    this.next()\n    if (this.eat(tokTypes.semi) || this.canInsertSemicolon()) node.argument = null\n    else { node.argument = this.parseExpression(); this.semicolon() }\n    return this.finishNode(node, \"ReturnStatement\")\n\n  case tokTypes._switch:\n    var blockIndent = this.curIndent, line = this.curLineStart\n    this.next()\n    node.discriminant = this.parseParenExpression()\n    node.cases = []\n    this.pushCx()\n    this.expect(tokTypes.braceL)\n\n    var cur\n    while (!this.closes(tokTypes.braceR, blockIndent, line, true)) {\n      if (this$1.tok.type === tokTypes._case || this$1.tok.type === tokTypes._default) {\n        var isCase = this$1.tok.type === tokTypes._case\n        if (cur) this$1.finishNode(cur, \"SwitchCase\")\n        node.cases.push(cur = this$1.startNode())\n        cur.consequent = []\n        this$1.next()\n        if (isCase) cur.test = this$1.parseExpression()\n        else cur.test = null\n        this$1.expect(tokTypes.colon)\n      } else {\n        if (!cur) {\n          node.cases.push(cur = this$1.startNode())\n          cur.consequent = []\n          cur.test = null\n        }\n        cur.consequent.push(this$1.parseStatement())\n      }\n    }\n    if (cur) this.finishNode(cur, \"SwitchCase\")\n    this.popCx()\n    this.eat(tokTypes.braceR)\n    return this.finishNode(node, \"SwitchStatement\")\n\n  case tokTypes._throw:\n    this.next()\n    node.argument = this.parseExpression()\n    this.semicolon()\n    return this.finishNode(node, \"ThrowStatement\")\n\n  case tokTypes._try:\n    this.next()\n    node.block = this.parseBlock()\n    node.handler = null\n    if (this.tok.type === tokTypes._catch) {\n      var clause = this.startNode()\n      this.next()\n      this.expect(tokTypes.parenL)\n      clause.param = this.toAssignable(this.parseExprAtom(), true)\n      this.expect(tokTypes.parenR)\n      clause.body = this.parseBlock()\n      node.handler = this.finishNode(clause, \"CatchClause\")\n    }\n    node.finalizer = this.eat(tokTypes._finally) ? this.parseBlock() : null\n    if (!node.handler && !node.finalizer) return node.block\n    return this.finishNode(node, \"TryStatement\")\n\n  case tokTypes._var:\n  case tokTypes._const:\n    return this.parseVar(false, kind || this.tok.value)\n\n  case tokTypes._while:\n    this.next()\n    node.test = this.parseParenExpression()\n    node.body = this.parseStatement()\n    return this.finishNode(node, \"WhileStatement\")\n\n  case tokTypes._with:\n    this.next()\n    node.object = this.parseParenExpression()\n    node.body = this.parseStatement()\n    return this.finishNode(node, \"WithStatement\")\n\n  case tokTypes.braceL:\n    return this.parseBlock()\n\n  case tokTypes.semi:\n    this.next()\n    return this.finishNode(node, \"EmptyStatement\")\n\n  case tokTypes._class:\n    return this.parseClass(true)\n\n  case tokTypes._import:\n    return this.parseImport()\n\n  case tokTypes._export:\n    return this.parseExport()\n\n  default:\n    if (this.toks.isAsyncFunction()) {\n      this.next()\n      this.next()\n      return this.parseFunction(node, true, true)\n    }\n    var expr = this.parseExpression()\n    if (isDummy(expr)) {\n      this.next()\n      if (this.tok.type === tokTypes.eof) return this.finishNode(node, \"EmptyStatement\")\n      return this.parseStatement()\n    } else if (starttype === tokTypes.name && expr.type === \"Identifier\" && this.eat(tokTypes.colon)) {\n      node.body = this.parseStatement()\n      node.label = expr\n      return this.finishNode(node, \"LabeledStatement\")\n    } else {\n      node.expression = expr\n      this.semicolon()\n      return this.finishNode(node, \"ExpressionStatement\")\n    }\n  }\n}\n\nlp$1.parseBlock = function() {\n  var this$1 = this;\n\n  var node = this.startNode()\n  this.pushCx()\n  this.expect(tokTypes.braceL)\n  var blockIndent = this.curIndent, line = this.curLineStart\n  node.body = []\n  while (!this.closes(tokTypes.braceR, blockIndent, line, true))\n    node.body.push(this$1.parseStatement())\n  this.popCx()\n  this.eat(tokTypes.braceR)\n  return this.finishNode(node, \"BlockStatement\")\n}\n\nlp$1.parseFor = function(node, init) {\n  node.init = init\n  node.test = node.update = null\n  if (this.eat(tokTypes.semi) && this.tok.type !== tokTypes.semi) node.test = this.parseExpression()\n  if (this.eat(tokTypes.semi) && this.tok.type !== tokTypes.parenR) node.update = this.parseExpression()\n  this.popCx()\n  this.expect(tokTypes.parenR)\n  node.body = this.parseStatement()\n  return this.finishNode(node, \"ForStatement\")\n}\n\nlp$1.parseForIn = function(node, init) {\n  var type = this.tok.type === tokTypes._in ? \"ForInStatement\" : \"ForOfStatement\"\n  this.next()\n  node.left = init\n  node.right = this.parseExpression()\n  this.popCx()\n  this.expect(tokTypes.parenR)\n  node.body = this.parseStatement()\n  return this.finishNode(node, type)\n}\n\nlp$1.parseVar = function(noIn, kind) {\n  var this$1 = this;\n\n  var node = this.startNode()\n  node.kind = kind\n  this.next()\n  node.declarations = []\n  do {\n    var decl = this$1.startNode()\n    decl.id = this$1.options.ecmaVersion >= 6 ? this$1.toAssignable(this$1.parseExprAtom(), true) : this$1.parseIdent()\n    decl.init = this$1.eat(tokTypes.eq) ? this$1.parseMaybeAssign(noIn) : null\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"))\n  } while (this.eat(tokTypes.comma))\n  if (!node.declarations.length) {\n    var decl$1 = this.startNode()\n    decl$1.id = this.dummyIdent()\n    node.declarations.push(this.finishNode(decl$1, \"VariableDeclarator\"))\n  }\n  if (!noIn) this.semicolon()\n  return this.finishNode(node, \"VariableDeclaration\")\n}\n\nlp$1.parseClass = function(isStatement) {\n  var this$1 = this;\n\n  var node = this.startNode()\n  this.next()\n  if (this.tok.type === tokTypes.name) node.id = this.parseIdent()\n  else if (isStatement === true) node.id = this.dummyIdent()\n  else node.id = null\n  node.superClass = this.eat(tokTypes._extends) ? this.parseExpression() : null\n  node.body = this.startNode()\n  node.body.body = []\n  this.pushCx()\n  var indent = this.curIndent + 1, line = this.curLineStart\n  this.eat(tokTypes.braceL)\n  if (this.curIndent + 1 < indent) { indent = this.curIndent; line = this.curLineStart }\n  while (!this.closes(tokTypes.braceR, indent, line)) {\n    if (this$1.semicolon()) continue\n    var method = this$1.startNode(), isGenerator, isAsync\n    if (this$1.options.ecmaVersion >= 6) {\n      method.static = false\n      isGenerator = this$1.eat(tokTypes.star)\n    }\n    this$1.parsePropertyName(method)\n    if (isDummy(method.key)) { if (isDummy(this$1.parseMaybeAssign())) this$1.next(); this$1.eat(tokTypes.comma); continue }\n    if (method.key.type === \"Identifier\" && !method.computed && method.key.name === \"static\" &&\n        (this$1.tok.type != tokTypes.parenL && this$1.tok.type != tokTypes.braceL)) {\n      method.static = true\n      isGenerator = this$1.eat(tokTypes.star)\n      this$1.parsePropertyName(method)\n    } else {\n      method.static = false\n    }\n    if (!method.computed &&\n        method.key.type === \"Identifier\" && method.key.name === \"async\" && this$1.tok.type !== tokTypes.parenL &&\n        !this$1.canInsertSemicolon()) {\n      this$1.parsePropertyName(method)\n      isAsync = true\n    } else {\n      isAsync = false\n    }\n    if (this$1.options.ecmaVersion >= 5 && method.key.type === \"Identifier\" &&\n        !method.computed && (method.key.name === \"get\" || method.key.name === \"set\") &&\n        this$1.tok.type !== tokTypes.parenL && this$1.tok.type !== tokTypes.braceL) {\n      method.kind = method.key.name\n      this$1.parsePropertyName(method)\n      method.value = this$1.parseMethod(false)\n    } else {\n      if (!method.computed && !method.static && !isGenerator && !isAsync && (\n        method.key.type === \"Identifier\" && method.key.name === \"constructor\" ||\n          method.key.type === \"Literal\" && method.key.value === \"constructor\")) {\n        method.kind = \"constructor\"\n      } else {\n        method.kind = \"method\"\n      }\n      method.value = this$1.parseMethod(isGenerator, isAsync)\n    }\n    node.body.body.push(this$1.finishNode(method, \"MethodDefinition\"))\n  }\n  this.popCx()\n  if (!this.eat(tokTypes.braceR)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start\n    if (this.options.locations) this.last.loc.end = this.tok.loc.start\n  }\n  this.semicolon()\n  this.finishNode(node.body, \"ClassBody\")\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n}\n\nlp$1.parseFunction = function(node, isStatement, isAsync) {\n  var oldInAsync = this.inAsync\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = this.eat(tokTypes.star)\n  }\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync\n  }\n  if (this.tok.type === tokTypes.name) node.id = this.parseIdent()\n  else if (isStatement === true) node.id = this.dummyIdent()\n  this.inAsync = node.async\n  node.params = this.parseFunctionParams()\n  node.body = this.parseBlock()\n  this.inAsync = oldInAsync\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n}\n\nlp$1.parseExport = function() {\n  var node = this.startNode()\n  this.next()\n  if (this.eat(tokTypes.star)) {\n    node.source = this.eatContextual(\"from\") ? this.parseExprAtom() : this.dummyString()\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(tokTypes._default)) {\n    // export default (function foo() {}) // This is FunctionExpression.\n    var isAsync\n    if (this.tok.type === tokTypes._function || (isAsync = this.toks.isAsyncFunction())) {\n      var fNode = this.startNode()\n      this.next()\n      if (isAsync) this.next()\n      node.declaration = this.parseFunction(fNode, \"nullableID\", isAsync)\n    } else if (this.tok.type === tokTypes._class) {\n      node.declaration = this.parseClass(\"nullableID\")\n    } else {\n      node.declaration = this.parseMaybeAssign()\n      this.semicolon()\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  if (this.tok.type.keyword || this.toks.isLet() || this.toks.isAsyncFunction()) {\n    node.declaration = this.parseStatement()\n    node.specifiers = []\n    node.source = null\n  } else {\n    node.declaration = null\n    node.specifiers = this.parseExportSpecifierList()\n    node.source = this.eatContextual(\"from\") ? this.parseExprAtom() : null\n    this.semicolon()\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n}\n\nlp$1.parseImport = function() {\n  var node = this.startNode()\n  this.next()\n  if (this.tok.type === tokTypes.string) {\n    node.specifiers = []\n    node.source = this.parseExprAtom()\n    node.kind = \"\"\n  } else {\n    var elt\n    if (this.tok.type === tokTypes.name && this.tok.value !== \"from\") {\n      elt = this.startNode()\n      elt.local = this.parseIdent()\n      this.finishNode(elt, \"ImportDefaultSpecifier\")\n      this.eat(tokTypes.comma)\n    }\n    node.specifiers = this.parseImportSpecifierList()\n    node.source = this.eatContextual(\"from\") && this.tok.type == tokTypes.string ? this.parseExprAtom() : this.dummyString()\n    if (elt) node.specifiers.unshift(elt)\n  }\n  this.semicolon()\n  return this.finishNode(node, \"ImportDeclaration\")\n}\n\nlp$1.parseImportSpecifierList = function() {\n  var this$1 = this;\n\n  var elts = []\n  if (this.tok.type === tokTypes.star) {\n    var elt = this.startNode()\n    this.next()\n    elt.local = this.eatContextual(\"as\") ? this.parseIdent() : this.dummyIdent()\n    elts.push(this.finishNode(elt, \"ImportNamespaceSpecifier\"))\n  } else {\n    var indent = this.curIndent, line = this.curLineStart, continuedLine = this.nextLineStart\n    this.pushCx()\n    this.eat(tokTypes.braceL)\n    if (this.curLineStart > continuedLine) continuedLine = this.curLineStart\n    while (!this.closes(tokTypes.braceR, indent + (this.curLineStart <= continuedLine ? 1 : 0), line)) {\n      var elt$1 = this$1.startNode()\n      if (this$1.eat(tokTypes.star)) {\n        elt$1.local = this$1.eatContextual(\"as\") ? this$1.parseIdent() : this$1.dummyIdent()\n        this$1.finishNode(elt$1, \"ImportNamespaceSpecifier\")\n      } else {\n        if (this$1.isContextual(\"from\")) break\n        elt$1.imported = this$1.parseIdent()\n        if (isDummy(elt$1.imported)) break\n        elt$1.local = this$1.eatContextual(\"as\") ? this$1.parseIdent() : elt$1.imported\n        this$1.finishNode(elt$1, \"ImportSpecifier\")\n      }\n      elts.push(elt$1)\n      this$1.eat(tokTypes.comma)\n    }\n    this.eat(tokTypes.braceR)\n    this.popCx()\n  }\n  return elts\n}\n\nlp$1.parseExportSpecifierList = function() {\n  var this$1 = this;\n\n  var elts = []\n  var indent = this.curIndent, line = this.curLineStart, continuedLine = this.nextLineStart\n  this.pushCx()\n  this.eat(tokTypes.braceL)\n  if (this.curLineStart > continuedLine) continuedLine = this.curLineStart\n  while (!this.closes(tokTypes.braceR, indent + (this.curLineStart <= continuedLine ? 1 : 0), line)) {\n    if (this$1.isContextual(\"from\")) break\n    var elt = this$1.startNode()\n    elt.local = this$1.parseIdent()\n    if (isDummy(elt.local)) break\n    elt.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent() : elt.local\n    this$1.finishNode(elt, \"ExportSpecifier\")\n    elts.push(elt)\n    this$1.eat(tokTypes.comma)\n  }\n  this.eat(tokTypes.braceR)\n  this.popCx()\n  return elts\n}\n\nvar lp$2 = LooseParser.prototype\n\nlp$2.checkLVal = function(expr) {\n  if (!expr) return expr\n  switch (expr.type) {\n  case \"Identifier\":\n  case \"MemberExpression\":\n    return expr\n\n  case \"ParenthesizedExpression\":\n    expr.expression = this.checkLVal(expr.expression)\n    return expr\n\n  default:\n    return this.dummyIdent()\n  }\n}\n\nlp$2.parseExpression = function(noIn) {\n  var this$1 = this;\n\n  var start = this.storeCurrentPos()\n  var expr = this.parseMaybeAssign(noIn)\n  if (this.tok.type === tokTypes.comma) {\n    var node = this.startNodeAt(start)\n    node.expressions = [expr]\n    while (this.eat(tokTypes.comma)) node.expressions.push(this$1.parseMaybeAssign(noIn))\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n}\n\nlp$2.parseParenExpression = function() {\n  this.pushCx()\n  this.expect(tokTypes.parenL)\n  var val = this.parseExpression()\n  this.popCx()\n  this.expect(tokTypes.parenR)\n  return val\n}\n\nlp$2.parseMaybeAssign = function(noIn) {\n  if (this.toks.isContextual(\"yield\")) {\n    var node = this.startNode()\n    this.next()\n    if (this.semicolon() || this.canInsertSemicolon() || (this.tok.type != tokTypes.star && !this.tok.type.startsExpr)) {\n      node.delegate = false\n      node.argument = null\n    } else {\n      node.delegate = this.eat(tokTypes.star)\n      node.argument = this.parseMaybeAssign()\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  }\n\n  var start = this.storeCurrentPos()\n  var left = this.parseMaybeConditional(noIn)\n  if (this.tok.type.isAssign) {\n    var node$1 = this.startNodeAt(start)\n    node$1.operator = this.tok.value\n    node$1.left = this.tok.type === tokTypes.eq ? this.toAssignable(left) : this.checkLVal(left)\n    this.next()\n    node$1.right = this.parseMaybeAssign(noIn)\n    return this.finishNode(node$1, \"AssignmentExpression\")\n  }\n  return left\n}\n\nlp$2.parseMaybeConditional = function(noIn) {\n  var start = this.storeCurrentPos()\n  var expr = this.parseExprOps(noIn)\n  if (this.eat(tokTypes.question)) {\n    var node = this.startNodeAt(start)\n    node.test = expr\n    node.consequent = this.parseMaybeAssign()\n    node.alternate = this.expect(tokTypes.colon) ? this.parseMaybeAssign(noIn) : this.dummyIdent()\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n}\n\nlp$2.parseExprOps = function(noIn) {\n  var start = this.storeCurrentPos()\n  var indent = this.curIndent, line = this.curLineStart\n  return this.parseExprOp(this.parseMaybeUnary(false), start, -1, noIn, indent, line)\n}\n\nlp$2.parseExprOp = function(left, start, minPrec, noIn, indent, line) {\n  if (this.curLineStart != line && this.curIndent < indent && this.tokenStartsLine()) return left\n  var prec = this.tok.type.binop\n  if (prec != null && (!noIn || this.tok.type !== tokTypes._in)) {\n    if (prec > minPrec) {\n      var node = this.startNodeAt(start)\n      node.left = left\n      node.operator = this.tok.value\n      this.next()\n      if (this.curLineStart != line && this.curIndent < indent && this.tokenStartsLine()) {\n        node.right = this.dummyIdent()\n      } else {\n        var rightStart = this.storeCurrentPos()\n        node.right = this.parseExprOp(this.parseMaybeUnary(false), rightStart, prec, noIn, indent, line)\n      }\n      this.finishNode(node, /&&|\\|\\|/.test(node.operator) ? \"LogicalExpression\" : \"BinaryExpression\")\n      return this.parseExprOp(node, start, minPrec, noIn, indent, line)\n    }\n  }\n  return left\n}\n\nlp$2.parseMaybeUnary = function(sawUnary) {\n  var this$1 = this;\n\n  var start = this.storeCurrentPos(), expr\n  if (this.options.ecmaVersion >= 8 && this.inAsync && this.toks.isContextual(\"await\")) {\n    expr = this.parseAwait()\n    sawUnary = true\n  } else if (this.tok.type.prefix) {\n    var node = this.startNode(), update = this.tok.type === tokTypes.incDec\n    if (!update) sawUnary = true\n    node.operator = this.tok.value\n    node.prefix = true\n    this.next()\n    node.argument = this.parseMaybeUnary(true)\n    if (update) node.argument = this.checkLVal(node.argument)\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\")\n  } else if (this.tok.type === tokTypes.ellipsis) {\n    var node$1 = this.startNode()\n    this.next()\n    node$1.argument = this.parseMaybeUnary(sawUnary)\n    expr = this.finishNode(node$1, \"SpreadElement\")\n  } else {\n    expr = this.parseExprSubscripts()\n    while (this.tok.type.postfix && !this.canInsertSemicolon()) {\n      var node$2 = this$1.startNodeAt(start)\n      node$2.operator = this$1.tok.value\n      node$2.prefix = false\n      node$2.argument = this$1.checkLVal(expr)\n      this$1.next()\n      expr = this$1.finishNode(node$2, \"UpdateExpression\")\n    }\n  }\n\n  if (!sawUnary && this.eat(tokTypes.starstar)) {\n    var node$3 = this.startNodeAt(start)\n    node$3.operator = \"**\"\n    node$3.left = expr\n    node$3.right = this.parseMaybeUnary(false)\n    return this.finishNode(node$3, \"BinaryExpression\")\n  }\n\n  return expr\n}\n\nlp$2.parseExprSubscripts = function() {\n  var start = this.storeCurrentPos()\n  return this.parseSubscripts(this.parseExprAtom(), start, false, this.curIndent, this.curLineStart)\n}\n\nlp$2.parseSubscripts = function(base, start, noCalls, startIndent, line) {\n  var this$1 = this;\n\n  for (;;) {\n    if (this$1.curLineStart != line && this$1.curIndent <= startIndent && this$1.tokenStartsLine()) {\n      if (this$1.tok.type == tokTypes.dot && this$1.curIndent == startIndent)\n        --startIndent\n      else\n        return base\n    }\n\n    var maybeAsyncArrow = base.type === \"Identifier\" && base.name === \"async\" && !this$1.canInsertSemicolon()\n\n    if (this$1.eat(tokTypes.dot)) {\n      var node = this$1.startNodeAt(start)\n      node.object = base\n      if (this$1.curLineStart != line && this$1.curIndent <= startIndent && this$1.tokenStartsLine())\n        node.property = this$1.dummyIdent()\n      else\n        node.property = this$1.parsePropertyAccessor() || this$1.dummyIdent()\n      node.computed = false\n      base = this$1.finishNode(node, \"MemberExpression\")\n    } else if (this$1.tok.type == tokTypes.bracketL) {\n      this$1.pushCx()\n      this$1.next()\n      var node$1 = this$1.startNodeAt(start)\n      node$1.object = base\n      node$1.property = this$1.parseExpression()\n      node$1.computed = true\n      this$1.popCx()\n      this$1.expect(tokTypes.bracketR)\n      base = this$1.finishNode(node$1, \"MemberExpression\")\n    } else if (!noCalls && this$1.tok.type == tokTypes.parenL) {\n      var exprList = this$1.parseExprList(tokTypes.parenR)\n      if (maybeAsyncArrow && this$1.eat(tokTypes.arrow))\n        return this$1.parseArrowExpression(this$1.startNodeAt(start), exprList, true)\n      var node$2 = this$1.startNodeAt(start)\n      node$2.callee = base\n      node$2.arguments = exprList\n      base = this$1.finishNode(node$2, \"CallExpression\")\n    } else if (this$1.tok.type == tokTypes.backQuote) {\n      var node$3 = this$1.startNodeAt(start)\n      node$3.tag = base\n      node$3.quasi = this$1.parseTemplate()\n      base = this$1.finishNode(node$3, \"TaggedTemplateExpression\")\n    } else {\n      return base\n    }\n  }\n}\n\nlp$2.parseExprAtom = function() {\n  var node\n  switch (this.tok.type) {\n  case tokTypes._this:\n  case tokTypes._super:\n    var type = this.tok.type === tokTypes._this ? \"ThisExpression\" : \"Super\"\n    node = this.startNode()\n    this.next()\n    return this.finishNode(node, type)\n\n  case tokTypes.name:\n    var start = this.storeCurrentPos()\n    var id = this.parseIdent()\n    var isAsync = false\n    if (id.name === \"async\" && !this.canInsertSemicolon()) {\n      if (this.eat(tokTypes._function))\n        return this.parseFunction(this.startNodeAt(start), false, true)\n      if (this.tok.type === tokTypes.name) {\n        id = this.parseIdent()\n        isAsync = true\n      }\n    }\n    return this.eat(tokTypes.arrow) ? this.parseArrowExpression(this.startNodeAt(start), [id], isAsync) : id\n\n  case tokTypes.regexp:\n    node = this.startNode()\n    var val = this.tok.value\n    node.regex = {pattern: val.pattern, flags: val.flags}\n    node.value = val.value\n    node.raw = this.input.slice(this.tok.start, this.tok.end)\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case tokTypes.num: case tokTypes.string:\n    node = this.startNode()\n    node.value = this.tok.value\n    node.raw = this.input.slice(this.tok.start, this.tok.end)\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case tokTypes._null: case tokTypes._true: case tokTypes._false:\n    node = this.startNode()\n    node.value = this.tok.type === tokTypes._null ? null : this.tok.type === tokTypes._true\n    node.raw = this.tok.type.keyword\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case tokTypes.parenL:\n    var parenStart = this.storeCurrentPos()\n    this.next()\n    var inner = this.parseExpression()\n    this.expect(tokTypes.parenR)\n    if (this.eat(tokTypes.arrow)) {\n      // (a,)=>a // SequenceExpression makes dummy in the last hole. Drop the dummy.\n      var params = inner.expressions || [inner]\n      if (params.length && isDummy(params[params.length - 1]))\n        params.pop()\n      return this.parseArrowExpression(this.startNodeAt(parenStart), params)\n    }\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(parenStart)\n      par.expression = inner\n      inner = this.finishNode(par, \"ParenthesizedExpression\")\n    }\n    return inner\n\n  case tokTypes.bracketL:\n    node = this.startNode()\n    node.elements = this.parseExprList(tokTypes.bracketR, true)\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case tokTypes.braceL:\n    return this.parseObj()\n\n  case tokTypes._class:\n    return this.parseClass(false)\n\n  case tokTypes._function:\n    node = this.startNode()\n    this.next()\n    return this.parseFunction(node, false)\n\n  case tokTypes._new:\n    return this.parseNew()\n\n  case tokTypes.backQuote:\n    return this.parseTemplate()\n\n  default:\n    return this.dummyIdent()\n  }\n}\n\nlp$2.parseNew = function() {\n  var node = this.startNode(), startIndent = this.curIndent, line = this.curLineStart\n  var meta = this.parseIdent(true)\n  if (this.options.ecmaVersion >= 6 && this.eat(tokTypes.dot)) {\n    node.meta = meta\n    node.property = this.parseIdent(true)\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var start = this.storeCurrentPos()\n  node.callee = this.parseSubscripts(this.parseExprAtom(), start, true, startIndent, line)\n  if (this.tok.type == tokTypes.parenL) {\n    node.arguments = this.parseExprList(tokTypes.parenR)\n  } else {\n    node.arguments = []\n  }\n  return this.finishNode(node, \"NewExpression\")\n}\n\nlp$2.parseTemplateElement = function() {\n  var elem = this.startNode()\n  elem.value = {\n    raw: this.input.slice(this.tok.start, this.tok.end).replace(/\\r\\n?/g, \"\\n\"),\n    cooked: this.tok.value\n  }\n  this.next()\n  elem.tail = this.tok.type === tokTypes.backQuote\n  return this.finishNode(elem, \"TemplateElement\")\n}\n\nlp$2.parseTemplate = function() {\n  var this$1 = this;\n\n  var node = this.startNode()\n  this.next()\n  node.expressions = []\n  var curElt = this.parseTemplateElement()\n  node.quasis = [curElt]\n  while (!curElt.tail) {\n    this$1.next()\n    node.expressions.push(this$1.parseExpression())\n    if (this$1.expect(tokTypes.braceR)) {\n      curElt = this$1.parseTemplateElement()\n    } else {\n      curElt = this$1.startNode()\n      curElt.value = {cooked: \"\", raw: \"\"}\n      curElt.tail = true\n      this$1.finishNode(curElt, \"TemplateElement\")\n    }\n    node.quasis.push(curElt)\n  }\n  this.expect(tokTypes.backQuote)\n  return this.finishNode(node, \"TemplateLiteral\")\n}\n\nlp$2.parseObj = function() {\n  var this$1 = this;\n\n  var node = this.startNode()\n  node.properties = []\n  this.pushCx()\n  var indent = this.curIndent + 1, line = this.curLineStart\n  this.eat(tokTypes.braceL)\n  if (this.curIndent + 1 < indent) { indent = this.curIndent; line = this.curLineStart }\n  while (!this.closes(tokTypes.braceR, indent, line)) {\n    var prop = this$1.startNode(), isGenerator, isAsync, start\n    if (this$1.options.ecmaVersion >= 6) {\n      start = this$1.storeCurrentPos()\n      prop.method = false\n      prop.shorthand = false\n      isGenerator = this$1.eat(tokTypes.star)\n    }\n    this$1.parsePropertyName(prop)\n    if (!prop.computed &&\n        prop.key.type === \"Identifier\" && prop.key.name === \"async\" && this$1.tok.type !== tokTypes.parenL &&\n        this$1.tok.type !== tokTypes.colon && !this$1.canInsertSemicolon()) {\n      this$1.parsePropertyName(prop)\n      isAsync = true\n    } else {\n      isAsync = false\n    }\n    if (isDummy(prop.key)) { if (isDummy(this$1.parseMaybeAssign())) this$1.next(); this$1.eat(tokTypes.comma); continue }\n    if (this$1.eat(tokTypes.colon)) {\n      prop.kind = \"init\"\n      prop.value = this$1.parseMaybeAssign()\n    } else if (this$1.options.ecmaVersion >= 6 && (this$1.tok.type === tokTypes.parenL || this$1.tok.type === tokTypes.braceL)) {\n      prop.kind = \"init\"\n      prop.method = true\n      prop.value = this$1.parseMethod(isGenerator, isAsync)\n    } else if (this$1.options.ecmaVersion >= 5 && prop.key.type === \"Identifier\" &&\n               !prop.computed && (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this$1.tok.type != tokTypes.comma && this$1.tok.type != tokTypes.braceR)) {\n      prop.kind = prop.key.name\n      this$1.parsePropertyName(prop)\n      prop.value = this$1.parseMethod(false)\n    } else {\n      prop.kind = \"init\"\n      if (this$1.options.ecmaVersion >= 6) {\n        if (this$1.eat(tokTypes.eq)) {\n          var assign = this$1.startNodeAt(start)\n          assign.operator = \"=\"\n          assign.left = prop.key\n          assign.right = this$1.parseMaybeAssign()\n          prop.value = this$1.finishNode(assign, \"AssignmentExpression\")\n        } else {\n          prop.value = prop.key\n        }\n      } else {\n        prop.value = this$1.dummyIdent()\n      }\n      prop.shorthand = true\n    }\n    node.properties.push(this$1.finishNode(prop, \"Property\"))\n    this$1.eat(tokTypes.comma)\n  }\n  this.popCx()\n  if (!this.eat(tokTypes.braceR)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start\n    if (this.options.locations) this.last.loc.end = this.tok.loc.start\n  }\n  return this.finishNode(node, \"ObjectExpression\")\n}\n\nlp$2.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(tokTypes.bracketL)) {\n      prop.computed = true\n      prop.key = this.parseExpression()\n      this.expect(tokTypes.bracketR)\n      return\n    } else {\n      prop.computed = false\n    }\n  }\n  var key = (this.tok.type === tokTypes.num || this.tok.type === tokTypes.string) ? this.parseExprAtom() : this.parseIdent()\n  prop.key = key || this.dummyIdent()\n}\n\nlp$2.parsePropertyAccessor = function() {\n  if (this.tok.type === tokTypes.name || this.tok.type.keyword) return this.parseIdent()\n}\n\nlp$2.parseIdent = function() {\n  var name = this.tok.type === tokTypes.name ? this.tok.value : this.tok.type.keyword\n  if (!name) return this.dummyIdent()\n  var node = this.startNode()\n  this.next()\n  node.name = name\n  return this.finishNode(node, \"Identifier\")\n}\n\nlp$2.initFunction = function(node) {\n  node.id = null\n  node.params = []\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false\n    node.expression = false\n  }\n  if (this.options.ecmaVersion >= 8)\n    node.async = false\n}\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\nlp$2.toAssignable = function(node, binding) {\n  var this$1 = this;\n\n  if (!node || node.type == \"Identifier\" || (node.type == \"MemberExpression\" && !binding)) {\n    // Okay\n  } else if (node.type == \"ParenthesizedExpression\") {\n    node.expression = this.toAssignable(node.expression, binding)\n  } else if (this.options.ecmaVersion < 6) {\n    return this.dummyIdent()\n  } else if (node.type == \"ObjectExpression\") {\n    node.type = \"ObjectPattern\"\n    var props = node.properties\n    for (var i = 0; i < props.length; i++)\n      props[i].value = this$1.toAssignable(props[i].value, binding)\n  } else if (node.type == \"ArrayExpression\") {\n    node.type = \"ArrayPattern\"\n    this.toAssignableList(node.elements, binding)\n  } else if (node.type == \"SpreadElement\") {\n    node.type = \"RestElement\"\n    node.argument = this.toAssignable(node.argument, binding)\n  } else if (node.type == \"AssignmentExpression\") {\n    node.type = \"AssignmentPattern\"\n    delete node.operator\n  } else {\n    return this.dummyIdent()\n  }\n  return node\n}\n\nlp$2.toAssignableList = function(exprList, binding) {\n  var this$1 = this;\n\n  for (var i = 0; i < exprList.length; i++)\n    exprList[i] = this$1.toAssignable(exprList[i], binding)\n  return exprList\n}\n\nlp$2.parseFunctionParams = function(params) {\n  params = this.parseExprList(tokTypes.parenR)\n  return this.toAssignableList(params, true)\n}\n\nlp$2.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInAsync = this.inAsync\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 6)\n    node.generator = !!isGenerator\n  if (this.options.ecmaVersion >= 8)\n    node.async = !!isAsync\n  this.inAsync = node.async\n  node.params = this.parseFunctionParams()\n  node.expression = this.options.ecmaVersion >= 6 && this.tok.type !== tokTypes.braceL\n  node.body = node.expression ? this.parseMaybeAssign() : this.parseBlock()\n  this.inAsync = oldInAsync\n  return this.finishNode(node, \"FunctionExpression\")\n}\n\nlp$2.parseArrowExpression = function(node, params, isAsync) {\n  var oldInAsync = this.inAsync\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 8)\n    node.async = !!isAsync\n  this.inAsync = node.async\n  node.params = this.toAssignableList(params, true)\n  node.expression = this.tok.type !== tokTypes.braceL\n  node.body = node.expression ? this.parseMaybeAssign() : this.parseBlock()\n  this.inAsync = oldInAsync\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n}\n\nlp$2.parseExprList = function(close, allowEmpty) {\n  var this$1 = this;\n\n  this.pushCx()\n  var indent = this.curIndent, line = this.curLineStart, elts = []\n  this.next() // Opening bracket\n  while (!this.closes(close, indent + 1, line)) {\n    if (this$1.eat(tokTypes.comma)) {\n      elts.push(allowEmpty ? null : this$1.dummyIdent())\n      continue\n    }\n    var elt = this$1.parseMaybeAssign()\n    if (isDummy(elt)) {\n      if (this$1.closes(close, indent, line)) break\n      this$1.next()\n    } else {\n      elts.push(elt)\n    }\n    this$1.eat(tokTypes.comma)\n  }\n  this.popCx()\n  if (!this.eat(close)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start\n    if (this.options.locations) this.last.loc.end = this.tok.loc.start\n  }\n  return elts\n}\n\nlp$2.parseAwait = function() {\n  var node = this.startNode()\n  this.next()\n  node.argument = this.parseMaybeUnary()\n  return this.finishNode(node, \"AwaitExpression\")\n}\n\n// Acorn: Loose parser\n//\n// This module provides an alternative parser (`parse_dammit`) that\n// exposes that same interface as `parse`, but will try to parse\n// anything as JavaScript, repairing syntax error the best it can.\n// There are circumstances in which it will raise an error and give\n// up, but they are very rare. The resulting AST will be a mostly\n// valid JavaScript AST (as per the [Mozilla parser API][api], except\n// that:\n//\n// - Return outside functions is allowed\n//\n// - Label consistency (no conflicts, break only to existing labels)\n//   is not enforced.\n//\n// - Bogus Identifier nodes with a name of `\"✖\"` are inserted whenever\n//   the parser got too confused to return anything meaningful.\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n//\n// The expected use for this is to *first* try `acorn.parse`, and only\n// if that fails switch to `parse_dammit`. The loose parser might\n// parse badly indented code incorrectly, so **don't** use it as\n// your default parser.\n//\n// Quite a lot of acorn.js is duplicated here. The alternative was to\n// add a *lot* of extra cruft to that file, making it less readable\n// and slower. Copying and editing the code allowed me to make\n// invasive changes and simplifications without creating a complicated\n// tangle.\n\ndefaultOptions.tabSize = 4\n\n// eslint-disable-next-line camelcase\nfunction parse_dammit(input, options) {\n  var p = new LooseParser(input, options)\n  p.next()\n  return p.parseTopLevel()\n}\n\naddLooseExports(parse_dammit, LooseParser, pluginsLoose)\n\nexport { parse_dammit, LooseParser, pluginsLoose };"]}