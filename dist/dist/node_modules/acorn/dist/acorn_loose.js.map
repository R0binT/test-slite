{"version":3,"sources":["../../../../node_modules/acorn/dist/acorn_loose.js"],"names":["global","factory","exports","module","require","define","amd","acorn","loose","__acorn","pluginsLoose","LooseParser","input","options","toks","tokenizer","tok","last","type","tokTypes","eof","start","end","locations","here","curPosition","loc","SourceLocation","ahead","context","curIndent","curLineStart","nextLineStart","lineEnd","inAsync","loadPlugins","prototype","startNode","Node","storeCurrentPos","startNodeAt","pos","finishNode","node","ranges","range","dummyNode","dummy","name","dummyIdent","dummyString","value","raw","eat","next","isContextual","eatContextual","canInsertSemicolon","braceR","lineBreak","test","slice","semicolon","semi","expect","this$1","i","lookAhead","j","pushCx","push","popCx","pop","length","isNewLine","charCodeAt","indentationAfter","count","ch","tabSize","closes","closeTok","indent","line","blockHeuristic","tokenStartsLine","p","extend","f","pluginConfigs","plugin","Error","lp","isSpace","shift","readToken","dot","substr","ecmaVersion","ellipsis","Token","e","SyntaxError","msg","message","raisedAt","replace","string","re","RegExp","regexp","template","resetTo","getLineInfo","charAt","exprAllowed","curLine","lineStart","lineBreakG","lastIndex","match","exec","index","n","isDummy","lp$1","parseTopLevel","body","parseStatement","sourceType","starttype","kind","isLet","_var","_break","_continue","isBreak","label","parseIdent","_debugger","_do","_while","parseParenExpression","_for","parenL","parseFor","_const","init$1","parseVar","declarations","_in","parseForIn","init","parseExpression","toAssignable","_function","parseFunction","_if","consequent","alternate","_else","_return","argument","_switch","blockIndent","discriminant","cases","braceL","cur","_case","_default","isCase","colon","_throw","_try","block","parseBlock","handler","_catch","clause","param","parseExprAtom","parenR","finalizer","_finally","_with","object","_class","parseClass","_import","parseImport","_export","parseExport","isAsyncFunction","expr","expression","update","left","right","noIn","decl","id","eq","parseMaybeAssign","comma","decl$1","isStatement","superClass","_extends","method","isGenerator","isAsync","static","star","parsePropertyName","key","computed","parseMethod","oldInAsync","initFunction","generator","async","params","parseFunctionParams","source","fNode","declaration","keyword","specifiers","parseExportSpecifierList","elt","local","parseImportSpecifierList","unshift","elts","continuedLine","elt$1","imported","exported","lp$2","checkLVal","expressions","val","startsExpr","delegate","parseMaybeConditional","isAssign","node$1","operator","parseExprOps","question","parseExprOp","parseMaybeUnary","minPrec","prec","binop","rightStart","sawUnary","parseAwait","prefix","incDec","parseExprSubscripts","postfix","node$2","starstar","node$3","parseSubscripts","base","noCalls","startIndent","maybeAsyncArrow","property","parsePropertyAccessor","bracketL","bracketR","exprList","parseExprList","arrow","parseArrowExpression","callee","arguments","backQuote","tag","quasi","parseTemplate","_this","_super","regex","pattern","flags","num","_null","_true","_false","parenStart","inner","preserveParens","par","elements","parseObj","_new","parseNew","meta","parseTemplateElement","elem","cooked","tail","curElt","quasis","properties","prop","shorthand","assign","binding","props","toAssignableList","close","allowEmpty","defaultOptions","parse_dammit","addLooseExports","Object","defineProperty"],"mappings":"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","file":"acorn_loose.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('./acorn')) :\n  typeof define === 'function' && define.amd ? define(['exports', './acorn'], factory) :\n  (factory((global.acorn = global.acorn || {}, global.acorn.loose = global.acorn.loose || {}),global.acorn));\n}(this, (function (exports,__acorn) { 'use strict';\n\n// Registered plugins\nvar pluginsLoose = {}\n\nvar LooseParser = function LooseParser(input, options) {\n  if ( options === void 0 ) options = {};\n\n  this.toks = __acorn.tokenizer(input, options)\n  this.options = this.toks.options\n  this.input = this.toks.input\n  this.tok = this.last = {type: __acorn.tokTypes.eof, start: 0, end: 0}\n  if (this.options.locations) {\n    var here = this.toks.curPosition()\n    this.tok.loc = new __acorn.SourceLocation(this.toks, here, here)\n  }\n  this.ahead = [] // Tokens ahead\n  this.context = [] // Indentation contexted\n  this.curIndent = 0\n  this.curLineStart = 0\n  this.nextLineStart = this.lineEnd(this.curLineStart) + 1\n  this.inAsync = false\n  // Load plugins\n  this.options.pluginsLoose = options.pluginsLoose || {}\n  this.loadPlugins(this.options.pluginsLoose)\n};\n\nLooseParser.prototype.startNode = function startNode () {\n  return new __acorn.Node(this.toks, this.tok.start, this.options.locations ? this.tok.loc.start : null)\n};\n\nLooseParser.prototype.storeCurrentPos = function storeCurrentPos () {\n  return this.options.locations ? [this.tok.start, this.tok.loc.start] : this.tok.start\n};\n\nLooseParser.prototype.startNodeAt = function startNodeAt (pos) {\n  if (this.options.locations) {\n    return new __acorn.Node(this.toks, pos[0], pos[1])\n  } else {\n    return new __acorn.Node(this.toks, pos)\n  }\n};\n\nLooseParser.prototype.finishNode = function finishNode (node, type) {\n  node.type = type\n  node.end = this.last.end\n  if (this.options.locations)\n    node.loc.end = this.last.loc.end\n  if (this.options.ranges)\n    node.range[1] = this.last.end\n  return node\n};\n\nLooseParser.prototype.dummyNode = function dummyNode (type) {\n  var dummy = this.startNode()\n  dummy.type = type\n  dummy.end = dummy.start\n  if (this.options.locations)\n    dummy.loc.end = dummy.loc.start\n  if (this.options.ranges)\n    dummy.range[1] = dummy.start\n  this.last = {type: __acorn.tokTypes.name, start: dummy.start, end: dummy.start, loc: dummy.loc}\n  return dummy\n};\n\nLooseParser.prototype.dummyIdent = function dummyIdent () {\n  var dummy = this.dummyNode(\"Identifier\")\n  dummy.name = \"✖\"\n  return dummy\n};\n\nLooseParser.prototype.dummyString = function dummyString () {\n  var dummy = this.dummyNode(\"Literal\")\n  dummy.value = dummy.raw = \"✖\"\n  return dummy\n};\n\nLooseParser.prototype.eat = function eat (type) {\n  if (this.tok.type === type) {\n    this.next()\n    return true\n  } else {\n    return false\n  }\n};\n\nLooseParser.prototype.isContextual = function isContextual (name) {\n  return this.tok.type === __acorn.tokTypes.name && this.tok.value === name\n};\n\nLooseParser.prototype.eatContextual = function eatContextual (name) {\n  return this.tok.value === name && this.eat(__acorn.tokTypes.name)\n};\n\nLooseParser.prototype.canInsertSemicolon = function canInsertSemicolon () {\n  return this.tok.type === __acorn.tokTypes.eof || this.tok.type === __acorn.tokTypes.braceR ||\n    __acorn.lineBreak.test(this.input.slice(this.last.end, this.tok.start))\n};\n\nLooseParser.prototype.semicolon = function semicolon () {\n  return this.eat(__acorn.tokTypes.semi)\n};\n\nLooseParser.prototype.expect = function expect (type) {\n    var this$1 = this;\n\n  if (this.eat(type)) return true\n  for (var i = 1; i <= 2; i++) {\n    if (this$1.lookAhead(i).type == type) {\n      for (var j = 0; j < i; j++) this$1.next()\n      return true\n    }\n  }\n};\n\nLooseParser.prototype.pushCx = function pushCx () {\n  this.context.push(this.curIndent)\n};\n\nLooseParser.prototype.popCx = function popCx () {\n  this.curIndent = this.context.pop()\n};\n\nLooseParser.prototype.lineEnd = function lineEnd (pos) {\n  while (pos < this.input.length && !__acorn.isNewLine(this.input.charCodeAt(pos))) ++pos\n  return pos\n};\n\nLooseParser.prototype.indentationAfter = function indentationAfter (pos) {\n    var this$1 = this;\n\n  for (var count = 0;; ++pos) {\n    var ch = this$1.input.charCodeAt(pos)\n    if (ch === 32) ++count\n    else if (ch === 9) count += this$1.options.tabSize\n    else return count\n  }\n};\n\nLooseParser.prototype.closes = function closes (closeTok, indent, line, blockHeuristic) {\n  if (this.tok.type === closeTok || this.tok.type === __acorn.tokTypes.eof) return true\n  return line != this.curLineStart && this.curIndent < indent && this.tokenStartsLine() &&\n    (!blockHeuristic || this.nextLineStart >= this.input.length ||\n     this.indentationAfter(this.nextLineStart) < indent)\n};\n\nLooseParser.prototype.tokenStartsLine = function tokenStartsLine () {\n    var this$1 = this;\n\n  for (var p = this.tok.start - 1; p >= this.curLineStart; --p) {\n    var ch = this$1.input.charCodeAt(p)\n    if (ch !== 9 && ch !== 32) return false\n  }\n  return true\n};\n\nLooseParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name])\n};\n\nLooseParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = pluginsLoose[name]\n    if (!plugin) throw new Error(\"Plugin '\" + name + \"' not found\")\n    plugin(this$1, pluginConfigs[name])\n  }\n};\n\nvar lp = LooseParser.prototype\n\nfunction isSpace(ch) {\n  return (ch < 14 && ch > 8) || ch === 32 || ch === 160 || __acorn.isNewLine(ch)\n}\n\nlp.next = function() {\n  var this$1 = this;\n\n  this.last = this.tok\n  if (this.ahead.length)\n    this.tok = this.ahead.shift()\n  else\n    this.tok = this.readToken()\n\n  if (this.tok.start >= this.nextLineStart) {\n    while (this.tok.start >= this.nextLineStart) {\n      this$1.curLineStart = this$1.nextLineStart\n      this$1.nextLineStart = this$1.lineEnd(this$1.curLineStart) + 1\n    }\n    this.curIndent = this.indentationAfter(this.curLineStart)\n  }\n}\n\nlp.readToken = function() {\n  var this$1 = this;\n\n  for (;;) {\n    try {\n      this$1.toks.next()\n      if (this$1.toks.type === __acorn.tokTypes.dot &&\n          this$1.input.substr(this$1.toks.end, 1) === \".\" &&\n          this$1.options.ecmaVersion >= 6) {\n        this$1.toks.end++\n        this$1.toks.type = __acorn.tokTypes.ellipsis\n      }\n      return new __acorn.Token(this$1.toks)\n    } catch (e) {\n      if (!(e instanceof SyntaxError)) throw e\n\n      // Try to skip some text, based on the error message, and then continue\n      var msg = e.message, pos = e.raisedAt, replace = true\n      if (/unterminated/i.test(msg)) {\n        pos = this$1.lineEnd(e.pos + 1)\n        if (/string/.test(msg)) {\n          replace = {start: e.pos, end: pos, type: __acorn.tokTypes.string, value: this$1.input.slice(e.pos + 1, pos)}\n        } else if (/regular expr/i.test(msg)) {\n          var re = this$1.input.slice(e.pos, pos)\n          try { re = new RegExp(re) } catch (e) { /* ignore compilation error due to new syntax */ }\n          replace = {start: e.pos, end: pos, type: __acorn.tokTypes.regexp, value: re}\n        } else if (/template/.test(msg)) {\n          replace = {\n            start: e.pos,\n            end: pos,\n            type: __acorn.tokTypes.template,\n            value: this$1.input.slice(e.pos, pos)\n          }\n        } else {\n          replace = false\n        }\n      } else if (/invalid (unicode|regexp|number)|expecting unicode|octal literal|is reserved|directly after number|expected number in radix/i.test(msg)) {\n        while (pos < this.input.length && !isSpace(this.input.charCodeAt(pos))) ++pos\n      } else if (/character escape|expected hexadecimal/i.test(msg)) {\n        while (pos < this.input.length) {\n          var ch = this$1.input.charCodeAt(pos++)\n          if (ch === 34 || ch === 39 || __acorn.isNewLine(ch)) break\n        }\n      } else if (/unexpected character/i.test(msg)) {\n        pos++\n        replace = false\n      } else if (/regular expression/i.test(msg)) {\n        replace = true\n      } else {\n        throw e\n      }\n      this$1.resetTo(pos)\n      if (replace === true) replace = {start: pos, end: pos, type: __acorn.tokTypes.name, value: \"✖\"}\n      if (replace) {\n        if (this$1.options.locations)\n          replace.loc = new __acorn.SourceLocation(\n            this$1.toks,\n            __acorn.getLineInfo(this$1.input, replace.start),\n            __acorn.getLineInfo(this$1.input, replace.end))\n        return replace\n      }\n    }\n  }\n}\n\nlp.resetTo = function(pos) {\n  var this$1 = this;\n\n  this.toks.pos = pos\n  var ch = this.input.charAt(pos - 1)\n  this.toks.exprAllowed = !ch || /[[{(,;:?/*=+\\-~!|&%^<>]/.test(ch) ||\n    /[enwfd]/.test(ch) &&\n    /\\b(keywords|case|else|return|throw|new|in|(instance|type)of|delete|void)$/.test(this.input.slice(pos - 10, pos))\n\n  if (this.options.locations) {\n    this.toks.curLine = 1\n    this.toks.lineStart = __acorn.lineBreakG.lastIndex = 0\n    var match\n    while ((match = __acorn.lineBreakG.exec(this.input)) && match.index < pos) {\n      ++this$1.toks.curLine\n      this$1.toks.lineStart = match.index + match[0].length\n    }\n  }\n}\n\nlp.lookAhead = function(n) {\n  var this$1 = this;\n\n  while (n > this.ahead.length)\n    this$1.ahead.push(this$1.readToken())\n  return this.ahead[n - 1]\n}\n\nfunction isDummy(node) { return node.name == \"✖\" }\n\nvar lp$1 = LooseParser.prototype\n\nlp$1.parseTopLevel = function() {\n  var this$1 = this;\n\n  var node = this.startNodeAt(this.options.locations ? [0, __acorn.getLineInfo(this.input, 0)] : 0)\n  node.body = []\n  while (this.tok.type !== __acorn.tokTypes.eof) node.body.push(this$1.parseStatement())\n  this.last = this.tok\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType\n  }\n  return this.finishNode(node, \"Program\")\n}\n\nlp$1.parseStatement = function() {\n  var this$1 = this;\n\n  var starttype = this.tok.type, node = this.startNode(), kind\n\n  if (this.toks.isLet()) {\n    starttype = __acorn.tokTypes._var\n    kind = \"let\"\n  }\n\n  switch (starttype) {\n  case __acorn.tokTypes._break: case __acorn.tokTypes._continue:\n    this.next()\n    var isBreak = starttype === __acorn.tokTypes._break\n    if (this.semicolon() || this.canInsertSemicolon()) {\n      node.label = null\n    } else {\n      node.label = this.tok.type === __acorn.tokTypes.name ? this.parseIdent() : null\n      this.semicolon()\n    }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n\n  case __acorn.tokTypes._debugger:\n    this.next()\n    this.semicolon()\n    return this.finishNode(node, \"DebuggerStatement\")\n\n  case __acorn.tokTypes._do:\n    this.next()\n    node.body = this.parseStatement()\n    node.test = this.eat(__acorn.tokTypes._while) ? this.parseParenExpression() : this.dummyIdent()\n    this.semicolon()\n    return this.finishNode(node, \"DoWhileStatement\")\n\n  case __acorn.tokTypes._for:\n    this.next()\n    this.pushCx()\n    this.expect(__acorn.tokTypes.parenL)\n    if (this.tok.type === __acorn.tokTypes.semi) return this.parseFor(node, null)\n    var isLet = this.toks.isLet()\n    if (isLet || this.tok.type === __acorn.tokTypes._var || this.tok.type === __acorn.tokTypes._const) {\n      var init$1 = this.parseVar(true, isLet ? \"let\" : this.tok.value)\n      if (init$1.declarations.length === 1 && (this.tok.type === __acorn.tokTypes._in || this.isContextual(\"of\"))) {\n        return this.parseForIn(node, init$1)\n      }\n      return this.parseFor(node, init$1)\n    }\n    var init = this.parseExpression(true)\n    if (this.tok.type === __acorn.tokTypes._in || this.isContextual(\"of\"))\n      return this.parseForIn(node, this.toAssignable(init))\n    return this.parseFor(node, init)\n\n  case __acorn.tokTypes._function:\n    this.next()\n    return this.parseFunction(node, true)\n\n  case __acorn.tokTypes._if:\n    this.next()\n    node.test = this.parseParenExpression()\n    node.consequent = this.parseStatement()\n    node.alternate = this.eat(__acorn.tokTypes._else) ? this.parseStatement() : null\n    return this.finishNode(node, \"IfStatement\")\n\n  case __acorn.tokTypes._return:\n    this.next()\n    if (this.eat(__acorn.tokTypes.semi) || this.canInsertSemicolon()) node.argument = null\n    else { node.argument = this.parseExpression(); this.semicolon() }\n    return this.finishNode(node, \"ReturnStatement\")\n\n  case __acorn.tokTypes._switch:\n    var blockIndent = this.curIndent, line = this.curLineStart\n    this.next()\n    node.discriminant = this.parseParenExpression()\n    node.cases = []\n    this.pushCx()\n    this.expect(__acorn.tokTypes.braceL)\n\n    var cur\n    while (!this.closes(__acorn.tokTypes.braceR, blockIndent, line, true)) {\n      if (this$1.tok.type === __acorn.tokTypes._case || this$1.tok.type === __acorn.tokTypes._default) {\n        var isCase = this$1.tok.type === __acorn.tokTypes._case\n        if (cur) this$1.finishNode(cur, \"SwitchCase\")\n        node.cases.push(cur = this$1.startNode())\n        cur.consequent = []\n        this$1.next()\n        if (isCase) cur.test = this$1.parseExpression()\n        else cur.test = null\n        this$1.expect(__acorn.tokTypes.colon)\n      } else {\n        if (!cur) {\n          node.cases.push(cur = this$1.startNode())\n          cur.consequent = []\n          cur.test = null\n        }\n        cur.consequent.push(this$1.parseStatement())\n      }\n    }\n    if (cur) this.finishNode(cur, \"SwitchCase\")\n    this.popCx()\n    this.eat(__acorn.tokTypes.braceR)\n    return this.finishNode(node, \"SwitchStatement\")\n\n  case __acorn.tokTypes._throw:\n    this.next()\n    node.argument = this.parseExpression()\n    this.semicolon()\n    return this.finishNode(node, \"ThrowStatement\")\n\n  case __acorn.tokTypes._try:\n    this.next()\n    node.block = this.parseBlock()\n    node.handler = null\n    if (this.tok.type === __acorn.tokTypes._catch) {\n      var clause = this.startNode()\n      this.next()\n      this.expect(__acorn.tokTypes.parenL)\n      clause.param = this.toAssignable(this.parseExprAtom(), true)\n      this.expect(__acorn.tokTypes.parenR)\n      clause.body = this.parseBlock()\n      node.handler = this.finishNode(clause, \"CatchClause\")\n    }\n    node.finalizer = this.eat(__acorn.tokTypes._finally) ? this.parseBlock() : null\n    if (!node.handler && !node.finalizer) return node.block\n    return this.finishNode(node, \"TryStatement\")\n\n  case __acorn.tokTypes._var:\n  case __acorn.tokTypes._const:\n    return this.parseVar(false, kind || this.tok.value)\n\n  case __acorn.tokTypes._while:\n    this.next()\n    node.test = this.parseParenExpression()\n    node.body = this.parseStatement()\n    return this.finishNode(node, \"WhileStatement\")\n\n  case __acorn.tokTypes._with:\n    this.next()\n    node.object = this.parseParenExpression()\n    node.body = this.parseStatement()\n    return this.finishNode(node, \"WithStatement\")\n\n  case __acorn.tokTypes.braceL:\n    return this.parseBlock()\n\n  case __acorn.tokTypes.semi:\n    this.next()\n    return this.finishNode(node, \"EmptyStatement\")\n\n  case __acorn.tokTypes._class:\n    return this.parseClass(true)\n\n  case __acorn.tokTypes._import:\n    return this.parseImport()\n\n  case __acorn.tokTypes._export:\n    return this.parseExport()\n\n  default:\n    if (this.toks.isAsyncFunction()) {\n      this.next()\n      this.next()\n      return this.parseFunction(node, true, true)\n    }\n    var expr = this.parseExpression()\n    if (isDummy(expr)) {\n      this.next()\n      if (this.tok.type === __acorn.tokTypes.eof) return this.finishNode(node, \"EmptyStatement\")\n      return this.parseStatement()\n    } else if (starttype === __acorn.tokTypes.name && expr.type === \"Identifier\" && this.eat(__acorn.tokTypes.colon)) {\n      node.body = this.parseStatement()\n      node.label = expr\n      return this.finishNode(node, \"LabeledStatement\")\n    } else {\n      node.expression = expr\n      this.semicolon()\n      return this.finishNode(node, \"ExpressionStatement\")\n    }\n  }\n}\n\nlp$1.parseBlock = function() {\n  var this$1 = this;\n\n  var node = this.startNode()\n  this.pushCx()\n  this.expect(__acorn.tokTypes.braceL)\n  var blockIndent = this.curIndent, line = this.curLineStart\n  node.body = []\n  while (!this.closes(__acorn.tokTypes.braceR, blockIndent, line, true))\n    node.body.push(this$1.parseStatement())\n  this.popCx()\n  this.eat(__acorn.tokTypes.braceR)\n  return this.finishNode(node, \"BlockStatement\")\n}\n\nlp$1.parseFor = function(node, init) {\n  node.init = init\n  node.test = node.update = null\n  if (this.eat(__acorn.tokTypes.semi) && this.tok.type !== __acorn.tokTypes.semi) node.test = this.parseExpression()\n  if (this.eat(__acorn.tokTypes.semi) && this.tok.type !== __acorn.tokTypes.parenR) node.update = this.parseExpression()\n  this.popCx()\n  this.expect(__acorn.tokTypes.parenR)\n  node.body = this.parseStatement()\n  return this.finishNode(node, \"ForStatement\")\n}\n\nlp$1.parseForIn = function(node, init) {\n  var type = this.tok.type === __acorn.tokTypes._in ? \"ForInStatement\" : \"ForOfStatement\"\n  this.next()\n  node.left = init\n  node.right = this.parseExpression()\n  this.popCx()\n  this.expect(__acorn.tokTypes.parenR)\n  node.body = this.parseStatement()\n  return this.finishNode(node, type)\n}\n\nlp$1.parseVar = function(noIn, kind) {\n  var this$1 = this;\n\n  var node = this.startNode()\n  node.kind = kind\n  this.next()\n  node.declarations = []\n  do {\n    var decl = this$1.startNode()\n    decl.id = this$1.options.ecmaVersion >= 6 ? this$1.toAssignable(this$1.parseExprAtom(), true) : this$1.parseIdent()\n    decl.init = this$1.eat(__acorn.tokTypes.eq) ? this$1.parseMaybeAssign(noIn) : null\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"))\n  } while (this.eat(__acorn.tokTypes.comma))\n  if (!node.declarations.length) {\n    var decl$1 = this.startNode()\n    decl$1.id = this.dummyIdent()\n    node.declarations.push(this.finishNode(decl$1, \"VariableDeclarator\"))\n  }\n  if (!noIn) this.semicolon()\n  return this.finishNode(node, \"VariableDeclaration\")\n}\n\nlp$1.parseClass = function(isStatement) {\n  var this$1 = this;\n\n  var node = this.startNode()\n  this.next()\n  if (this.tok.type === __acorn.tokTypes.name) node.id = this.parseIdent()\n  else if (isStatement === true) node.id = this.dummyIdent()\n  else node.id = null\n  node.superClass = this.eat(__acorn.tokTypes._extends) ? this.parseExpression() : null\n  node.body = this.startNode()\n  node.body.body = []\n  this.pushCx()\n  var indent = this.curIndent + 1, line = this.curLineStart\n  this.eat(__acorn.tokTypes.braceL)\n  if (this.curIndent + 1 < indent) { indent = this.curIndent; line = this.curLineStart }\n  while (!this.closes(__acorn.tokTypes.braceR, indent, line)) {\n    if (this$1.semicolon()) continue\n    var method = this$1.startNode(), isGenerator, isAsync\n    if (this$1.options.ecmaVersion >= 6) {\n      method.static = false\n      isGenerator = this$1.eat(__acorn.tokTypes.star)\n    }\n    this$1.parsePropertyName(method)\n    if (isDummy(method.key)) { if (isDummy(this$1.parseMaybeAssign())) this$1.next(); this$1.eat(__acorn.tokTypes.comma); continue }\n    if (method.key.type === \"Identifier\" && !method.computed && method.key.name === \"static\" &&\n        (this$1.tok.type != __acorn.tokTypes.parenL && this$1.tok.type != __acorn.tokTypes.braceL)) {\n      method.static = true\n      isGenerator = this$1.eat(__acorn.tokTypes.star)\n      this$1.parsePropertyName(method)\n    } else {\n      method.static = false\n    }\n    if (!method.computed &&\n        method.key.type === \"Identifier\" && method.key.name === \"async\" && this$1.tok.type !== __acorn.tokTypes.parenL &&\n        !this$1.canInsertSemicolon()) {\n      this$1.parsePropertyName(method)\n      isAsync = true\n    } else {\n      isAsync = false\n    }\n    if (this$1.options.ecmaVersion >= 5 && method.key.type === \"Identifier\" &&\n        !method.computed && (method.key.name === \"get\" || method.key.name === \"set\") &&\n        this$1.tok.type !== __acorn.tokTypes.parenL && this$1.tok.type !== __acorn.tokTypes.braceL) {\n      method.kind = method.key.name\n      this$1.parsePropertyName(method)\n      method.value = this$1.parseMethod(false)\n    } else {\n      if (!method.computed && !method.static && !isGenerator && !isAsync && (\n        method.key.type === \"Identifier\" && method.key.name === \"constructor\" ||\n          method.key.type === \"Literal\" && method.key.value === \"constructor\")) {\n        method.kind = \"constructor\"\n      } else {\n        method.kind = \"method\"\n      }\n      method.value = this$1.parseMethod(isGenerator, isAsync)\n    }\n    node.body.body.push(this$1.finishNode(method, \"MethodDefinition\"))\n  }\n  this.popCx()\n  if (!this.eat(__acorn.tokTypes.braceR)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start\n    if (this.options.locations) this.last.loc.end = this.tok.loc.start\n  }\n  this.semicolon()\n  this.finishNode(node.body, \"ClassBody\")\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n}\n\nlp$1.parseFunction = function(node, isStatement, isAsync) {\n  var oldInAsync = this.inAsync\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = this.eat(__acorn.tokTypes.star)\n  }\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync\n  }\n  if (this.tok.type === __acorn.tokTypes.name) node.id = this.parseIdent()\n  else if (isStatement === true) node.id = this.dummyIdent()\n  this.inAsync = node.async\n  node.params = this.parseFunctionParams()\n  node.body = this.parseBlock()\n  this.inAsync = oldInAsync\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n}\n\nlp$1.parseExport = function() {\n  var node = this.startNode()\n  this.next()\n  if (this.eat(__acorn.tokTypes.star)) {\n    node.source = this.eatContextual(\"from\") ? this.parseExprAtom() : this.dummyString()\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(__acorn.tokTypes._default)) {\n    // export default (function foo() {}) // This is FunctionExpression.\n    var isAsync\n    if (this.tok.type === __acorn.tokTypes._function || (isAsync = this.toks.isAsyncFunction())) {\n      var fNode = this.startNode()\n      this.next()\n      if (isAsync) this.next()\n      node.declaration = this.parseFunction(fNode, \"nullableID\", isAsync)\n    } else if (this.tok.type === __acorn.tokTypes._class) {\n      node.declaration = this.parseClass(\"nullableID\")\n    } else {\n      node.declaration = this.parseMaybeAssign()\n      this.semicolon()\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  if (this.tok.type.keyword || this.toks.isLet() || this.toks.isAsyncFunction()) {\n    node.declaration = this.parseStatement()\n    node.specifiers = []\n    node.source = null\n  } else {\n    node.declaration = null\n    node.specifiers = this.parseExportSpecifierList()\n    node.source = this.eatContextual(\"from\") ? this.parseExprAtom() : null\n    this.semicolon()\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n}\n\nlp$1.parseImport = function() {\n  var node = this.startNode()\n  this.next()\n  if (this.tok.type === __acorn.tokTypes.string) {\n    node.specifiers = []\n    node.source = this.parseExprAtom()\n    node.kind = \"\"\n  } else {\n    var elt\n    if (this.tok.type === __acorn.tokTypes.name && this.tok.value !== \"from\") {\n      elt = this.startNode()\n      elt.local = this.parseIdent()\n      this.finishNode(elt, \"ImportDefaultSpecifier\")\n      this.eat(__acorn.tokTypes.comma)\n    }\n    node.specifiers = this.parseImportSpecifierList()\n    node.source = this.eatContextual(\"from\") && this.tok.type == __acorn.tokTypes.string ? this.parseExprAtom() : this.dummyString()\n    if (elt) node.specifiers.unshift(elt)\n  }\n  this.semicolon()\n  return this.finishNode(node, \"ImportDeclaration\")\n}\n\nlp$1.parseImportSpecifierList = function() {\n  var this$1 = this;\n\n  var elts = []\n  if (this.tok.type === __acorn.tokTypes.star) {\n    var elt = this.startNode()\n    this.next()\n    elt.local = this.eatContextual(\"as\") ? this.parseIdent() : this.dummyIdent()\n    elts.push(this.finishNode(elt, \"ImportNamespaceSpecifier\"))\n  } else {\n    var indent = this.curIndent, line = this.curLineStart, continuedLine = this.nextLineStart\n    this.pushCx()\n    this.eat(__acorn.tokTypes.braceL)\n    if (this.curLineStart > continuedLine) continuedLine = this.curLineStart\n    while (!this.closes(__acorn.tokTypes.braceR, indent + (this.curLineStart <= continuedLine ? 1 : 0), line)) {\n      var elt$1 = this$1.startNode()\n      if (this$1.eat(__acorn.tokTypes.star)) {\n        elt$1.local = this$1.eatContextual(\"as\") ? this$1.parseIdent() : this$1.dummyIdent()\n        this$1.finishNode(elt$1, \"ImportNamespaceSpecifier\")\n      } else {\n        if (this$1.isContextual(\"from\")) break\n        elt$1.imported = this$1.parseIdent()\n        if (isDummy(elt$1.imported)) break\n        elt$1.local = this$1.eatContextual(\"as\") ? this$1.parseIdent() : elt$1.imported\n        this$1.finishNode(elt$1, \"ImportSpecifier\")\n      }\n      elts.push(elt$1)\n      this$1.eat(__acorn.tokTypes.comma)\n    }\n    this.eat(__acorn.tokTypes.braceR)\n    this.popCx()\n  }\n  return elts\n}\n\nlp$1.parseExportSpecifierList = function() {\n  var this$1 = this;\n\n  var elts = []\n  var indent = this.curIndent, line = this.curLineStart, continuedLine = this.nextLineStart\n  this.pushCx()\n  this.eat(__acorn.tokTypes.braceL)\n  if (this.curLineStart > continuedLine) continuedLine = this.curLineStart\n  while (!this.closes(__acorn.tokTypes.braceR, indent + (this.curLineStart <= continuedLine ? 1 : 0), line)) {\n    if (this$1.isContextual(\"from\")) break\n    var elt = this$1.startNode()\n    elt.local = this$1.parseIdent()\n    if (isDummy(elt.local)) break\n    elt.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent() : elt.local\n    this$1.finishNode(elt, \"ExportSpecifier\")\n    elts.push(elt)\n    this$1.eat(__acorn.tokTypes.comma)\n  }\n  this.eat(__acorn.tokTypes.braceR)\n  this.popCx()\n  return elts\n}\n\nvar lp$2 = LooseParser.prototype\n\nlp$2.checkLVal = function(expr) {\n  if (!expr) return expr\n  switch (expr.type) {\n  case \"Identifier\":\n  case \"MemberExpression\":\n    return expr\n\n  case \"ParenthesizedExpression\":\n    expr.expression = this.checkLVal(expr.expression)\n    return expr\n\n  default:\n    return this.dummyIdent()\n  }\n}\n\nlp$2.parseExpression = function(noIn) {\n  var this$1 = this;\n\n  var start = this.storeCurrentPos()\n  var expr = this.parseMaybeAssign(noIn)\n  if (this.tok.type === __acorn.tokTypes.comma) {\n    var node = this.startNodeAt(start)\n    node.expressions = [expr]\n    while (this.eat(__acorn.tokTypes.comma)) node.expressions.push(this$1.parseMaybeAssign(noIn))\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n}\n\nlp$2.parseParenExpression = function() {\n  this.pushCx()\n  this.expect(__acorn.tokTypes.parenL)\n  var val = this.parseExpression()\n  this.popCx()\n  this.expect(__acorn.tokTypes.parenR)\n  return val\n}\n\nlp$2.parseMaybeAssign = function(noIn) {\n  if (this.toks.isContextual(\"yield\")) {\n    var node = this.startNode()\n    this.next()\n    if (this.semicolon() || this.canInsertSemicolon() || (this.tok.type != __acorn.tokTypes.star && !this.tok.type.startsExpr)) {\n      node.delegate = false\n      node.argument = null\n    } else {\n      node.delegate = this.eat(__acorn.tokTypes.star)\n      node.argument = this.parseMaybeAssign()\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  }\n\n  var start = this.storeCurrentPos()\n  var left = this.parseMaybeConditional(noIn)\n  if (this.tok.type.isAssign) {\n    var node$1 = this.startNodeAt(start)\n    node$1.operator = this.tok.value\n    node$1.left = this.tok.type === __acorn.tokTypes.eq ? this.toAssignable(left) : this.checkLVal(left)\n    this.next()\n    node$1.right = this.parseMaybeAssign(noIn)\n    return this.finishNode(node$1, \"AssignmentExpression\")\n  }\n  return left\n}\n\nlp$2.parseMaybeConditional = function(noIn) {\n  var start = this.storeCurrentPos()\n  var expr = this.parseExprOps(noIn)\n  if (this.eat(__acorn.tokTypes.question)) {\n    var node = this.startNodeAt(start)\n    node.test = expr\n    node.consequent = this.parseMaybeAssign()\n    node.alternate = this.expect(__acorn.tokTypes.colon) ? this.parseMaybeAssign(noIn) : this.dummyIdent()\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n}\n\nlp$2.parseExprOps = function(noIn) {\n  var start = this.storeCurrentPos()\n  var indent = this.curIndent, line = this.curLineStart\n  return this.parseExprOp(this.parseMaybeUnary(false), start, -1, noIn, indent, line)\n}\n\nlp$2.parseExprOp = function(left, start, minPrec, noIn, indent, line) {\n  if (this.curLineStart != line && this.curIndent < indent && this.tokenStartsLine()) return left\n  var prec = this.tok.type.binop\n  if (prec != null && (!noIn || this.tok.type !== __acorn.tokTypes._in)) {\n    if (prec > minPrec) {\n      var node = this.startNodeAt(start)\n      node.left = left\n      node.operator = this.tok.value\n      this.next()\n      if (this.curLineStart != line && this.curIndent < indent && this.tokenStartsLine()) {\n        node.right = this.dummyIdent()\n      } else {\n        var rightStart = this.storeCurrentPos()\n        node.right = this.parseExprOp(this.parseMaybeUnary(false), rightStart, prec, noIn, indent, line)\n      }\n      this.finishNode(node, /&&|\\|\\|/.test(node.operator) ? \"LogicalExpression\" : \"BinaryExpression\")\n      return this.parseExprOp(node, start, minPrec, noIn, indent, line)\n    }\n  }\n  return left\n}\n\nlp$2.parseMaybeUnary = function(sawUnary) {\n  var this$1 = this;\n\n  var start = this.storeCurrentPos(), expr\n  if (this.options.ecmaVersion >= 8 && this.inAsync && this.toks.isContextual(\"await\")) {\n    expr = this.parseAwait()\n    sawUnary = true\n  } else if (this.tok.type.prefix) {\n    var node = this.startNode(), update = this.tok.type === __acorn.tokTypes.incDec\n    if (!update) sawUnary = true\n    node.operator = this.tok.value\n    node.prefix = true\n    this.next()\n    node.argument = this.parseMaybeUnary(true)\n    if (update) node.argument = this.checkLVal(node.argument)\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\")\n  } else if (this.tok.type === __acorn.tokTypes.ellipsis) {\n    var node$1 = this.startNode()\n    this.next()\n    node$1.argument = this.parseMaybeUnary(sawUnary)\n    expr = this.finishNode(node$1, \"SpreadElement\")\n  } else {\n    expr = this.parseExprSubscripts()\n    while (this.tok.type.postfix && !this.canInsertSemicolon()) {\n      var node$2 = this$1.startNodeAt(start)\n      node$2.operator = this$1.tok.value\n      node$2.prefix = false\n      node$2.argument = this$1.checkLVal(expr)\n      this$1.next()\n      expr = this$1.finishNode(node$2, \"UpdateExpression\")\n    }\n  }\n\n  if (!sawUnary && this.eat(__acorn.tokTypes.starstar)) {\n    var node$3 = this.startNodeAt(start)\n    node$3.operator = \"**\"\n    node$3.left = expr\n    node$3.right = this.parseMaybeUnary(false)\n    return this.finishNode(node$3, \"BinaryExpression\")\n  }\n\n  return expr\n}\n\nlp$2.parseExprSubscripts = function() {\n  var start = this.storeCurrentPos()\n  return this.parseSubscripts(this.parseExprAtom(), start, false, this.curIndent, this.curLineStart)\n}\n\nlp$2.parseSubscripts = function(base, start, noCalls, startIndent, line) {\n  var this$1 = this;\n\n  for (;;) {\n    if (this$1.curLineStart != line && this$1.curIndent <= startIndent && this$1.tokenStartsLine()) {\n      if (this$1.tok.type == __acorn.tokTypes.dot && this$1.curIndent == startIndent)\n        --startIndent\n      else\n        return base\n    }\n\n    var maybeAsyncArrow = base.type === \"Identifier\" && base.name === \"async\" && !this$1.canInsertSemicolon()\n\n    if (this$1.eat(__acorn.tokTypes.dot)) {\n      var node = this$1.startNodeAt(start)\n      node.object = base\n      if (this$1.curLineStart != line && this$1.curIndent <= startIndent && this$1.tokenStartsLine())\n        node.property = this$1.dummyIdent()\n      else\n        node.property = this$1.parsePropertyAccessor() || this$1.dummyIdent()\n      node.computed = false\n      base = this$1.finishNode(node, \"MemberExpression\")\n    } else if (this$1.tok.type == __acorn.tokTypes.bracketL) {\n      this$1.pushCx()\n      this$1.next()\n      var node$1 = this$1.startNodeAt(start)\n      node$1.object = base\n      node$1.property = this$1.parseExpression()\n      node$1.computed = true\n      this$1.popCx()\n      this$1.expect(__acorn.tokTypes.bracketR)\n      base = this$1.finishNode(node$1, \"MemberExpression\")\n    } else if (!noCalls && this$1.tok.type == __acorn.tokTypes.parenL) {\n      var exprList = this$1.parseExprList(__acorn.tokTypes.parenR)\n      if (maybeAsyncArrow && this$1.eat(__acorn.tokTypes.arrow))\n        return this$1.parseArrowExpression(this$1.startNodeAt(start), exprList, true)\n      var node$2 = this$1.startNodeAt(start)\n      node$2.callee = base\n      node$2.arguments = exprList\n      base = this$1.finishNode(node$2, \"CallExpression\")\n    } else if (this$1.tok.type == __acorn.tokTypes.backQuote) {\n      var node$3 = this$1.startNodeAt(start)\n      node$3.tag = base\n      node$3.quasi = this$1.parseTemplate()\n      base = this$1.finishNode(node$3, \"TaggedTemplateExpression\")\n    } else {\n      return base\n    }\n  }\n}\n\nlp$2.parseExprAtom = function() {\n  var node\n  switch (this.tok.type) {\n  case __acorn.tokTypes._this:\n  case __acorn.tokTypes._super:\n    var type = this.tok.type === __acorn.tokTypes._this ? \"ThisExpression\" : \"Super\"\n    node = this.startNode()\n    this.next()\n    return this.finishNode(node, type)\n\n  case __acorn.tokTypes.name:\n    var start = this.storeCurrentPos()\n    var id = this.parseIdent()\n    var isAsync = false\n    if (id.name === \"async\" && !this.canInsertSemicolon()) {\n      if (this.eat(__acorn.tokTypes._function))\n        return this.parseFunction(this.startNodeAt(start), false, true)\n      if (this.tok.type === __acorn.tokTypes.name) {\n        id = this.parseIdent()\n        isAsync = true\n      }\n    }\n    return this.eat(__acorn.tokTypes.arrow) ? this.parseArrowExpression(this.startNodeAt(start), [id], isAsync) : id\n\n  case __acorn.tokTypes.regexp:\n    node = this.startNode()\n    var val = this.tok.value\n    node.regex = {pattern: val.pattern, flags: val.flags}\n    node.value = val.value\n    node.raw = this.input.slice(this.tok.start, this.tok.end)\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case __acorn.tokTypes.num: case __acorn.tokTypes.string:\n    node = this.startNode()\n    node.value = this.tok.value\n    node.raw = this.input.slice(this.tok.start, this.tok.end)\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case __acorn.tokTypes._null: case __acorn.tokTypes._true: case __acorn.tokTypes._false:\n    node = this.startNode()\n    node.value = this.tok.type === __acorn.tokTypes._null ? null : this.tok.type === __acorn.tokTypes._true\n    node.raw = this.tok.type.keyword\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case __acorn.tokTypes.parenL:\n    var parenStart = this.storeCurrentPos()\n    this.next()\n    var inner = this.parseExpression()\n    this.expect(__acorn.tokTypes.parenR)\n    if (this.eat(__acorn.tokTypes.arrow)) {\n      // (a,)=>a // SequenceExpression makes dummy in the last hole. Drop the dummy.\n      var params = inner.expressions || [inner]\n      if (params.length && isDummy(params[params.length - 1]))\n        params.pop()\n      return this.parseArrowExpression(this.startNodeAt(parenStart), params)\n    }\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(parenStart)\n      par.expression = inner\n      inner = this.finishNode(par, \"ParenthesizedExpression\")\n    }\n    return inner\n\n  case __acorn.tokTypes.bracketL:\n    node = this.startNode()\n    node.elements = this.parseExprList(__acorn.tokTypes.bracketR, true)\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case __acorn.tokTypes.braceL:\n    return this.parseObj()\n\n  case __acorn.tokTypes._class:\n    return this.parseClass(false)\n\n  case __acorn.tokTypes._function:\n    node = this.startNode()\n    this.next()\n    return this.parseFunction(node, false)\n\n  case __acorn.tokTypes._new:\n    return this.parseNew()\n\n  case __acorn.tokTypes.backQuote:\n    return this.parseTemplate()\n\n  default:\n    return this.dummyIdent()\n  }\n}\n\nlp$2.parseNew = function() {\n  var node = this.startNode(), startIndent = this.curIndent, line = this.curLineStart\n  var meta = this.parseIdent(true)\n  if (this.options.ecmaVersion >= 6 && this.eat(__acorn.tokTypes.dot)) {\n    node.meta = meta\n    node.property = this.parseIdent(true)\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var start = this.storeCurrentPos()\n  node.callee = this.parseSubscripts(this.parseExprAtom(), start, true, startIndent, line)\n  if (this.tok.type == __acorn.tokTypes.parenL) {\n    node.arguments = this.parseExprList(__acorn.tokTypes.parenR)\n  } else {\n    node.arguments = []\n  }\n  return this.finishNode(node, \"NewExpression\")\n}\n\nlp$2.parseTemplateElement = function() {\n  var elem = this.startNode()\n  elem.value = {\n    raw: this.input.slice(this.tok.start, this.tok.end).replace(/\\r\\n?/g, \"\\n\"),\n    cooked: this.tok.value\n  }\n  this.next()\n  elem.tail = this.tok.type === __acorn.tokTypes.backQuote\n  return this.finishNode(elem, \"TemplateElement\")\n}\n\nlp$2.parseTemplate = function() {\n  var this$1 = this;\n\n  var node = this.startNode()\n  this.next()\n  node.expressions = []\n  var curElt = this.parseTemplateElement()\n  node.quasis = [curElt]\n  while (!curElt.tail) {\n    this$1.next()\n    node.expressions.push(this$1.parseExpression())\n    if (this$1.expect(__acorn.tokTypes.braceR)) {\n      curElt = this$1.parseTemplateElement()\n    } else {\n      curElt = this$1.startNode()\n      curElt.value = {cooked: \"\", raw: \"\"}\n      curElt.tail = true\n      this$1.finishNode(curElt, \"TemplateElement\")\n    }\n    node.quasis.push(curElt)\n  }\n  this.expect(__acorn.tokTypes.backQuote)\n  return this.finishNode(node, \"TemplateLiteral\")\n}\n\nlp$2.parseObj = function() {\n  var this$1 = this;\n\n  var node = this.startNode()\n  node.properties = []\n  this.pushCx()\n  var indent = this.curIndent + 1, line = this.curLineStart\n  this.eat(__acorn.tokTypes.braceL)\n  if (this.curIndent + 1 < indent) { indent = this.curIndent; line = this.curLineStart }\n  while (!this.closes(__acorn.tokTypes.braceR, indent, line)) {\n    var prop = this$1.startNode(), isGenerator, isAsync, start\n    if (this$1.options.ecmaVersion >= 6) {\n      start = this$1.storeCurrentPos()\n      prop.method = false\n      prop.shorthand = false\n      isGenerator = this$1.eat(__acorn.tokTypes.star)\n    }\n    this$1.parsePropertyName(prop)\n    if (!prop.computed &&\n        prop.key.type === \"Identifier\" && prop.key.name === \"async\" && this$1.tok.type !== __acorn.tokTypes.parenL &&\n        this$1.tok.type !== __acorn.tokTypes.colon && !this$1.canInsertSemicolon()) {\n      this$1.parsePropertyName(prop)\n      isAsync = true\n    } else {\n      isAsync = false\n    }\n    if (isDummy(prop.key)) { if (isDummy(this$1.parseMaybeAssign())) this$1.next(); this$1.eat(__acorn.tokTypes.comma); continue }\n    if (this$1.eat(__acorn.tokTypes.colon)) {\n      prop.kind = \"init\"\n      prop.value = this$1.parseMaybeAssign()\n    } else if (this$1.options.ecmaVersion >= 6 && (this$1.tok.type === __acorn.tokTypes.parenL || this$1.tok.type === __acorn.tokTypes.braceL)) {\n      prop.kind = \"init\"\n      prop.method = true\n      prop.value = this$1.parseMethod(isGenerator, isAsync)\n    } else if (this$1.options.ecmaVersion >= 5 && prop.key.type === \"Identifier\" &&\n               !prop.computed && (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this$1.tok.type != __acorn.tokTypes.comma && this$1.tok.type != __acorn.tokTypes.braceR)) {\n      prop.kind = prop.key.name\n      this$1.parsePropertyName(prop)\n      prop.value = this$1.parseMethod(false)\n    } else {\n      prop.kind = \"init\"\n      if (this$1.options.ecmaVersion >= 6) {\n        if (this$1.eat(__acorn.tokTypes.eq)) {\n          var assign = this$1.startNodeAt(start)\n          assign.operator = \"=\"\n          assign.left = prop.key\n          assign.right = this$1.parseMaybeAssign()\n          prop.value = this$1.finishNode(assign, \"AssignmentExpression\")\n        } else {\n          prop.value = prop.key\n        }\n      } else {\n        prop.value = this$1.dummyIdent()\n      }\n      prop.shorthand = true\n    }\n    node.properties.push(this$1.finishNode(prop, \"Property\"))\n    this$1.eat(__acorn.tokTypes.comma)\n  }\n  this.popCx()\n  if (!this.eat(__acorn.tokTypes.braceR)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start\n    if (this.options.locations) this.last.loc.end = this.tok.loc.start\n  }\n  return this.finishNode(node, \"ObjectExpression\")\n}\n\nlp$2.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(__acorn.tokTypes.bracketL)) {\n      prop.computed = true\n      prop.key = this.parseExpression()\n      this.expect(__acorn.tokTypes.bracketR)\n      return\n    } else {\n      prop.computed = false\n    }\n  }\n  var key = (this.tok.type === __acorn.tokTypes.num || this.tok.type === __acorn.tokTypes.string) ? this.parseExprAtom() : this.parseIdent()\n  prop.key = key || this.dummyIdent()\n}\n\nlp$2.parsePropertyAccessor = function() {\n  if (this.tok.type === __acorn.tokTypes.name || this.tok.type.keyword) return this.parseIdent()\n}\n\nlp$2.parseIdent = function() {\n  var name = this.tok.type === __acorn.tokTypes.name ? this.tok.value : this.tok.type.keyword\n  if (!name) return this.dummyIdent()\n  var node = this.startNode()\n  this.next()\n  node.name = name\n  return this.finishNode(node, \"Identifier\")\n}\n\nlp$2.initFunction = function(node) {\n  node.id = null\n  node.params = []\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false\n    node.expression = false\n  }\n  if (this.options.ecmaVersion >= 8)\n    node.async = false\n}\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\nlp$2.toAssignable = function(node, binding) {\n  var this$1 = this;\n\n  if (!node || node.type == \"Identifier\" || (node.type == \"MemberExpression\" && !binding)) {\n    // Okay\n  } else if (node.type == \"ParenthesizedExpression\") {\n    node.expression = this.toAssignable(node.expression, binding)\n  } else if (this.options.ecmaVersion < 6) {\n    return this.dummyIdent()\n  } else if (node.type == \"ObjectExpression\") {\n    node.type = \"ObjectPattern\"\n    var props = node.properties\n    for (var i = 0; i < props.length; i++)\n      props[i].value = this$1.toAssignable(props[i].value, binding)\n  } else if (node.type == \"ArrayExpression\") {\n    node.type = \"ArrayPattern\"\n    this.toAssignableList(node.elements, binding)\n  } else if (node.type == \"SpreadElement\") {\n    node.type = \"RestElement\"\n    node.argument = this.toAssignable(node.argument, binding)\n  } else if (node.type == \"AssignmentExpression\") {\n    node.type = \"AssignmentPattern\"\n    delete node.operator\n  } else {\n    return this.dummyIdent()\n  }\n  return node\n}\n\nlp$2.toAssignableList = function(exprList, binding) {\n  var this$1 = this;\n\n  for (var i = 0; i < exprList.length; i++)\n    exprList[i] = this$1.toAssignable(exprList[i], binding)\n  return exprList\n}\n\nlp$2.parseFunctionParams = function(params) {\n  params = this.parseExprList(__acorn.tokTypes.parenR)\n  return this.toAssignableList(params, true)\n}\n\nlp$2.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInAsync = this.inAsync\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 6)\n    node.generator = !!isGenerator\n  if (this.options.ecmaVersion >= 8)\n    node.async = !!isAsync\n  this.inAsync = node.async\n  node.params = this.parseFunctionParams()\n  node.expression = this.options.ecmaVersion >= 6 && this.tok.type !== __acorn.tokTypes.braceL\n  node.body = node.expression ? this.parseMaybeAssign() : this.parseBlock()\n  this.inAsync = oldInAsync\n  return this.finishNode(node, \"FunctionExpression\")\n}\n\nlp$2.parseArrowExpression = function(node, params, isAsync) {\n  var oldInAsync = this.inAsync\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 8)\n    node.async = !!isAsync\n  this.inAsync = node.async\n  node.params = this.toAssignableList(params, true)\n  node.expression = this.tok.type !== __acorn.tokTypes.braceL\n  node.body = node.expression ? this.parseMaybeAssign() : this.parseBlock()\n  this.inAsync = oldInAsync\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n}\n\nlp$2.parseExprList = function(close, allowEmpty) {\n  var this$1 = this;\n\n  this.pushCx()\n  var indent = this.curIndent, line = this.curLineStart, elts = []\n  this.next() // Opening bracket\n  while (!this.closes(close, indent + 1, line)) {\n    if (this$1.eat(__acorn.tokTypes.comma)) {\n      elts.push(allowEmpty ? null : this$1.dummyIdent())\n      continue\n    }\n    var elt = this$1.parseMaybeAssign()\n    if (isDummy(elt)) {\n      if (this$1.closes(close, indent, line)) break\n      this$1.next()\n    } else {\n      elts.push(elt)\n    }\n    this$1.eat(__acorn.tokTypes.comma)\n  }\n  this.popCx()\n  if (!this.eat(close)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start\n    if (this.options.locations) this.last.loc.end = this.tok.loc.start\n  }\n  return elts\n}\n\nlp$2.parseAwait = function() {\n  var node = this.startNode()\n  this.next()\n  node.argument = this.parseMaybeUnary()\n  return this.finishNode(node, \"AwaitExpression\")\n}\n\n// Acorn: Loose parser\n//\n// This module provides an alternative parser (`parse_dammit`) that\n// exposes that same interface as `parse`, but will try to parse\n// anything as JavaScript, repairing syntax error the best it can.\n// There are circumstances in which it will raise an error and give\n// up, but they are very rare. The resulting AST will be a mostly\n// valid JavaScript AST (as per the [Mozilla parser API][api], except\n// that:\n//\n// - Return outside functions is allowed\n//\n// - Label consistency (no conflicts, break only to existing labels)\n//   is not enforced.\n//\n// - Bogus Identifier nodes with a name of `\"✖\"` are inserted whenever\n//   the parser got too confused to return anything meaningful.\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n//\n// The expected use for this is to *first* try `acorn.parse`, and only\n// if that fails switch to `parse_dammit`. The loose parser might\n// parse badly indented code incorrectly, so **don't** use it as\n// your default parser.\n//\n// Quite a lot of acorn.js is duplicated here. The alternative was to\n// add a *lot* of extra cruft to that file, making it less readable\n// and slower. Copying and editing the code allowed me to make\n// invasive changes and simplifications without creating a complicated\n// tangle.\n\n__acorn.defaultOptions.tabSize = 4\n\n// eslint-disable-next-line camelcase\nfunction parse_dammit(input, options) {\n  var p = new LooseParser(input, options)\n  p.next()\n  return p.parseTopLevel()\n}\n\n__acorn.addLooseExports(parse_dammit, LooseParser, pluginsLoose)\n\nexports.parse_dammit = parse_dammit;\nexports.LooseParser = LooseParser;\nexports.pluginsLoose = pluginsLoose;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));"]}